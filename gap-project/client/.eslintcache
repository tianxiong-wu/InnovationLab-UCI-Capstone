[{"/Users/brenda_yangyh/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/index.js":"1","/Users/brenda_yangyh/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/reportWebVitals.js":"2","/Users/brenda_yangyh/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/App.js":"3","/Users/brenda_yangyh/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/nav/nav.js":"4","/Users/brenda_yangyh/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/FAQ/FAQ.js":"5"},{"size":500,"mtime":1610950017417,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1610950017418,"results":"8","hashOfConfig":"7"},{"size":1079,"mtime":1610950469454,"results":"9","hashOfConfig":"7"},{"size":4035,"mtime":1610950469454,"results":"10","hashOfConfig":"7"},{"size":5531,"mtime":1610950469455,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1d6thuf",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},"/Users/brenda_yangyh/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/index.js",[],["26","27"],"/Users/brenda_yangyh/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/reportWebVitals.js",[],"/Users/brenda_yangyh/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/App.js",["28","29"],"import logo from './logo.svg';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport './App.css';\nimport Nav from './components/nav/nav';\nimport FAQ from './pages/FAQ/FAQ';\nfunction App() {\n  return (<>\n\n  <Router>\n      <Nav/>  \n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/faq\">\n          <FAQ />\n          </Route>\n          <Route path=\"/users\">\n            User\n          </Route>\n          <Route path=\"/\">\n            Home\n          </Route>\n        </Switch>\n    </Router>\n \n \n    </>\n  );\n}\nexport default App;\n/**\n <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Hello world\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n */","/Users/brenda_yangyh/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/nav/nav.js",["30","31","32","33","34","35","36","37","38","39"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\nimport {\n  Link\n} from \"react-router-dom\";\nimport '../nav/nav.css'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function MenuAppBar() {\n  const classes = useStyles();\n  const [auth, setAuth] = React.useState(true);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleChange = (event) => {\n    setAuth(event.target.checked);\n  };\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n// replace all the <a> tags with <Link> to use react routing once the other pages are built.\n// add a react conditional rendering: if not logged in, only show the logo on the nav bar.\n// currently developed for desktop pov. Add css media queries to show a different nav format \n// if the size of the window is larger than a mobile size.\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar className=\"navStyling\">\n        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            Icon\n        </IconButton>\n        <Typography variant=\"h6\" className={classes.title}>\n            <Link className=\"navItem\" to=\"/\">Home</Link>\n        </Typography>\n        <Typography variant=\"h6\" className={classes.title}>\n            <Link className=\"navItem\" href=\"#\">Tutorials</Link>\n        </Typography>\n        <Typography variant=\"h6\" className={classes.title}>\n            <Link className=\"navItem\">Link</Link>\n        </Typography>\n        <Typography variant=\"h6\" className={classes.title}>\n            <Link className=\"navItem\"  to=\"/faq\">FAQ</Link>\n        </Typography>\n        <Typography variant=\"h6\" className={classes.title}>\n            <Link className=\"navItem\" href=\"#\">Contact</Link>\n        </Typography>\n          {auth && (\n            <div>\n              <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClose}>Jasmine Miller</MenuItem>\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>Settings</MenuItem>\n                <MenuItem onClick={handleClose}>Log Out</MenuItem>\n              </Menu>\n            </div>\n          )}\n          \n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\n/**\n       <FormGroup>\n        <FormControlLabel\n          control={<Switch checked={auth} onChange={handleChange} aria-label=\"login switch\" />}\n          label={auth ? 'Logout' : 'Login'}\n        />\n      </FormGroup>\n */","/Users/brenda_yangyh/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/FAQ/FAQ.js",["40"],"import React, { useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport SearchBar from \"material-ui-search-bar\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst Questions = ({ questions }) => {\n\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            width: '80%',\n            margin: '0 auto',\n        },\n        heading: {\n            fontSize: theme.typography.pxToRem(15),\n            fontWeight: theme.typography.fontWeightRegular,\n        },\n        question_answers: {\n            marginTop: '20px',\n        },\n    }));\n    const classes = useStyles();\n    return (<div className={classes.root}>\n        {questions.map((question, index) => {\n\n            return <Accordion className={classes.question_answers}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls={`panel${index}-content`}\n                    id={`panel${index}-header`}\n                >\n                    <Typography className={classes.heading}> {question.title}</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <Typography>\n                        {question.content}\n                    </Typography>\n                </AccordionDetails>\n            </Accordion>\n        })\n        }\n\n\n    </div>)\n}\n\nconst FAQ = () => {\n\n    const useStyles = makeStyles((theme) => ({\n        searchBar: {\n            width: '80%',\n            borderRadius: '50px',\n            margin: '0 auto',\n            color: '#00529b',\n\n        },\n        title: {\n            width: '100%',\n            color: '#00529b',\n            textAlign: 'center',\n            fontFamily: 'Roboto',\n            fontSize: '24px',\n            padding: '45px 0px 45px 0px',\n\n        },\n        information: {\n            color: '#00529b',\n            textAlign: 'center',\n            fontFamily: 'Roboto',\n            fontSize: '18px',\n            padding: '25px 0px 25px 0px',\n        },\n        title2: {\n            color: '#00529b',\n            textAlign: 'center',\n            fontFamily: 'Roboto',\n            fontSize: '18px',\n            padding: '50px 0px 25px 0px',\n        }\n    }));\n\n    const [questions, setQuestions] = useState([{\n        title: 'question 1', content: 'Aenean in lorem massa. Praesent mattis bibendum hendrerit. Nunc bibendum odio nisi, vitae efficitur lacus molestie ac. Aenean eget venenatis magna. Ut accumsan urna et ex fringilla, nec malesuada tortor aliquam. Curabitur ullamcorper urna id volutpat vestibulum. Pellentesque quam eros, mollis iaculis feugiat eu, tempus sit amet sapien.'\n    }, {\n        title: 'question 2', content: 'Aenean in lorem massa. Praesent mattis bibendum hendrerit. Nunc bibendum odio nisi, vitae efficitur lacus molestie ac. Aenean eget venenatis magna. Ut accumsan urna et ex fringilla, nec malesuada tortor aliquam. Curabitur ullamcorper urna id volutpat vestibulum. Pellentesque quam eros, mollis iaculis feugiat eu, tempus sit amet sapien.'\n    }, {\n        title: 'question 3', content: 'Aenean in lorem massa. Praesent mattis bibendum hendrerit. Nunc bibendum odio nisi, vitae efficitur lacus molestie ac. Aenean eget venenatis magna. Ut accumsan urna et ex fringilla, nec malesuada tortor aliquam. Curabitur ullamcorper urna id volutpat vestibulum. Pellentesque quam eros, mollis iaculis feugiat eu, tempus sit amet sapien.'\n    }, {\n        title: 'question 4', content: 'Aenean in lorem massa. Praesent mattis bibendum hendrerit. Nunc bibendum odio nisi, vitae efficitur lacus molestie ac. Aenean eget venenatis magna. Ut accumsan urna et ex fringilla, nec malesuada tortor aliquam. Curabitur ullamcorper urna id volutpat vestibulum. Pellentesque quam eros, mollis iaculis feugiat eu, tempus sit amet sapien.'\n    }, {\n        title: 'question 5', content: 'Aenean in lorem massa. Praesent mattis bibendum hendrerit. Nunc bibendum odio nisi, vitae efficitur lacus molestie ac. Aenean eget venenatis magna. Ut accumsan urna et ex fringilla, nec malesuada tortor aliquam. Curabitur ullamcorper urna id volutpat vestibulum. Pellentesque quam eros, mollis iaculis feugiat eu, tempus sit amet sapien.'\n    }]);\n\n    const [value, setValue] = useState('');\n    const classes = useStyles();\n    const handleSearch = (value) => {\n\n    }\n\n\n    return (\n        <Container >\n            <Typography variant=\"h4\" className={classes.title}>\n                How can we help you?\n        </Typography>\n            <SearchBar\n                className={classes.searchBar}\n                value={value}\n                type='text'\n                onChange={(newValue) => setValue(newValue)}\n                onRequestSearch={() => handleSearch(value)}\n            >\n            </SearchBar>\n            <Typography variant=\"h4\" className={classes.title2}>\n                Frequently Asked Questions\n        </Typography>\n            <Questions questions={questions}></Questions>\n            <Typography variant=\"h4\" className={classes.information}>\n                Still have questions? <br />\n            Contact us using online Help <br />\n            or call 123-456-7890\n        </Typography>\n\n        </Container>\n    )\n}\n\nexport default FAQ;",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":1,"column":8,"nodeType":"47","messageId":"48","endLine":1,"endColumn":12},{"ruleId":"45","severity":1,"message":"49","line":7,"column":3,"nodeType":"47","messageId":"48","endLine":7,"endColumn":7},{"ruleId":"45","severity":1,"message":"50","line":7,"column":8,"nodeType":"47","messageId":"48","endLine":7,"endColumn":16},{"ruleId":"45","severity":1,"message":"51","line":9,"column":8,"nodeType":"47","messageId":"48","endLine":9,"endColumn":14},{"ruleId":"45","severity":1,"message":"52","line":10,"column":8,"nodeType":"47","messageId":"48","endLine":10,"endColumn":24},{"ruleId":"45","severity":1,"message":"53","line":11,"column":8,"nodeType":"47","messageId":"48","endLine":11,"endColumn":17},{"ruleId":"45","severity":1,"message":"54","line":34,"column":9,"nodeType":"47","messageId":"48","endLine":34,"endColumn":21},{"ruleId":"55","severity":1,"message":"56","line":59,"column":13,"nodeType":"57","endLine":59,"endColumn":45},{"ruleId":"55","severity":1,"message":"56","line":62,"column":13,"nodeType":"57","endLine":62,"endColumn":45},{"ruleId":"55","severity":1,"message":"56","line":65,"column":13,"nodeType":"57","endLine":65,"endColumn":45},{"ruleId":"55","severity":1,"message":"56","line":68,"column":13,"nodeType":"57","endLine":68,"endColumn":45},{"ruleId":"55","severity":1,"message":"56","line":71,"column":13,"nodeType":"57","endLine":71,"endColumn":45},{"ruleId":"45","severity":1,"message":"58","line":87,"column":23,"nodeType":"47","messageId":"48","endLine":87,"endColumn":35},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'MenuIcon' is defined but never used.","'Switch' is defined but never used.","'FormControlLabel' is defined but never used.","'FormGroup' is defined but never used.","'handleChange' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'setQuestions' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]