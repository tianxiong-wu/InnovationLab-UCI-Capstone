[{"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/index.js":"1","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/App.js":"2","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/reportWebVitals.js":"3","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/footer/footer.js":"4","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/404_error/404_error.js":"5","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/Tutorial_List/Tutorial_List.js":"6","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/loginSignUp/loginSignUp.js":"7","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/signUpForm/signUpForm.js":"8","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/FAQPage/faq.js":"9","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/patientSettings/settings.js":"10","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/homePage/patient/patientHome.js":"11","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/FAQPage/question.js":"12","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/loginForm/loginForm.js":"13","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/nav/nav.js":"14","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/settings/settings.js":"15","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/patientNav/patientNav.js":"16","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/pharmContact/pharmContact.js":"17","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/patientSchedule/patientSchedule.js":"18","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/TutorialPage/tutorial.js":"19","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/pharmSettings/pharmSettings.js":"20","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/scheduleEvent/scheduleEvent.js":"21","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/notifications/notifications.js":"22","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/patientProfile/profile.js":"23","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/pharmTutorialList/pharmTutorialList.js":"24","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/pharmAssignPage/pharmAssign.js":"25","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/patientTutorials/tutorial.js":"26"},{"size":500,"mtime":1610145654937,"results":"27","hashOfConfig":"28"},{"size":1626,"mtime":1614481082999,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":1610145654938,"results":"30","hashOfConfig":"28"},{"size":615,"mtime":1612981913365,"results":"31","hashOfConfig":"28"},{"size":424,"mtime":1612981913369,"results":"32","hashOfConfig":"28"},{"size":5819,"mtime":1614328398804,"results":"33","hashOfConfig":"28"},{"size":1048,"mtime":1613969866583,"results":"34","hashOfConfig":"28"},{"size":11219,"mtime":1614480978340,"results":"35","hashOfConfig":"28"},{"size":1985,"mtime":1614328398802,"results":"36","hashOfConfig":"28"},{"size":9850,"mtime":1614452628578,"results":"37","hashOfConfig":"28"},{"size":3676,"mtime":1614328398805,"results":"38","hashOfConfig":"28"},{"size":1180,"mtime":1613862548255,"results":"39","hashOfConfig":"28"},{"size":4523,"mtime":1614481016217,"results":"40","hashOfConfig":"28"},{"size":4028,"mtime":1613969866578,"results":"41","hashOfConfig":"28"},{"size":4832,"mtime":1614031496247,"results":"42","hashOfConfig":"28"},{"size":7078,"mtime":1614064606420,"results":"43","hashOfConfig":"28"},{"size":5546,"mtime":1614328398808,"results":"44","hashOfConfig":"28"},{"size":7945,"mtime":1614328398807,"results":"45","hashOfConfig":"28"},{"size":14411,"mtime":1614328398804,"results":"46","hashOfConfig":"28"},{"size":5102,"mtime":1613970201849,"results":"47","hashOfConfig":"28"},{"size":397,"mtime":1613977929355,"results":"48","hashOfConfig":"28"},{"size":763,"mtime":1614036249578,"results":"49","hashOfConfig":"28"},{"size":1115,"mtime":1614328398806,"results":"50","hashOfConfig":"28"},{"size":4046,"mtime":1614328398808,"results":"51","hashOfConfig":"28"},{"size":6524,"mtime":1614326591252,"results":"52","hashOfConfig":"28"},{"size":1335,"mtime":1614328398808,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"axtido",{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"56"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"56"},"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/index.js",[],["122","123"],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/App.js",["124","125","126","127","128"],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/reportWebVitals.js",[],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/footer/footer.js",["129","130","131","132"],"import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport '../footer/footer.css';\n\n\nexport default function footerBar() {\n\treturn (\n\t\t<div className=\"footerContainer\">\n\t\t\t<div className=\"liveHelpBar\">\n\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t<a className=\"footerLink\" href=\"#\">Live Help</a>\n\t\t\t\t</Typography>\n\t\t\t</div>\n\t\t\t<div className=\"contactBar\">\n\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t<a className=\"footerLink\" href=\"#\">Pharmacy Contact Info</a>\n\t\t\t\t</Typography>\n\t\t\t</div>\n\t\t</div>\n\t);\n}","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/404_error/404_error.js",["133","134","135"],"import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport '../404_error/404_error.css'\n\n\nexport default function error_page() {\n\treturn (\n\t\t<div className=\"errorContainer\">\n\t\t\t<div className=\"errorMessage\">\n\t\t\t\tOops, the page you are trying to find does not exist!\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/Tutorial_List/Tutorial_List.js",["136","137","138","139","140","141","142","143","144","145","146","147","148","149"],"import React, { useEffect, useState, useCallback } from 'react';\nimport { makeStyles, useTheme, withTheme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport axios from 'axios';\nimport Tutorial from '../TutorialPage/tutorial';\nimport Grid from \"@material-ui/core/Grid\";\nimport TutorialPage from '../TutorialPage/tutorial';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      backgroundColor:'#3F51B5',\n      width: \"70%\",\n      height: \"216px\",\n      margin: '0 auto',\n      marginTop: '33px',\n      borderRadius: 20,\n      color: 'white',\n      backgroundColor: '#00529b',\n    },\n    details: {\n      display: 'flex',\n      flexDirection: 'column',\n      width: '60%',\n    },\n    content: {\n      flex: '1 0 auto',\n      marginTop: 25,\n      marginLeft: 3,\n    },\n    cover: {\n      width: 150,\n      height: 150,\n      margin:'auto 31px',\n      marginRight:0,\n    },\n    summary: {\n        overflowY: 'hidden',\n        height: '80px',\n    },\n    playIcon: {\n      height: 38,\n      width: 38,\n    },\n    btn:{\n      margin: 'auto',\n      marginRight: 47,\n      fontSize: 40,\n    },\n    cardContainer:{\n      width: \"100%\",\n      height: \"100vh\",\n      overflowY: 'scroll'\n    }\n  }));\n\nconst Tutorials = ()=>{\n    const classes = useStyles();\n    const theme = useTheme();\n    const [list, setList] = useState([]);\n\n    useEffect(()=>{\n      let tutorialArr = [];\n      axios.get('http://localhost:5000/tutorials/all').then(res => {\n        tutorialArr = res.data;\n        setList(tutorialArr);\n      })\n    },[])\n\n\n   return <><div className={classes.cardContainer}>{\n    list.map((item, index)=>{\n        return <Grid>\n          <Card className={classes.root}>\n            <CardMedia\n              className={classes.cover}\n              image={item['tutorial'][0]['videoUrl']['thumbnail']}\n              title=\"Infusion Details\"\n            />\n            <div className={classes.details}>\n              <CardContent className={classes.content}>\n                <Typography component=\"h5\" variant=\"h5\">\n                  {item['name']}\n                </Typography>\n                <Typography className={classes.summary} variant=\"subtitle1\" >\n                {item['description']}\n                </Typography>\n                <Typography variant=\"subtitle1\" >\n                Duration: {item['duration']}\n                </Typography>\n              </CardContent>\n            </div>\n            <ArrowForwardIosIcon className={classes.btn}/>\n          </Card>\n        </Grid>\n    })\n   }\n   </div></>\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    backgroundColor: '#3F51B5',\n    width: \"70%\",\n    height: \"216px\",\n    margin: '0 auto',\n    marginTop: '33px',\n    borderRadius: 20,\n    color: 'white',\n    backgroundColor: '#00529b',\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '60%',\n  },\n  content: {\n    flex: '1 0 auto',\n\n    marginTop: 25,\n    marginLeft: 3,\n  },\n  cover: {\n    width: 150,\n    height: 150,\n    margin: 'auto 31px',\n    marginRight: 0,\n  },\n  summary: {\n    //marginBottom: 30,\n    overflowY: 'hidden',\n    height: '80px',\n  },\n  playIcon: {\n    height: 38,\n    width: 38,\n  },\n  btn: {\n    margin: 'auto',\n    marginRight: 47,\n    fontSize: 40,\n\n  }\n}));\n\nconst Tutorials = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const history = useHistory();\n  const [list, setList] = useState([]);\n  //const initList = async () => {\n\n  // const tutorials = [{\n    //   id: 0,\n    //   name: 'Infusion A',\n    //   summary: `Lorem ipsum dolor sit amet`,\n    //   duration: '20 min',\n    //   img: 'https://picsum.photos/seed/picsum/150/150',\n    // }, {\n    //   id: 1,\n    //   name: 'Infusion B'\n    //   summary: 'Summary B',\n    //   duration: '15 min',\n    //   img: 'https://picsum.photos/seed/picsum/150/150',\n    // }, {\n    //   id: 2,\n    //   name: 'Infusion C',\n    //   summary: 'Summary C',\n    //   duration: '17 min',\n    //   img: 'https://picsum.photos/seed/picsum/150/150',\n    // }] \n    \n  //};\n  useEffect(async () => {\n    const response =  await fetch('http://localhost:5000/tutorials/all');\n    const tutorials =await response.json();\n    setList(tutorials)\n  }, [])\n  \n\n  const handleChange = (id)=>{\n    history.push('/Tutorial/' + id);\n  }\n\n\n  return <>{\n    list.map((item) => {\n      return <Card onClick={() => handleChange(item._id)} className={classes.root}>\n        <CardMedia\n          className={classes.cover}\n          image={item.img}\n          title=\"Live from space album cover\"\n        />\n        <div className={classes.details}>\n          <CardContent className={classes.content}>\n            <Typography component=\"h5\" variant=\"h5\">\n              {item.name}\n            </Typography>\n            <Typography className={classes.summary} variant=\"subtitle1\" >\n              {item.description}\n            </Typography>\n            <Typography variant=\"subtitle1\" >\n              Duration: {item.duration}\n            </Typography>\n          </CardContent>\n        </div>\n        <ArrowForwardIosIcon className={classes.btn}></ArrowForwardIosIcon>\n      </Card>\n    })\n\n  }</>\n}\n\nexport default Tutorials;",["150","151"],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/loginSignUp/loginSignUp.js",[],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/signUpForm/signUpForm.js",["152"],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/FAQPage/faq.js",["153","154"],"import React, { useEffect, useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport SearchBar from \"material-ui-search-bar\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Questions from './question'\nimport './faq.css'\nimport axios from 'axios';\n\nexport default function FAQ(){\n    const [questions, setQuestions] = useState([]);\n    const [displayQuestions, setDisplayQuestions] = useState([{}]);\n    const [value, setValue] = useState('');\n\n    useEffect( () => {\n        axios.get('http://localhost:5000/faqs/all').then(res => {\n            let questionList = [];\n            for (const [key, val] of Object.entries(res.data)){\n                questionList.push([val.question, val.answer])\n            }\n            setQuestions(questionList);\n        });\n    }, []);\n\n    function handleSearch(val){\n        if (val === \"\"){\n            return;\n        }\n        setValue(val);\n        let questionList = [];\n        questions.forEach((faq) => {\n            if (faq[0].includes(val) || faq[1].includes(val)) {\n                questionList.push(faq);\n            }\n        })\n        setDisplayQuestions(questionList);\n        console.log(displayQuestions);\n    }\n\n\n    return(\n        <Container>\n            <Typography variant=\"h4\" className=\"title\">How can we help you?</Typography>\n            <SearchBar\n                className=\"searchBar\"\n                value={value}\n                type=\"text\"\n                onChange={(value) => handleSearch(value)}>\n            </SearchBar>\n            <Typography variant=\"h4\" className=\"titleTwo\">Frequently Asked Questions</Typography>\n            <Questions questionList={displayQuestions} />\n            <Typography variant=\"h4\" className=\"information\">\n                Still have questions?<br/>Contact us using online help<br/>Or call 123-456-7890\n            </Typography>\n        </Container>\n    )\n}\n","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/patientSettings/settings.js",[],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/homePage/patient/patientHome.js",["155","156","157"],"import React, { useState, useEffect } from \"react\"\nimport { createMuiTheme, responsiveFontSizes, ThemeProvider } from '@material-ui/core/styles';\nimport { Grid } from \"@material-ui/core\"\nimport { Typography } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport ScheduleEvent from \"../../../components/scheduleEvent/scheduleEvent\";\nimport Notifications from \"../../../components/notifications/notifications\";\nimport '../patient/patientHome.css'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n}));\n\nlet theme = createMuiTheme();\ntheme = responsiveFontSizes(theme);\n\n\nexport default function PatientHome(props){\n\n    let propsName = \"Jasmine\";\n    let nextInfusion = \"Thursday, November 19th, 2020 at 6:00PM\";\n    let nextInfusionName = \"Antibiotic\";\n\n    const classes = useStyles();\n\n    return(\n       <div className={classes.root}>\n            <ThemeProvider theme={theme}>\n                <Grid container justify=\"center\" spacing={3}>\n                    <Grid item xs={2}></Grid>\n                        <Grid item xs={8}>\n                            <Typography variant=\"h4\" className=\"nextInfusionSummary\">Hi {propsName}, your next infusion is on {nextInfusion}</Typography>\n                        </Grid>\n                        <Grid item xs={2}></Grid>\n                        <Grid item xs={8} sm={8} md={4} className=\"widgetContainer\">\n                            <div>\n                                <div className=\"infusionWidget\">\n                                    <div className=\"infusionVideoContainer\">\n                                        <img src=\"https://picsum.photos/600/400\" className=\"infusionThumbnail\"></img>\n                                    </div>\n                                    <div className=\"infusionLabel\">\n                                        <Typography variant=\"h4\">Next Infusion: {nextInfusionName}</Typography>\n                                    </div>\n                                </div>\n                                <div className=\"notifWidget\">\n                                    <div className=\"notificationLabel\">\n                                        <Typography variant=\"h4\">Notifications</Typography>\n                                    </div>\n                                    <div className=\"notificationContainer\">\n                                        <br/>\n                                        <Notifications title=\"Infusion A Schedule Change\" description=\"Starting 3/1, take doses every five hours. GOT IT?\" />\n                                        <Notifications title=\"Infusion B Dosage Change\" description=\"Starting 3/24, do infusions only once every two days.\" />\n                                    </div>\n                                </div>\n                            </div>\n                        </Grid>\n                        <Grid item xs={8} sm={8} md={4} className=\"widgetContainer\">\n                            <div className=\"scheduleLabel\">\n                                <Typography variant=\"h4\">Today's Schedule</Typography>\n                            </div>\n                            <div className=\"scheduleWidget\">\n                                <br/>\n                                <ScheduleEvent time=\"12:30PM\" name=\"Antibiotic Infusion\"/>\n                                <ScheduleEvent time=\"4:30PM\" name=\"Antibiotic Infusion\"/>\n                                <ScheduleEvent time=\"8:30PM\" name=\"Antibiotic Infusion\"/>\n                            </div>\n                        </Grid>\n                </Grid>\n            </ThemeProvider>\n       </div>\n    )\n}","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/FAQPage/question.js",[],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/loginForm/loginForm.js",["158","159"],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/nav/nav.js",["160","161","162","163"],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/settings/settings.js",["164","165","166"],"import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport EditIcon from '@material-ui/icons/Edit';\nimport '../settings/settings.css'\n\nfunction switchNotificationPatient () {\n\tconsole.log('hello');\n\tdocument.getElementById('securityContainer-patient').style.display = 'none';\n\tdocument.getElementById('notificationsContainer').style.display = 'flex';\n}\n\nfunction switchSecurityPatient () {\n\tconsole.log('hello');\n\tdocument.getElementById('securityContainer-patient').style.display = 'flex';\n\tdocument.getElementById('notificationsContainer').style.display = 'none';\n}\n\nexport default function settings() {\n\treturn (\n    <div className = 'settingsContainer-patient'>\n      <div className = 'settingsTitle-patient'>\n        Settings\n      </div>\n\n      <div id = 'securityContainer-patient'>\n        <div className = 'titleBar-patient'>\n          <div className = 'securityTitle-patient'onClick = {switchSecurityPatient}>\n            Security\n          </div>\n          <div className = 'notificationTitle-patient' onClick = {switchNotificationPatient} >\n            Notification\n          </div>\n        </div>\n\n        <div className = 'passwordContainer'>\n          <div className = 'password' id = 'currentPW'>\n            Current Password: *****\n          </div>\n          <div className = 'password' id = 'newPW'>\n            New Password: *****\n          </div>\n          <div className = 'password' id = 'retypePW'>\n            Retype New Password: *****\n          </div>\n\n\t\t\t\t\t<div className = 'break'></div>\n\n          <div className = 'saveButton'>\n            Save\n          </div>\n        </div>\n      </div>\n\n\t\t\t<div id = 'notificationsContainer'>\n\t\t\t\t\t\t<div className = 'titleBar-patient'>\n\t\t          <div className = 'securityTitle-patient'onClick = {switchSecurityPatient}>\n\t\t            Security\n\t\t          </div>\n\t\t          <div className = 'notificationTitle-patient' onClick = {switchNotificationPatient} >\n\t\t            Notification\n\t\t          </div>\n\t\t        </div>\n\n\t\t\t\t\t\t<div className = 'folderBorder-patient'>\n\t\t\t\t\t\t\t<div className = 'whiteBorder-patient'>\n\t\t\t          <div className = 'notificationSection'>\n\t\t\t              <div className = 'insideTitle-patient'>\n\t\t\t                Phone Number\n\t\t\t              </div>\n\t\t\t              <div className = 'notifyMe'>\n\t\t\t                Notify Me?\n\t\t\t              </div>\n\t\t\t\t\t\t\t\t\t\t<div className = 'yesContainer'>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'yes'>\n\t\t\t\t\t\t\t\t\t\t\tYes\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'yesBox'> </div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className = 'noContainer'>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'no'>\n\t\t\t\t\t\t\t\t\t\t\tNo\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t              \t<div className = 'noBox'> </div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className = 'infoContainer-patient'>\n\t\t\t\t              <div className = 'infoBox-patient'>\n\t\t\t\t                Call me at:\n\t\t\t\t              </div>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'phone-patient_email_Container-patient'>\n\t\t\t\t\t              <div className = 'phone-patient'>\n\t\t\t\t\t                (408)123-4567\n\t\t\t\t\t              </div>\n\t\t\t\t\t              <div className = 'editContainer-patient'>\n\t\t\t\t\t                <EditIcon/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className = 'edit-patient'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t              </div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t          </div>\n\t\t\t\t\t\t\t\t<div className = 'notificationSection'>\n\t\t\t              <div className = 'insideTitle-patient'>\n\t\t\t                Email\n\t\t\t              </div>\n\t\t\t              <div className = 'notifyMe'>\n\t\t\t                Notify Me?\n\t\t\t              </div>\n\t\t\t\t\t\t\t\t\t\t<div className = 'yesContainer'>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'yes'>\n\t\t\t\t\t\t\t\t\t\t\tYes\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'yesBox'> </div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className = 'noContainer'>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'no'>\n\t\t\t\t\t\t\t\t\t\t\tNo\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t              \t<div className = 'noBox'> </div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className = 'infoContainer-patient'>\n\t\t\t\t              <div className = 'infoBox-patient'>\n\t\t\t\t                Email me at:\n\t\t\t\t              </div>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'phone-patient_email_Container-patient'>\n\t\t\t\t\t              <div className = 'email-patient'>\n\t\t\t\t\t                innovationlab@email.com\n\t\t\t\t\t              </div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className = 'editContainer-patient'>\n\t\t\t\t\t                <EditIcon/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className = 'edit-patient'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t              </div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t          </div>\n\n\t\t\t\t\t\t\t\t<div className = 'break'></div>\n\n\t\t\t\t\t\t\t\t<div className = 'saveButton'>\n\t\t\t            Save\n\t\t\t          </div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n      </div>\n    </div>\n\t);\n}\n","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/patientNav/patientNav.js",["167","168","169"],"import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CloseIcon from '@material-ui/icons/Close';\nimport logo from \"../../innovation.png\";\nimport \"./patientNav.css\"\nimport {\n    BrowserRouter as Router,\n    Route,\n    Link\n  } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    title:{\n        flexGrow: 1,\n    }\n}));\n\nexport default function PatientNav(){\n    const classes = useStyles();\n    const [auth, setAuth] = useState(true);\n    const [profileAnchor, setProfileAnchor] = React.useState(null);\n    const [hamburgerAnchor, setHamburgerAnchor] = React.useState(null);\n    const openProfile = Boolean(profileAnchor);\n    const openHamburger = Boolean(hamburgerAnchor);\n    const [hbIcon, setHbIcon] = React.useState(true);\n    const [closeIcon, setCloseIcon]= React.useState(false);\n\n    const handleProfile = (event) => {\n        setProfileAnchor(event.currentTarget);\n    };\n\n    const handleCloseProfile = () => {\n        setProfileAnchor(null);\n    };\n\n    const handleHamburger = (event) => {\n        setHamburgerAnchor(event.currentTarget);\n        setHbIcon(false);\n        setCloseIcon(true);\n    };\n\n    const handleHamburgerClose = () => {\n        setHamburgerAnchor(null);\n        setHbIcon(true);\n        setCloseIcon(false);\n\n    }\n\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar className=\"navStyling\">\n                    <div>\n                        <IconButton\n                            aria-label=\"hamburger list of pages\"\n                            aria-controls=\"menu-appbar\"\n                            aria-haspopup=\"true\"\n                            onClick={handleHamburger}\n                            color=\"inherit\">\n                                {hbIcon === true ? <MenuIcon className=\"hamburger\"/> : null}\n                                {closeIcon === true ? <CloseIcon className=\"close\"/> : null}\n                        </IconButton>\n                        <Menu\n                            id=\"menu-hamburger\"\n                            anchorEl={hamburgerAnchor}\n                            keepMounted\n                            open={openHamburger}\n                            onClose={handleHamburgerClose}\n                            PaperProps={{\n                                style: {\n                                     width: \"100%\",\n                                     maxWidth: \"100%\",\n                                     maxHeight: \"100%\",\n                                     left: 0,\n                                     right: 0,\n                                   }\n                                 }}\n                                 marginThreshold={0}\n                        >\n                            <Link className=\"burgerItem\" onClick={handleHamburgerClose} to=\"/\">Home</Link>\n                            <Link className=\"burgerItem\" onClick={handleHamburgerClose} to=\"/Tutorials\">Tutorials</Link>\n                            <Link className=\"burgerItem\" onClick={handleHamburgerClose} to=\"/Schedule\">Schedule</Link>\n                            <Link className=\"burgerItem\" onClick={handleHamburgerClose} to=\"/faq\">FAQ</Link>\n                            <Link className=\"burgerItem\" onClick={handleHamburgerClose} to=\"/contact\">Contact</Link>\n                        </Menu>\n                    </div>\n                    <IconButton edge=\"start\" id=\"logoIcon\" color=\"#00529b\" aria-label=\"menu\">\n                        <img src={logo} alt=\"Logo\" className=\"siteIcon\"/>\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        <Link className=\"navItem\" to=\"/\">Home</Link>\n                    </Typography>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        <Link className=\"navItem\" to=\"/Tutorials\">Tutorials</Link>\n                    </Typography>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        <Link className=\"navItem\" to=\"/Schedule\">Schedule</Link>\n                    </Typography>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        <Link className=\"navItem\" to=\"/faq\">FAQ</Link>\n                    </Typography>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        <Link className=\"navItem\" to=\"/contact\">Contact</Link>\n                    </Typography>\n                        {auth && (\n                           <div>\n                               <IconButton\n                                    aria-label=\"account of current user\"\n                                    aria-controls=\"menu-appbar\"\n                                    aria-haspopup=\"true\"\n                                    onClick={handleProfile}\n                                    color=\"inherit\"\n                                >\n                                    <AccountCircle />\n                                </IconButton>\n                                <Menu\n                                    id=\"menu-appbar\"\n                                    anchorEl={profileAnchor}\n                                    anchorOrigin={{\n                                        vertical: 'top',\n                                        horizontal: 'right',\n                                        }}\n                                        keepMounted\n                                        transformOrigin={{\n                                        vertical: 'top',\n                                        horizontal: 'right',\n                                    }}\n                                    open={openProfile}\n                                    onClose={handleCloseProfile}\n                                >\n                                    <MenuItem className=\"profileMenu\" onClick={handleCloseProfile}>Jasmine Miller</MenuItem>\n                                    <MenuItem className=\"profileMenu\" onClick={handleCloseProfile}><Link to=\"/profile\" className=\"profileLink\">Profile</Link></MenuItem>\n                                    <MenuItem className=\"profileMenu\" onClick={handleCloseProfile}><Link to=\"/settings\" className=\"profileLink\">Settings</Link></MenuItem>\n                                    <MenuItem className=\"profileMenu\" onClick={handleCloseProfile}>Log Out</MenuItem>\n                                </Menu>\n                           </div> \n                        )}\n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n}","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/pharmContact/pharmContact.js",[],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/patientSchedule/patientSchedule.js",["170","171","172","173","174","175","176"],"import React, {useState, useEffect} from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ScheduleEvent from \"../../components/scheduleEvent/scheduleEvent\";\nimport './patientSchedule.css';\n\n\nexport default function PatientSchedule(){\n\n    const [currentDay, setCurrentDay] = useState(new Date());\n    const [days, setDays] = useState([]);\n    const [render, setRender] = useState(false);\n    const [earliest, setEarliest] = useState(days[0]);\n    const [selected, setSelected] = useState(\"\");\n\n    let week = [];\n    useEffect(() => {\n        let curr = new Date(new Date()); // get current date  \n        let first = curr.getDate() - curr.getDay(); // First day is the  day of the month - the day of the week  \n        let firstday = new Date(curr.setDate(first)).toISOString().slice(0,10); \n        week = [firstday];\n        for (let i=0; i<7; i++){\n            week.push(new Date(curr.setDate(curr.getDate()+1)).toISOString().slice(0,10));\n        }\n        console.log(week);\n        setDays(week);\n        setRender(true);\n    }, []);    \n\n    const getCurrentDay = (day) => {\n        let numDate = day.substr(-2);\n        let newDate = new Date(day);\n        switch (newDate.getDay()){\n            case 0:\n                return [\"Mo\", numDate];\n            case 1:\n                return [\"Tu\", numDate];\n            case 2: \n                return [\"We\", numDate];\n            case 3:\n                return [\"Th\", numDate];\n            case 4:\n                return [\"Fr\", numDate];\n            case 5:\n                return [\"Sa\", numDate];\n            case 6:\n                return [\"Su\", numDate];\n        }\n    }\n\n    const getCurrentMonth = (month) => {\n        switch (month) {\n            case 0:\n                return \"January\";\n            case 1:\n                return \"February\";\n            case 2: \n                return \"March\";\n            case 3:\n                return \"April\";\n            case 4:\n                return \"May\";\n            case 5:\n                return \"June\";\n            case 6:\n                return \"July\";\n            case 7:\n                return \"August\";\n            case 8:\n                return \"September\";\n            case 9:\n                return \"October\";\n            case 10:\n                return \"November\";\n            case 11:\n                return \"December\";\n        }\n    }\n\n    // on click month, show modal calendar pick\n\n    // left arrow, decrement all current dates by one week\n    const handleNextDay = () => {\n        let week = days;\n        let newDate = new Date(week[week.length-1]);\n        let nextDay = new Date(newDate.getTime()+86400000).toISOString().slice(0,10);\n        week.push(nextDay);\n        week.shift();\n        setDays(week);\n        setEarliest(days[0]);\n    }\n    // right arrow, increment all current dates by one week\n    const handlePrevDay = () => {\n        let week = days;\n        let newDate = new Date(week[0]);\n        let prevDay = new Date(newDate.setDate(newDate.getDate()-1)).toISOString().slice(0,10);\n        week.pop();\n        week.unshift(prevDay);\n        setDays(week);\n        setEarliest(days[0]);\n    }\n\n    return(\n        render === true ? \n        <Grid container>\n            <Grid item xs={1}></Grid>\n            <Grid container xs={10} justify=\"center\" direction=\"column\" className=\"gridStyling\">\n                <Typography variant=\"h3\" align=\"center\" className=\"monthStyling\">{getCurrentMonth(new Date(days[0]).getMonth())}</Typography>\n                <Grid className=\"carouselStyling\" direction=\"row\">\n                    <ul className=\"weekDisplay\">\n                        <li className=\"weekDayDisplay arrowIcon\" onClick={handlePrevDay}>&#60;</li>\n                        <li className=\"weekDayDisplay\">\n                                <div className=\"dateContainer\">\n                                    <Typography variant=\"h3\" align=\"center\" className=\"nameDate\">{getCurrentDay(days[0])[0]}</Typography>\n                                    <Typography variant=\"h5\" align=\"center\" className=\"numDate\">{getCurrentDay(days[0])[1]}</Typography>\n                                </div>\n                        </li>\n                        <li className=\"weekDayDisplay\">\n                                <div className=\"dateContainer\">\n                                    <Typography variant=\"h3\" align=\"center\" className=\"nameDate\">{getCurrentDay(days[1])[0]}</Typography>\n                                    <Typography variant=\"h5\" align=\"center\" className=\"numDate\">{getCurrentDay(days[1])[1]}</Typography>\n                                </div>\n                        </li>     \n                        <li className=\"weekDayDisplay\">\n                                <div className=\"dateContainer\">\n                                    <Typography variant=\"h3\" align=\"center\" className=\"nameDate\">{getCurrentDay(days[2])[0]}</Typography>\n                                    <Typography variant=\"h5\" align=\"center\" className=\"numDate\">{getCurrentDay(days[2])[1]}</Typography>\n                                </div>\n                        </li>     \n                        <li className=\"weekDayDisplay\">\n                                <div className=\"dateContainer\">\n                                    <Typography variant=\"h3\" align=\"center\" className=\"nameDate\">{getCurrentDay(days[3])[0]}</Typography>\n                                    <Typography variant=\"h5\" align=\"center\" className=\"numDate\">{getCurrentDay(days[3])[1]}</Typography>\n                                </div>\n                        </li>     \n                        <li className=\"weekDayDisplay\">\n                                <div className=\"dateContainer\">\n                                    <Typography variant=\"h3\" align=\"center\" className=\"nameDate\">{getCurrentDay(days[4])[0]}</Typography>\n                                    <Typography variant=\"h5\" align=\"center\" className=\"numDate\">{getCurrentDay(days[4])[1]}</Typography>\n                                </div>\n                        </li>     \n                        <li className=\"weekDayDisplay\">\n                                <div className=\"dateContainer\">\n                                    <Typography variant=\"h3\" align=\"center\" className=\"nameDate\">{getCurrentDay(days[5])[0]}</Typography>\n                                    <Typography variant=\"h5\" align=\"center\" className=\"numDate\">{getCurrentDay(days[5])[1]}</Typography>\n                                </div>\n                        </li>     \n                        <li className=\"weekDayDisplay\">\n                                <div className=\"dateContainer\">\n                                    <Typography variant=\"h3\" align=\"center\" className=\"nameDate\">{getCurrentDay(days[6])[0]}</Typography>\n                                    <Typography variant=\"h5\" align=\"center\" className=\"numDate\">{getCurrentDay(days[6])[1]}</Typography>\n                                </div>\n                        </li>                             \n                        <li className=\"weekDayDisplay arrowIcon\" onClick={handleNextDay}>&#62;</li>\n                    </ul>\n                </Grid>\n                <Grid className=\"dayContainer\">\n                    <Typography variant=\"h3\" align=\"center\" className=\"dayStyling\">{currentDay.toLocaleString('en-us', {weekday:'long'})}</Typography>\n                    <div className=\"scheduleComponents\">\n                        <br/>\n                            <ScheduleEvent time=\"2:30PM\" name=\"Antibiotic Infusion\"/>\n                            <ScheduleEvent time=\"2:30PM\" name=\"Antibiotic Infusion\"/>\n                            <ScheduleEvent time=\"2:30PM\" name=\"Antibiotic Infusion\"/>\n                    </div>\n                </Grid>\n            </Grid>\n            <Grid item xs={1}></Grid>\n        </Grid>\n        : \"loading...\"\n    )\n}","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/TutorialPage/tutorial.js",["177"],"import React, {useState} from \"react\";\nimport {Grid, Typography, Button} from \"@material-ui/core\";\nimport \"./tutorial.css\"\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport ReactPlayer from \"react-player\";\nimport Speech from \"react-speech\";\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <Box p={3}>\n            <Typography>{children}</Typography>\n          </Box>\n        )}\n      </div>\n    );\n  }\n  \n  TabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n  };\n  \n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n\n  const Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n  });\n  \n  const useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n      backgroundColor: theme.palette.background,\n    },\n    buttonContainer: {\n        flexGrow: 1,\n        display: \"flex\",\n        flexDirection: \"row\",\n    },\n    infusionTitleContainer: {\n        width: \"100%\"\n    },\n  }));\n\nexport default function TutorialPage(){\n    const classes = useStyles();\n    const [value, setValue] = useState(0);\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    }\n\n    const [navValue, setNavValue] = useState(0);\n    const handleNavChange = (event, newValue) => {\n        setNavValue(newValue);\n    }\n\n    const [playing, setPlaying] = useState(false);\n    const handlePause = (event) => {\n        setPlaying(false);\n    }\n\n    const handlePlay = (event) => {\n        setPlaying(true);\n    }\n\n    const [descOpen, setOpenDesc] = React.useState(false);\n    const handleClickOpenDesc = () => {\n        setOpenDesc(true);\n    }\n    const handleCloseDesc = () => {\n        setOpenDesc(false);\n    }\n\n    const [stepOpen, setOpenStep] = React.useState(false);\n    const handleClickOpenStep = () => {\n        setOpenStep(true);\n    };\n    const handleCloseStep = () => {\n        setOpenStep(false);\n    };\n\n    const [notesOpen, setOpenNotes] = React.useState(false);\n    const handleClickOpenNotes = () => {\n        setOpenNotes(true);\n    };\n    const handleCloseNotes = () => {\n        setOpenNotes(false);\n    };\n\n    // create a video object with url, pharmacist notes, text only list, infusion notes, etc.\n    const videoArray = [\n        \"https://www.youtube.com/watch?v=-omGy5hsmMM&amp;list=PLKpKgq-_PAE_deDWtgdr3mjPJx-G6Bq3i&amp;index=1\",\n        \"https://www.youtube.com/watch?v=xkKLs2gao34&amp;list=PLKpKgq-_PAE_deDWtgdr3mjPJx-G6Bq3i&amp;index=2\",\n        \"https://www.youtube.com/watch?v=KD9HdDpDXwA&amp;list=PLKpKgq-_PAE_deDWtgdr3mjPJx-G6Bq3i&amp;index=3\",\n        \"https://www.youtube.com/watch?v=Kl9uvkkRJ5g&amp;list=PLKpKgq-_PAE_deDWtgdr3mjPJx-G6Bq3i&amp;index=4\",\n        \"https://www.youtube.com/watch?v=MF9EubHp7bM&amp;list=PLKpKgq-_PAE_deDWtgdr3mjPJx-G6Bq3i&amp;index=5\",\n        \"https://www.youtube.com/watch?v=y1VA35aPVZM&amp;list=PLKpKgq-_PAE_deDWtgdr3mjPJx-G6Bq3i&amp;index=6\",\n        \"https://www.youtube.com/watch?v=iJtk2s1ru2Q&amp;list=PLKpKgq-_PAE_deDWtgdr3mjPJx-G6Bq3i&amp;index=7\",\n        \"https://www.youtube.com/watch?v=Itpv9XrS0m8&amp;list=PLKpKgq-_PAE_deDWtgdr3mjPJx-G6Bq3i&amp;index=8\",\n        \"https://www.youtube.com/watch?v=h84wymxoBXI&amp;list=PLKpKgq-_PAE_deDWtgdr3mjPJx-G6Bq3i&amp;index=9\",\n        \"https://www.youtube.com/watch?v=-er0hrmeMkI&amp;list=PLKpKgq-_PAE_deDWtgdr3mjPJx-G6Bq3i&amp;index=10\"\n    ]\n\n    const [videoCounter, setVideoCounter] = useState(videoArray.length - videoArray.length);\n    const [currentVideo, setCurrentVideo] = useState(videoArray[videoCounter]);\n\n    const handleNextVideo = () => {\n        if (videoCounter < videoArray.length-1){\n            let newCount = videoCounter + 1;\n            setVideoCounter(newCount);\n            setCurrentVideo(videoArray[newCount]);\n        }\n    }\n\n    const handlePrevVideo = () => {\n        if (videoCounter > 0){\n            let newCount = videoCounter - 1;\n            setVideoCounter(newCount);\n            setCurrentVideo(videoArray[newCount]);\n        }\n    }\n\n    return(\n        <Grid container>\n            <Grid xs={1}></Grid>\n            <Grid xs={10} container className=\"centralContainer\">\n                <Grid xs={0} md={6} container>\n                    <div className=\"infusionContainer\">\n                        <div>\n                            <Typography variant=\"h5\" align=\"center\" className=\"infusionTitle\">IV Push: ({videoCounter+1}/{videoArray.length})</Typography>\n                        </div>\n                        <div className=\"videoContainer\">\n                            <ReactPlayer className=\"video\" url={currentVideo} playing={playing} onPlay={handlePlay} onPause={handlePause}/>\n                        </div>\n                    </div>\n                    <div className=\"videoAndDesc\">\n                        <div className=\"videoButtonsContainer\">\n                            <Button disabled={videoCounter === 0} variant=\"contained\" className=\"videoButtons\" onClick={handlePrevVideo}><KeyboardArrowLeftIcon/></Button>\n                            <Button variant=\"contained\" className=\"videoButtons\" onClick={playing === false ? handlePlay : handlePause}>{playing === false ? <PlayArrowIcon/> : <PauseIcon/>}</Button>\n                            <Button disabled={videoCounter === 9} variant=\"contained\" className=\"videoButtons\" onClick={handleNextVideo}><KeyboardArrowRightIcon/></Button>\n                        </div>\n                        <Typography variant=\"body1\" className=\"description desktopInteraction\">Description: </Typography>\n                    </div>\n                </Grid>\n                <Grid sm={1}></Grid>\n                <Grid xs={0} md={5} container className=\"desktopInteraction\">\n                    <div className={classes.root}>\n                        <div className=\"noteContainer\">\n                            <AppBar position=\"static\" className=\"noteTabs\" fullWidth>\n                                <Tabs value={value} onChange={handleChange} centered className=\"tabsColor\" aria-label=\"simple tabs example\">\n                                    <Tab wrapped label=\"Pharmacist Notes\" {...a11yProps(0)} />\n                                    <Tab wrapped label=\"Text-Only Step List\" {...a11yProps(1)} />\n                                    <Tab wrapped label=\"Infusion Notes\" {...a11yProps(2)} />\n                                </Tabs>\n                            </AppBar>\n                            <TabPanel value={value} index={0}>\n                                <Typography align=\"center\">Pharmacist Notes Here</Typography>\n                            </TabPanel>\n                            <TabPanel value={value} index={1}>\n                                <Typography align=\"center\">Step List</Typography>\n                            </TabPanel>\n                            <TabPanel value={value} index={2}>\n                                <Typography align=\"center\">Infusion Notes Here</Typography>\n                            </TabPanel>\n                        </div>\n                        <Button variant=\"contained\" className=\"desktopButtons\">\n                            <Speech\n                            displayText=\"Text-to-Speech\"\n                            textAsButton={true}\n                            text=\"Betty and Megan suggest Matt Keller to grab the elastomeric pump and insert it into the innovation lab. \n                                If done correctly, you should have built a complicated web app for a minimum viable product.\" \n                            voice=\"Google UK English Male\"\n                            Text-to-Speech>\n                        </Speech>\n                        </Button>\n                        <Button variant=\"contained\" className=\"desktopButtons\">Download Full Text</Button>\n                    </div>  \n                </Grid>\n            </Grid>\n\n            <BottomNavigation\n                value={navValue}\n                onChange={handleNavChange}\n                showLabels\n                className=\"bottomNav mobileInteraction\"\n            >\n                <BottomNavigationAction className=\"bottomNavItem\" onClick={handleClickOpenDesc} label=\"Description\"/>\n                <BottomNavigationAction className=\"bottomNavItem\" onClick={handleClickOpenStep} label=\"Step List\"/>\n                <BottomNavigationAction className=\"bottomNavItem\" onClick={handleClickOpenNotes} label=\"Notes\"/>    \n                <BottomNavigationAction className=\"bottomNavItem\" label=\"Download Text\"/>        \n            </BottomNavigation> \n            <Dialog\n                open={descOpen}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={handleCloseDesc}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"Description\"}</DialogTitle>\n                <DialogContent>\n                <DialogContentText id=\"alert-dialog-slide-description\">\n                    Infusion description here\n                </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                <Button onClick={handleCloseDesc} color=\"primary\">\n                    Close\n                </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog\n                open={stepOpen}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={handleCloseStep}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"Step List\"}</DialogTitle>\n                <DialogContent>\n                <DialogContentText id=\"alert-dialog-slide-description\">\n                    Step List here\n                </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                <Button onClick={handleCloseStep} color=\"primary\">\n                    Close\n                </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog\n                open={notesOpen}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={handleCloseNotes}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"Notes\"}</DialogTitle>\n                <DialogContent>\n                <DialogContentText id=\"alert-dialog-slide-description\">\n                    Notes here\n                </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                <Button onClick={handleCloseNotes} color=\"primary\">\n                    Close\n                </Button>\n                </DialogActions>\n            </Dialog>\n            <Grid xs={1}></Grid>\n        </Grid>\n    )\n}\n\n//<Button variant=\"contained\" className=\"desktopButtons\">Text-to-Speech</Button>\n","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/pharmSettings/pharmSettings.js",["178","179","180"],"import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport EditIcon from '@material-ui/icons/Edit';\nimport '../pharmSettings/pharmSettings.css'\n\nfunction switchAbout () {\n\tconsole.log('hello');\n\tdocument.getElementById('securityContainer').style.display = 'none';\n\tdocument.getElementById('aboutUsContainer').style.display = 'flex';\n}\n\nfunction switchSecurity () {\n\tconsole.log('hello');\n\tdocument.getElementById('securityContainer').style.display = 'flex';\n\tdocument.getElementById('aboutUsContainer').style.display = 'none';\n}\n\nexport default function settings() {\n\treturn (\n    <div className = 'settingsContainer'>\n      <div className = 'settingsTitle'>\n        Settings\n      </div>\n\n      <div id = 'securityContainer'>\n        <div className = 'titleBar'>\n          <div className = 'securityTitle'onClick = {switchSecurity}>\n            Security\n          </div>\n          <div className = 'aboutUsTitle' onClick = {switchAbout} >\n            About Us\n          </div>\n        </div>\n\n        <div className = 'passwordContainer'>\n          <div className = 'password' id = 'currentPW'>\n            Current Password: *****\n          </div>\n          <div className = 'password' id = 'newPW'>\n            New Password: *****\n          </div>\n          <div className = 'password' id = 'retypePW'>\n            Retype New Password: *****\n          </div>\n\n\t\t\t\t\t<div className = 'break'></div>\n\n          <div className = 'saveButton'>\n            Save\n          </div>\n        </div>\n      </div>\n\n\t\t\t<div id = 'aboutUsContainer'>\n\t\t\t\t\t\t<div className = 'titleBar'>\n\t\t          <div className = 'securityTitle'onClick = {switchSecurity}>\n\t\t            Security\n\t\t          </div>\n\t\t          <div className = 'aboutUsTitle' onClick = {switchAbout} >\n\t\t            About Us\n\t\t          </div>\n\t\t        </div>\n\n\t\t\t\t\t\t<div className = 'folderBorder'>\n\t\t\t\t\t\t\t<div className = 'whiteBorder'>\n\t\t\t          <div className = 'aboutUsSection'>\n\t\t\t              <div className = 'insideTitle'>\n\t\t\t                Displayed Pharmacy Photo\n\t\t\t              </div>\n\n\t\t\t\t\t\t\t\t\t\t<div className = 'infoContainer'>\n\t\t\t\t              <div className = 'photoBox'>\n\t\t\t\t                <div className = 'photo'> Photo </div>\n\t\t\t\t              </div>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'editContainer'>\n\t\t\t\t\t\t\t\t\t\t\t\t<EditIcon/>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className = 'edit'>\n\t\t\t\t\t\t\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t          </div>\n\n\t\t\t\t\t\t\t\t<div className = 'aboutUsSection'>\n\t\t\t              <div className = 'insideTitle'>\n\t\t\t                Displayed Pharmacy Address\n\t\t\t              </div>\n\t\t\t\t\t\t\t\t\t\t<div className = 'infoOutline'>\n\t\t\t\t              <div className = 'informationBox'>\n\t\t\t\t                Pharmacy Address:\n\t\t\t\t              </div>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'address_Container'>\n\t\t\t\t\t              <div className = 'addressStreet'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t123 Pivot Avenue\n\t\t\t\t\t              </div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className = 'addressState'>\n\t\t\t\t\t\t\t\t\t\t\t\t\tCalifornia, 92612\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className = 'addressCountry'>\n\t\t\t\t\t\t\t\t\t\t\t\t\tUnited States\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'editContainer'>\n\t\t\t\t\t\t\t\t\t\t\t\t<EditIcon/>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className = 'edit'>\n\t\t\t\t\t\t\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t          </div>\n\n\t\t\t\t\t\t\t\t<div className = 'aboutUsSection'>\n\t\t\t              <div className = 'insideTitle'>\n\t\t\t                Displayed Pharmacy Name\n\t\t\t              </div>\n\t\t\t\t\t\t\t\t\t\t<div className = 'infoOutline'>\n\t\t\t\t              <div className = 'informationBox'>\n\t\t\t\t                Pharmacy Name:\n\t\t\t\t              </div>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'nameContainer'>\n\t\t\t\t\t\t\t\t\t\t\t\tLorem ipsum dolor\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'editContainer'>\n\t\t\t\t\t\t\t\t\t\t\t\t<EditIcon/>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className = 'edit'>\n\t\t\t\t\t\t\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t          </div>\n\n\t\t\t\t\t\t\t\t<div className = 'aboutUsSection2'>\n\t\t\t\t\t\t\t\t\t\t<div className = 'insideTitle'>\n\t\t\t\t\t\t\t\t\t\t\tDisplayed Pharmacy Contact Information\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className = 'infoOutline2'>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'informationBox2'>\n\t\t\t\t\t\t\t\t\t\t\t\tPharmacy Phone Number:\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'nameContainer'>\n\t\t\t\t\t\t\t\t\t\t\t\tLorem ipsum dolor\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'editContainer'>\n\t\t\t\t\t\t\t\t\t\t\t\t<EditIcon/>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className = 'edit'>\n\t\t\t\t\t\t\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className = 'infoOutline2'>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'informationBox2'>\n\t\t\t\t\t\t\t\t\t\t\t\tPharmacy Email:\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'nameContainer'>\n\t\t\t\t\t\t\t\t\t\t\t\tLorem ipsum dolor\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'editContainer'>\n\t\t\t\t\t\t\t\t\t\t\t\t<EditIcon/>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className = 'edit'>\n\t\t\t\t\t\t\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n      </div>\n    </div>\n\t);\n}\n","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/scheduleEvent/scheduleEvent.js",["181","182"],"import React from \"react\";\nimport \"./scheduleEvent.css\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default function ScheduleEvent(props){\n    return(\n        <div className=\"scheduleItem\">\n            <div className=\"infusionTime\">{props.time}</div>\n            <div className=\"infusionName\">{props.name}</div>\n        </div>\n    )\n}","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/notifications/notifications.js",["183"],"import React from \"react\";\nimport './notifications.css';\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\n\nexport default function Notification(props){\n    return(\n        <Card variant=\"outlined\" className=\"cardContainer\">\n            <CardContent className=\"cardContents\">\n                <div className=\"leftCard\">\n                    <Typography variant=\"h6\" color=\"secondary\" align=\"left\">{props.title}</Typography>\n                    <Typography variant=\"subtitle2\" align=\"left\">{props.description}</Typography>\n                </div>\n            </CardContent>\n        </Card>\n    )\n}\n","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/patientProfile/profile.js",["184","185"],"import React, {useState, useEffect} from \"react\";\nimport \"./profile.css\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default function PatientProfile(){\n    return(\n        <Grid>\n            <Grid></Grid>\n            <Grid container>\n                <Grid item xs={2}></Grid>\n                <Grid item xs={8} justify=\"center\">\n                    <div className=\"patientProfileInfo\">\n                        <Typography align=\"center\" variant=\"h3\" className=\"patientName\">Jasmine Miller</Typography>\n                        <Typography align=\"center\" variant=\"h4\">Pharmacy: </Typography>\n                        <Typography align=\"center\" variant=\"h4\">Phone Number: </Typography>\n                    </div>\n                    <div className=\"infusionSummaryContainer\">\n                        <Typography align=\"center\" variant=\"h4\">Summary of Infusion</Typography>\n                        <div className=\"infusionSummary\">\n                            Notes from pharmacist here\n                        </div>\n                    </div>\n                </Grid>\n                <Grid item xs={2}></Grid>\n            </Grid>\n            <Grid></Grid>\n        </Grid>\n    )\n}","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/pharmTutorialList/pharmTutorialList.js",["186","187","188","189","190","191"],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/pharmAssignPage/pharmAssign.js",["192","193","194","195","196"],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/patientTutorials/tutorial.js",["197","198","199","200"],"import React,{useState, useEffect} from \"react\";\nimport {Grid, Typography} from \"@material-ui/core\";\nimport \"./tutorial.css\";\nimport Tutorial from \"../TutorialPage/tutorial\";\nimport axios from 'axios';\n\nexport default function PatientTutorials(){\n\n    const [tutorials, setTutorials] = useState([]);\n    const [tutorialsClicked, setTutorialsClicked] = useState([]);\n    const [tutorialsLoaded, setTutorialsLoaded] = useState(false);\n\n    useEffect(() => {\n        let tutorialsArr = [];\n        let tutorialsBoolArr = [];\n        axios.get('http://localhost:5000/tutorials/all').then(res=>{\n            tutorialsArr = res.data;\n            setTutorials(tutorialsArr);\n            for (let i = 0; i < tutorialsArr.length; i++){\n                tutorialsBoolArr.push(true);\n            }\n            setTutorialsClicked(tutorialsBoolArr);\n            setTutorialsLoaded(true);\n        })\n    },[])\n\n    const handleTutorialClicked = (index) => {\n        let clickedArr = [];\n        for (let i = 0; i < tutorials.length; i++){\n            if (i !== index){\n                clickedArr.push(false);\n            }\n        }\n        setTutorialsClicked(clickedArr);\n    }\n    \n    return (\n        <Grid>\n            {tutorials.map((item, index) => {\n                return <Tutorial num={index}/>    \n            })}\n        </Grid>\n    )\n}",{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","severity":1,"message":"206","line":1,"column":8,"nodeType":"207","messageId":"208","endLine":1,"endColumn":12},{"ruleId":"205","severity":1,"message":"209","line":2,"column":17,"nodeType":"207","messageId":"208","endLine":2,"endColumn":25},{"ruleId":"205","severity":1,"message":"210","line":14,"column":8,"nodeType":"207","messageId":"208","endLine":14,"endColumn":13},{"ruleId":"205","severity":1,"message":"211","line":16,"column":8,"nodeType":"207","messageId":"208","endLine":16,"endColumn":19},{"ruleId":"205","severity":1,"message":"212","line":19,"column":8,"nodeType":"207","messageId":"208","endLine":19,"endColumn":21},{"ruleId":"205","severity":1,"message":"213","line":3,"column":8,"nodeType":"207","messageId":"208","endLine":3,"endColumn":18},{"ruleId":"205","severity":1,"message":"214","line":4,"column":8,"nodeType":"207","messageId":"208","endLine":4,"endColumn":16},{"ruleId":"215","severity":1,"message":"216","line":13,"column":5,"nodeType":"217","endLine":13,"endColumn":40},{"ruleId":"215","severity":1,"message":"216","line":18,"column":5,"nodeType":"217","endLine":18,"endColumn":40},{"ruleId":"205","severity":1,"message":"218","line":2,"column":8,"nodeType":"207","messageId":"208","endLine":2,"endColumn":18},{"ruleId":"205","severity":1,"message":"213","line":3,"column":8,"nodeType":"207","messageId":"208","endLine":3,"endColumn":18},{"ruleId":"205","severity":1,"message":"214","line":4,"column":8,"nodeType":"207","messageId":"208","endLine":4,"endColumn":16},{"ruleId":"205","severity":1,"message":"219","line":1,"column":37,"nodeType":"207","messageId":"208","endLine":1,"endColumn":48},{"ruleId":"205","severity":1,"message":"220","line":2,"column":32,"nodeType":"207","messageId":"208","endLine":2,"endColumn":41},{"ruleId":"205","severity":1,"message":"213","line":6,"column":8,"nodeType":"207","messageId":"208","endLine":6,"endColumn":18},{"ruleId":"205","severity":1,"message":"221","line":8,"column":8,"nodeType":"207","messageId":"208","endLine":8,"endColumn":24},{"ruleId":"205","severity":1,"message":"222","line":9,"column":8,"nodeType":"207","messageId":"208","endLine":9,"endColumn":21},{"ruleId":"205","severity":1,"message":"223","line":10,"column":8,"nodeType":"207","messageId":"208","endLine":10,"endColumn":20},{"ruleId":"205","severity":1,"message":"224","line":12,"column":8,"nodeType":"207","messageId":"208","endLine":12,"endColumn":14},{"ruleId":"205","severity":1,"message":"225","line":14,"column":20,"nodeType":"207","messageId":"208","endLine":14,"endColumn":26},{"ruleId":"205","severity":1,"message":"226","line":15,"column":3,"nodeType":"207","messageId":"208","endLine":15,"endColumn":8},{"ruleId":"205","severity":1,"message":"227","line":16,"column":3,"nodeType":"207","messageId":"208","endLine":16,"endColumn":7},{"ruleId":"205","severity":1,"message":"228","line":19,"column":8,"nodeType":"207","messageId":"208","endLine":19,"endColumn":16},{"ruleId":"205","severity":1,"message":"229","line":21,"column":8,"nodeType":"207","messageId":"208","endLine":21,"endColumn":20},{"ruleId":"230","severity":1,"message":"231","line":33,"column":7,"nodeType":"232","messageId":"233","endLine":33,"endColumn":22},{"ruleId":"205","severity":1,"message":"234","line":73,"column":11,"nodeType":"207","messageId":"208","endLine":73,"endColumn":16},{"ruleId":"201","replacedBy":"235"},{"ruleId":"203","replacedBy":"236"},{"ruleId":"237","severity":1,"message":"238","line":263,"column":21,"nodeType":"217","endLine":263,"endColumn":106},{"ruleId":"205","severity":1,"message":"239","line":4,"column":10,"nodeType":"207","messageId":"208","endLine":4,"endColumn":20},{"ruleId":"205","severity":1,"message":"240","line":18,"column":25,"nodeType":"207","messageId":"208","endLine":18,"endColumn":28},{"ruleId":"205","severity":1,"message":"209","line":1,"column":17,"nodeType":"207","messageId":"208","endLine":1,"endColumn":25},{"ruleId":"205","severity":1,"message":"241","line":1,"column":27,"nodeType":"207","messageId":"208","endLine":1,"endColumn":36},{"ruleId":"237","severity":1,"message":"238","line":42,"column":41,"nodeType":"217","endLine":42,"endColumn":112},{"ruleId":"205","severity":1,"message":"242","line":4,"column":10,"nodeType":"207","messageId":"208","endLine":4,"endColumn":17},{"ruleId":"237","severity":1,"message":"238","line":94,"column":19,"nodeType":"217","endLine":94,"endColumn":104},{"ruleId":"205","severity":1,"message":"225","line":12,"column":20,"nodeType":"207","messageId":"208","endLine":12,"endColumn":26},{"ruleId":"205","severity":1,"message":"226","line":13,"column":3,"nodeType":"207","messageId":"208","endLine":13,"endColumn":8},{"ruleId":"205","severity":1,"message":"243","line":38,"column":9,"nodeType":"207","messageId":"208","endLine":38,"endColumn":21},{"ruleId":"215","severity":1,"message":"216","line":70,"column":13,"nodeType":"217","endLine":70,"endColumn":45},{"ruleId":"205","severity":1,"message":"218","line":2,"column":8,"nodeType":"207","messageId":"208","endLine":2,"endColumn":18},{"ruleId":"205","severity":1,"message":"213","line":3,"column":8,"nodeType":"207","messageId":"208","endLine":3,"endColumn":18},{"ruleId":"205","severity":1,"message":"214","line":4,"column":8,"nodeType":"207","messageId":"208","endLine":4,"endColumn":16},{"ruleId":"205","severity":1,"message":"225","line":15,"column":22,"nodeType":"207","messageId":"208","endLine":15,"endColumn":28},{"ruleId":"205","severity":1,"message":"226","line":16,"column":5,"nodeType":"207","messageId":"208","endLine":16,"endColumn":10},{"ruleId":"205","severity":1,"message":"244","line":31,"column":18,"nodeType":"207","messageId":"208","endLine":31,"endColumn":25},{"ruleId":"205","severity":1,"message":"245","line":10,"column":24,"nodeType":"207","messageId":"208","endLine":10,"endColumn":37},{"ruleId":"205","severity":1,"message":"246","line":13,"column":12,"nodeType":"207","messageId":"208","endLine":13,"endColumn":20},{"ruleId":"205","severity":1,"message":"247","line":14,"column":12,"nodeType":"207","messageId":"208","endLine":14,"endColumn":20},{"ruleId":"205","severity":1,"message":"248","line":14,"column":22,"nodeType":"207","messageId":"208","endLine":14,"endColumn":33},{"ruleId":"249","severity":1,"message":"250","line":21,"column":16,"nodeType":"251","endLine":21,"endColumn":26},{"ruleId":"252","severity":1,"message":"253","line":33,"column":9,"nodeType":"254","messageId":"255","endLine":48,"endColumn":10},{"ruleId":"252","severity":1,"message":"253","line":52,"column":9,"nodeType":"254","messageId":"255","endLine":77,"endColumn":10},{"ruleId":"249","severity":1,"message":"256","line":96,"column":7,"nodeType":"251","endLine":96,"endColumn":9,"suggestions":"257"},{"ruleId":"205","severity":1,"message":"218","line":2,"column":8,"nodeType":"207","messageId":"208","endLine":2,"endColumn":18},{"ruleId":"205","severity":1,"message":"213","line":3,"column":8,"nodeType":"207","messageId":"208","endLine":3,"endColumn":18},{"ruleId":"205","severity":1,"message":"214","line":4,"column":8,"nodeType":"207","messageId":"208","endLine":4,"endColumn":16},{"ruleId":"205","severity":1,"message":"258","line":3,"column":8,"nodeType":"207","messageId":"208","endLine":3,"endColumn":12},{"ruleId":"205","severity":1,"message":"218","line":4,"column":8,"nodeType":"207","messageId":"208","endLine":4,"endColumn":18},{"ruleId":"205","severity":1,"message":"259","line":6,"column":8,"nodeType":"207","messageId":"208","endLine":6,"endColumn":24},{"ruleId":"205","severity":1,"message":"209","line":1,"column":16,"nodeType":"207","messageId":"208","endLine":1,"endColumn":24},{"ruleId":"205","severity":1,"message":"241","line":1,"column":26,"nodeType":"207","messageId":"208","endLine":1,"endColumn":35},{"ruleId":"205","severity":1,"message":"219","line":1,"column":38,"nodeType":"207","messageId":"208","endLine":1,"endColumn":49},{"ruleId":"205","severity":1,"message":"220","line":2,"column":32,"nodeType":"207","messageId":"208","endLine":2,"endColumn":41},{"ruleId":"205","severity":1,"message":"258","line":9,"column":8,"nodeType":"207","messageId":"208","endLine":9,"endColumn":12},{"ruleId":"230","severity":1,"message":"231","line":26,"column":9,"nodeType":"232","messageId":"233","endLine":26,"endColumn":24},{"ruleId":"205","severity":1,"message":"234","line":64,"column":11,"nodeType":"207","messageId":"208","endLine":64,"endColumn":16},{"ruleId":"249","severity":1,"message":"260","line":67,"column":15,"nodeType":"261","endLine":71,"endColumn":6},{"ruleId":"205","severity":1,"message":"220","line":6,"column":32,"nodeType":"207","messageId":"208","endLine":6,"endColumn":41},{"ruleId":"230","severity":1,"message":"231","line":26,"column":9,"nodeType":"232","messageId":"233","endLine":26,"endColumn":24},{"ruleId":"205","severity":1,"message":"234","line":65,"column":29,"nodeType":"207","messageId":"208","endLine":65,"endColumn":34},{"ruleId":"205","severity":1,"message":"262","line":96,"column":7,"nodeType":"207","messageId":"208","endLine":96,"endColumn":23},{"ruleId":"249","severity":1,"message":"260","line":135,"column":15,"nodeType":"261","endLine":139,"endColumn":6},{"ruleId":"205","severity":1,"message":"218","line":2,"column":15,"nodeType":"207","messageId":"208","endLine":2,"endColumn":25},{"ruleId":"205","severity":1,"message":"263","line":10,"column":12,"nodeType":"207","messageId":"208","endLine":10,"endColumn":28},{"ruleId":"205","severity":1,"message":"264","line":11,"column":12,"nodeType":"207","messageId":"208","endLine":11,"endColumn":27},{"ruleId":"205","severity":1,"message":"265","line":27,"column":11,"nodeType":"207","messageId":"208","endLine":27,"endColumn":32},"no-native-reassign",["266"],"no-negated-in-lhs",["267"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Error' is defined but never used.","'LoginSignUp' is defined but never used.","'PharmSettings' is defined but never used.","'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Typography' is defined but never used.","'useCallback' is defined but never used.","'withTheme' is defined but never used.","'SkipPreviousIcon' is defined but never used.","'PlayArrowIcon' is defined but never used.","'SkipNextIcon' is defined but never used.","'Switch' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'Tutorial' is defined but never used.","'TutorialPage' is defined but never used.","no-dupe-keys","Duplicate key 'backgroundColor'.","ObjectExpression","unexpected","'theme' is assigned a value but never used.",["266"],["267"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'makeStyles' is defined but never used.","'key' is assigned a value but never used.","'useEffect' is defined but never used.","'Divider' is defined but never used.","'handleChange' is assigned a value but never used.","'setAuth' is assigned a value but never used.","'setCurrentDay' is assigned a value but never used.","'earliest' is assigned a value but never used.","'selected' is assigned a value but never used.","'setSelected' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'week' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ArrayExpression","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has a missing dependency: 'props.num'. Either include it or remove the dependency array. If 'setTutorial' needs the current value of 'props.num', you can also switch to useReducer instead of useState and read 'props.num' in the reducer.",["268"],"'Grid' is defined but never used.","'ErrorOutlineIcon' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'AddTutorialsList' is assigned a value but never used.","'tutorialsClicked' is assigned a value but never used.","'tutorialsLoaded' is assigned a value but never used.","'handleTutorialClicked' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"269","fix":"270"},"Update the dependencies array to be: [props.num]",{"range":"271","text":"272"},[3226,3228],"[props.num]"]