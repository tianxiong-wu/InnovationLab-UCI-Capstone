[{"/Users/brenda_yangyh/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/index.js":"1","/Users/brenda_yangyh/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/reportWebVitals.js":"2","/Users/brenda_yangyh/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/App.js":"3","/Users/brenda_yangyh/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/nav/nav.js":"4","/Users/brenda_yangyh/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/FAQ/FAQ.js":"5"},{"size":500,"mtime":1610950017417,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1610950017418,"results":"8","hashOfConfig":"7"},{"size":1079,"mtime":1610950469454,"results":"9","hashOfConfig":"7"},{"size":4035,"mtime":1610950469454,"results":"10","hashOfConfig":"7"},{"size":5531,"mtime":1610950469455,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1d6thuf",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/brenda_yangyh/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/index.js",[],"/Users/brenda_yangyh/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/reportWebVitals.js",[],"/Users/brenda_yangyh/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/App.js",["24","25"],"/Users/brenda_yangyh/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/nav/nav.js",["26","27","28","29","30","31","32","33","34","35"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\nimport {\n  Link\n} from \"react-router-dom\";\nimport '../nav/nav.css'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function MenuAppBar() {\n  const classes = useStyles();\n  const [auth, setAuth] = React.useState(true);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleChange = (event) => {\n    setAuth(event.target.checked);\n  };\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n// replace all the <a> tags with <Link> to use react routing once the other pages are built.\n// add a react conditional rendering: if not logged in, only show the logo on the nav bar.\n// currently developed for desktop pov. Add css media queries to show a different nav format \n// if the size of the window is larger than a mobile size.\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar className=\"navStyling\">\n        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            Icon\n        </IconButton>\n        <Typography variant=\"h6\" className={classes.title}>\n            <Link className=\"navItem\" to=\"/\">Home</Link>\n        </Typography>\n        <Typography variant=\"h6\" className={classes.title}>\n            <Link className=\"navItem\" href=\"#\">Tutorials</Link>\n        </Typography>\n        <Typography variant=\"h6\" className={classes.title}>\n            <Link className=\"navItem\">Link</Link>\n        </Typography>\n        <Typography variant=\"h6\" className={classes.title}>\n            <Link className=\"navItem\"  to=\"/faq\">FAQ</Link>\n        </Typography>\n        <Typography variant=\"h6\" className={classes.title}>\n            <Link className=\"navItem\" href=\"#\">Contact</Link>\n        </Typography>\n          {auth && (\n            <div>\n              <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClose}>Jasmine Miller</MenuItem>\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>Settings</MenuItem>\n                <MenuItem onClick={handleClose}>Log Out</MenuItem>\n              </Menu>\n            </div>\n          )}\n          \n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\n/**\n       <FormGroup>\n        <FormControlLabel\n          control={<Switch checked={auth} onChange={handleChange} aria-label=\"login switch\" />}\n          label={auth ? 'Logout' : 'Login'}\n        />\n      </FormGroup>\n */",["36","37"],"/Users/brenda_yangyh/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/FAQ/FAQ.js",["38"],{"ruleId":"39","severity":1,"message":"40","line":1,"column":8,"nodeType":"41","messageId":"42","endLine":1,"endColumn":12},{"ruleId":"39","severity":1,"message":"43","line":7,"column":3,"nodeType":"41","messageId":"42","endLine":7,"endColumn":7},{"ruleId":"39","severity":1,"message":"44","line":7,"column":8,"nodeType":"41","messageId":"42","endLine":7,"endColumn":16},{"ruleId":"39","severity":1,"message":"45","line":9,"column":8,"nodeType":"41","messageId":"42","endLine":9,"endColumn":14},{"ruleId":"39","severity":1,"message":"46","line":10,"column":8,"nodeType":"41","messageId":"42","endLine":10,"endColumn":24},{"ruleId":"39","severity":1,"message":"47","line":11,"column":8,"nodeType":"41","messageId":"42","endLine":11,"endColumn":17},{"ruleId":"39","severity":1,"message":"48","line":34,"column":9,"nodeType":"41","messageId":"42","endLine":34,"endColumn":21},{"ruleId":"49","severity":1,"message":"50","line":59,"column":13,"nodeType":"51","endLine":59,"endColumn":45},{"ruleId":"49","severity":1,"message":"50","line":62,"column":13,"nodeType":"51","endLine":62,"endColumn":45},{"ruleId":"49","severity":1,"message":"50","line":65,"column":13,"nodeType":"51","endLine":65,"endColumn":45},{"ruleId":"49","severity":1,"message":"50","line":68,"column":13,"nodeType":"51","endLine":68,"endColumn":45},{"ruleId":"49","severity":1,"message":"50","line":71,"column":13,"nodeType":"51","endLine":71,"endColumn":45},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"39","severity":1,"message":"56","line":87,"column":23,"nodeType":"41","messageId":"42","endLine":87,"endColumn":35},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'MenuIcon' is defined but never used.","'Switch' is defined but never used.","'FormControlLabel' is defined but never used.","'FormGroup' is defined but never used.","'handleChange' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["57"],"no-negated-in-lhs",["58"],"'setQuestions' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]