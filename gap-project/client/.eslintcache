[{"C:\\Users\\83550\\Documents\\GitHub\\InnovationLab-UCI-Capstone\\gap-project\\client\\src\\index.js":"1","C:\\Users\\83550\\Documents\\GitHub\\InnovationLab-UCI-Capstone\\gap-project\\client\\src\\reportWebVitals.js":"2","C:\\Users\\83550\\Documents\\GitHub\\InnovationLab-UCI-Capstone\\gap-project\\client\\src\\App.js":"3","C:\\Users\\83550\\Documents\\GitHub\\InnovationLab-UCI-Capstone\\gap-project\\client\\src\\components\\nav\\nav.js":"4","C:\\Users\\83550\\Documents\\GitHub\\InnovationLab-UCI-Capstone\\gap-project\\client\\src\\pages\\FAQ\\FAQ.js":"5"},{"size":517,"mtime":1609965644258,"results":"6","hashOfConfig":"7"},{"size":375,"mtime":1609965644259,"results":"8","hashOfConfig":"7"},{"size":630,"mtime":1610846643722,"results":"9","hashOfConfig":"7"},{"size":4089,"mtime":1610656378392,"results":"10","hashOfConfig":"7"},{"size":122,"mtime":1610846510053,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"e5ccle",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"C:\\Users\\83550\\Documents\\GitHub\\InnovationLab-UCI-Capstone\\gap-project\\client\\src\\index.js",[],["24","25"],"C:\\Users\\83550\\Documents\\GitHub\\InnovationLab-UCI-Capstone\\gap-project\\client\\src\\reportWebVitals.js",[],"C:\\Users\\83550\\Documents\\GitHub\\InnovationLab-UCI-Capstone\\gap-project\\client\\src\\App.js",["26"],"C:\\Users\\83550\\Documents\\GitHub\\InnovationLab-UCI-Capstone\\gap-project\\client\\src\\components\\nav\\nav.js",["27","28","29","30","31","32","33","34","35","36"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport '../nav/nav.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function MenuAppBar() {\r\n  const classes = useStyles();\r\n  const [auth, setAuth] = React.useState(true);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleChange = (event) => {\r\n    setAuth(event.target.checked);\r\n  };\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n// replace all the <a> tags with <Link> to use react routing once the other pages are built.\r\n// add a react conditional rendering: if not logged in, only show the logo on the nav bar.\r\n// currently developed for desktop pov. Add css media queries to show a different nav format \r\n// if the size of the window is larger than a mobile size.\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar className=\"navStyling\">\r\n        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            Icon\r\n        </IconButton>\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n            <a className=\"navItem\" href=\"#\">Home</a>\r\n        </Typography>\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n            <a className=\"navItem\" href=\"#\">Tutorials</a>\r\n        </Typography>\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n            <a className=\"navItem\" href=\"#\">Link</a>\r\n        </Typography>\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n            <a className=\"navItem\" href=\"#\">FAQ</a>\r\n        </Typography>\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n            <a className=\"navItem\" href=\"#\">Contact</a>\r\n        </Typography>\r\n          {auth && (\r\n            <div>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircle />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleClose}>Jasmine Miller</MenuItem>\r\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                <MenuItem onClick={handleClose}>Settings</MenuItem>\r\n                <MenuItem onClick={handleClose}>Log Out</MenuItem>\r\n              </Menu>\r\n            </div>\r\n          )}\r\n          \r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\n/**\r\n       <FormGroup>\r\n        <FormControlLabel\r\n          control={<Switch checked={auth} onChange={handleChange} aria-label=\"login switch\" />}\r\n          label={auth ? 'Logout' : 'Login'}\r\n        />\r\n      </FormGroup>\r\n */","C:\\Users\\83550\\Documents\\GitHub\\InnovationLab-UCI-Capstone\\gap-project\\client\\src\\pages\\FAQ\\FAQ.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":1,"column":8,"nodeType":"43","messageId":"44","endLine":1,"endColumn":12},{"ruleId":"41","severity":1,"message":"45","line":7,"column":8,"nodeType":"43","messageId":"44","endLine":7,"endColumn":16},{"ruleId":"41","severity":1,"message":"46","line":9,"column":8,"nodeType":"43","messageId":"44","endLine":9,"endColumn":14},{"ruleId":"41","severity":1,"message":"47","line":10,"column":8,"nodeType":"43","messageId":"44","endLine":10,"endColumn":24},{"ruleId":"41","severity":1,"message":"48","line":11,"column":8,"nodeType":"43","messageId":"44","endLine":11,"endColumn":17},{"ruleId":"41","severity":1,"message":"49","line":34,"column":9,"nodeType":"43","messageId":"44","endLine":34,"endColumn":21},{"ruleId":"50","severity":1,"message":"51","line":59,"column":13,"nodeType":"52","endLine":59,"endColumn":45},{"ruleId":"50","severity":1,"message":"51","line":62,"column":13,"nodeType":"52","endLine":62,"endColumn":45},{"ruleId":"50","severity":1,"message":"51","line":65,"column":13,"nodeType":"52","endLine":65,"endColumn":45},{"ruleId":"50","severity":1,"message":"51","line":68,"column":13,"nodeType":"52","endLine":68,"endColumn":45},{"ruleId":"50","severity":1,"message":"51","line":71,"column":13,"nodeType":"52","endLine":71,"endColumn":45},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'MenuIcon' is defined but never used.","'Switch' is defined but never used.","'FormControlLabel' is defined but never used.","'FormGroup' is defined but never used.","'handleChange' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]