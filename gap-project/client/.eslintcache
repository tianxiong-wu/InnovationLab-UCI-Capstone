[{"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/index.js":"1","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/App.js":"2","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/reportWebVitals.js":"3","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/footer/footer.js":"4","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/404_error/404_error.js":"5","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/Tutorial_List/Tutorial_List.js":"6","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/loginSignUp/loginSignUp.js":"7","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/signUpForm/signUpForm.js":"8","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/FAQPage/faq.js":"9","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/patientSettings/settings.js":"10","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/homePage/patient/patientHome.js":"11","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/FAQPage/question.js":"12","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/loginForm/loginForm.js":"13","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/nav/nav.js":"14","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/settings/settings.js":"15","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/patientNav/patientNav.js":"16","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/pharmContact/pharmContact.js":"17","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/patientSchedule/patientSchedule.js":"18","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/TutorialPage/tutorial.js":"19","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/pharmSettings/pharmSettings.js":"20","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/scheduleEvent/scheduleEvent.js":"21","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/notifications/notifications.js":"22","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/patientProfile/profile.js":"23","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/pharmTutorialList/pharmTutorialList.js":"24","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/pharmAssignPage/pharmAssign.js":"25","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/patientTutorials/tutorial.js":"26","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/UserContext.js":"27"},{"size":500,"mtime":1610145654937,"results":"28","hashOfConfig":"29"},{"size":1882,"mtime":1614587189841,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":1610145654938,"results":"31","hashOfConfig":"29"},{"size":615,"mtime":1612981913365,"results":"32","hashOfConfig":"29"},{"size":424,"mtime":1612981913369,"results":"33","hashOfConfig":"29"},{"size":5819,"mtime":1614587175080,"results":"34","hashOfConfig":"29"},{"size":1048,"mtime":1613969866583,"results":"35","hashOfConfig":"29"},{"size":11214,"mtime":1614587175074,"results":"36","hashOfConfig":"29"},{"size":1985,"mtime":1614587175076,"results":"37","hashOfConfig":"29"},{"size":9963,"mtime":1614587175088,"results":"38","hashOfConfig":"29"},{"size":5347,"mtime":1614587175082,"results":"39","hashOfConfig":"29"},{"size":1180,"mtime":1613862548255,"results":"40","hashOfConfig":"29"},{"size":4682,"mtime":1614587175070,"results":"41","hashOfConfig":"29"},{"size":4028,"mtime":1613969866578,"results":"42","hashOfConfig":"29"},{"size":4832,"mtime":1614031496247,"results":"43","hashOfConfig":"29"},{"size":7222,"mtime":1614587175072,"results":"44","hashOfConfig":"29"},{"size":5546,"mtime":1614587175093,"results":"45","hashOfConfig":"29"},{"size":10603,"mtime":1614587175085,"results":"46","hashOfConfig":"29"},{"size":14527,"mtime":1614587175079,"results":"47","hashOfConfig":"29"},{"size":5102,"mtime":1613970201849,"results":"48","hashOfConfig":"29"},{"size":397,"mtime":1613977929355,"results":"49","hashOfConfig":"29"},{"size":763,"mtime":1614036249578,"results":"50","hashOfConfig":"29"},{"size":1280,"mtime":1614587175084,"results":"51","hashOfConfig":"29"},{"size":4063,"mtime":1614587392839,"results":"52","hashOfConfig":"29"},{"size":8174,"mtime":1614587189842,"results":"53","hashOfConfig":"29"},{"size":1352,"mtime":1614587175090,"results":"54","hashOfConfig":"29"},{"size":87,"mtime":1614587175067,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"axtido",{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"58"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"58"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"58"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/index.js",[],["128","129"],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/App.js",["130","131","132","133","134"],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/reportWebVitals.js",[],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/footer/footer.js",["135","136","137","138"],"import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport '../footer/footer.css';\n\n\nexport default function footerBar() {\n\treturn (\n\t\t<div className=\"footerContainer\">\n\t\t\t<div className=\"liveHelpBar\">\n\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t<a className=\"footerLink\" href=\"#\">Live Help</a>\n\t\t\t\t</Typography>\n\t\t\t</div>\n\t\t\t<div className=\"contactBar\">\n\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t<a className=\"footerLink\" href=\"#\">Pharmacy Contact Info</a>\n\t\t\t\t</Typography>\n\t\t\t</div>\n\t\t</div>\n\t);\n}","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/404_error/404_error.js",["139","140","141"],"import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport '../404_error/404_error.css'\n\n\nexport default function error_page() {\n\treturn (\n\t\t<div className=\"errorContainer\">\n\t\t\t<div className=\"errorMessage\">\n\t\t\t\tOops, the page you are trying to find does not exist!\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/Tutorial_List/Tutorial_List.js",["142","143","144","145","146","147","148","149","150"],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/loginSignUp/loginSignUp.js",[],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/signUpForm/signUpForm.js",["151"],"import React, { useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport { Grid } from '@material-ui/core';\nimport { Typography } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport LoginForm from \"../loginForm/loginForm\"\nimport \"../signUpForm/signUpForm.css\"\nimport axios from \"axios\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n      width: \"97%\",\n      marginTop: \"10vh\"\n    },\n  }));\n\n\nexport default function SignUpForm(props){\n    // Email validation\n    var validator = require('email-validator');\n    function validateEmail(email) {\n        validator.validate(email);\n    }\n\n    // Phone validation\n    const phone = require('fonz.js');\n    var passwordValidator = require('password-validator');\n    var schema = new passwordValidator();\n    schema\n    .is().min(8)                                    // Minimum length 8\n    .is().max(16)                                   // Maximum length 16\n    .has().uppercase()                              // Must have uppercase letters\n    .has().lowercase()                              // Must have lowercase letters\n    .has().digits(2)                                // Must have at least 2 digits\n    .has().not().spaces()                           // Should not have spaces\n    .has().symbols();                                // Must have at least one symbol*/\n\n    const classes = useStyles();\n    const [signupLanding, setSignupLanding] = useState(true);\n    const [role, setRole] = useState(\"\");\n    const [roleLanding, setRoleLanding] = useState(false);\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [birthdate, setBirthdate] = useState(\"\");\n    const [gender, setGender] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [phoneNumber, setPhoneNumber] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [repeatPassword, setRepeatPassword] = useState(\"\");\n    const [loginLanding, setLoginLanding] = useState(false);    \n  \n    const user = {\n      firstName: firstName,\n      lastName: lastName,\n      birthday: birthdate,\n      gender: gender,\n      email: email,\n      phoneNumber: phoneNumber,\n      password: password,\n      role: role\n    }\n\n    const toggleOne = () => {\n      setSignupLanding(false);\n      setRoleLanding(true);\n    }\n\n    const toggleRoleSelect = () => {\n      setRoleLanding(false);\n      setSignupFormPageOne(true);\n    }\n\n    const toggleRoleTwo = () => {\n      setSignupFormPageOne(false);\n      setRoleLanding(true);\n    }\n\n    const toggleTwo = () => {\n      setSignupFormPageOne(false);\n      setSignupFormPageTwo(true);\n    }\n\n    const toggleThree = () => {\n      console.log(user);\n      setSignupFormPageTwo(false);\n      setSuccessPage(true);\n      \n      axios.post('http://localhost:5000/patients/register', user).then(res=>{\n        console.log(res);\n      })\n    }\n\n    const toggleFour = () => {\n      setSignupFormPageTwo(false);\n      setSignupFormPageOne(true);\n    }\n\n    const toggleFive = () => {\n      setSuccessPage(false);\n      setLoginLanding(true);\n    }\n\n    const [signupFormPageOne, setSignupFormPageOne] = useState(false);\n    const [signupFormPageTwo, setSignupFormPageTwo] = useState(false);\n    const [successPage, setSuccessPage] = useState(false);\n\n    const handleChange = (event) => {\n        setGender(event.target.value);\n    }\n\n    const handleRoleChange = (event) => {\n      setRole(event.target.value);\n      if(role !== \"\"){\n        setRoleLanding(true);\n      }\n    };\n\n    const handleFirstNameChange = (event) => {\n        setFirstName(event.target.value);\n    }\n\n    const handleLastNameChange = (event) => {\n        setLastName(event.target.value);\n    }\n\n    const handleBirthdateChange = (event) => {\n        setBirthdate(event.target.value);\n    }\n\n    const handleEmailChange = (event) => {\n        setEmail(event.target.value);\n    }\n\n    const handlePasswordChange = (event) => {\n        setPassword(event.target.value);\n    }\n\n    const handlePhoneNumberChange = (event) => {\n        setPhoneNumber(event.target.value);\n    }\n\n    const handleRepeatChange = (event) => {\n        setRepeatPassword(event.target.value);\n    }\n\n    return(\n      <div className={classes.root}>\n          <Grid container justify=\"center\" spacing={3}>\n              <Grid item xs={3}></Grid>\n              {signupLanding === true ? \n              <Grid item xs={6} className=\"signupButton\">\n                <div className=\"buttonStyling\" onClick={toggleOne}>\n                  <Typography variant=\"h3\" className=\"textStyling textHolder\">Sign Up</Typography>\n                  <Typography variant=\"h6\" className=\"textStyling\">(with Access Code)</Typography>\n                </div>\n              </Grid>\n              : null}\n              {roleLanding === true ? \n              <Grid item xs={6}>\n                <div className=\"formDiv\">\n                  <Typography variant=\"h5\" color=\"primary\" className=\"formTitle\">Select Your Account Type</Typography>\n                  <FormControl className={classes.formControl}>\n                    <InputLabel id=\"demo-simple-select-label\">Role</InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-label\"\n                      id=\"demo-simple-select\"\n                      value={role}\n                      onChange={handleRoleChange}\n                      fullWidth\n                    >\n                      <MenuItem value={\"\"}>None</MenuItem>\n                      <MenuItem value={\"patient\"}>Patient</MenuItem>\n                      <MenuItem value={\"pharmacist\"}>Pharmacist</MenuItem>\n                    </Select>\n                </FormControl>\n                <Button disabled={role === \"\"} variant=\"outlined\" className=\"nextFull\" onClick={toggleRoleSelect}>Next</Button>\n                </div>  \n              </Grid> : null}\n              {signupFormPageOne === true ? \n                <Grid item xs={6}>\n                  <div className=\"formDiv\">\n                    <Typography variant=\"h5\" color=\"primary\" className=\"formTitle\">Create your account</Typography>\n                    <TextField className=\"formStyling formMargin\" id=\"outlined-basic\" label=\"First Name\" defaultValue={firstName} variant=\"outlined\" onChange={handleFirstNameChange} required />\n                    <TextField className=\"formStyling formMargin\" id=\"outlined-basic\" label=\"Last Name\" defaultValue={lastName} variant=\"outlined\" onChange={handleLastNameChange} required />\n                    <TextField \n                      id=\"date\"\n                      label=\"Birthday\"\n                      type=\"date\"\n                      defaultValue={birthdate}\n                      className=\"formMargin\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                      fullWidth\n                      onChange={handleBirthdateChange}\n                      required />\n                    <FormControl className=\"selectGender formMargin\" required>\n                      <InputLabel id=\"demo-simple-select-label\">Gender</InputLabel>\n                      <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        defaultValue={gender}\n                        onChange={handleChange}\n                      >\n                        <MenuItem value=\"male\">Male</MenuItem>\n                        <MenuItem value=\"female\">Female</MenuItem>\n                        <MenuItem value=\"other\">Other</MenuItem>\n                      </Select>\n                  </FormControl>\n                    <Button variant=\"outlined\" className=\"prev\" onClick={toggleRoleTwo}>Back</Button>\n                    <Button disabled={firstName === \"\" || lastName === \"\" || birthdate === \"\" || gender === \"\"} variant=\"outlined\" className=\"next\" onClick={toggleTwo}>Next</Button>\n                  </div>\n                </Grid>\n              : null}\n              {signupFormPageTwo === true ? \n                <Grid item xs={6}>\n                  <div className=\"formDiv\">\n                    <Typography variant=\"h5\" color=\"primary\" className=\"formTitle\">Create your account</Typography>\n                    <TextField className=\"formStyling formMargin\" id=\"outlined-basic\" label=\"Email\" variant=\"outlined\" defaultValue={email} onChange = {handleEmailChange} required />\n                    <TextField className=\"formStyling formMargin\" id=\"outlined-basic\" label=\"Phone\" variant=\"outlined\" defaultValue={phoneNumber} onChange = {handlePhoneNumberChange} required />\n                    <TextField className=\"formStyling formMargin\" type=\"password\" id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" onChange = {handlePasswordChange} required />\n                    <TextField className=\"formStyling formMargin\" type=\"password\" id=\"outlined-basic\" label=\"Repeat Password\" variant=\"outlined\" onChange = {handleRepeatChange} required />\n                  </div>\n                  <Button variant=\"outlined\" className=\"prev\" onClick={toggleFour}>Back</Button>\n                  <Button disabled = {\n                        email === \"\" ||\n                        validateEmail(email) === true || \n                        phone.validate(phoneNumber) === false || \n                        schema.validate(password) === false || \n                        password !== repeatPassword } \n                        variant=\"outlined\" className=\"next\" onClick={toggleThree}>Submit</Button>\n                </Grid>\n              : null}\n              {successPage === true ? \n                <Grid item xs={6}>\n                  <div className=\"formDiv\">\n                    <img src=\"https://picsum.photos/seed/picsum/200/300\" className=\"signupSuccessPhoto\"/>\n                    <Typography variant=\"h5\" align=\"center\" className=\"signupSuccessTypography\">Congratulations!</Typography>\n                    <Typography variant=\"h5\" align=\"center\">Your account is ready</Typography>\n                  </div>\n                <Button variant=\"outlined\" className=\"nextFull\" onClick={toggleFive}>Login</Button>\n                </Grid>\n              : null }\n              {loginLanding === true ? \n                <LoginForm loginLanding={false} loginForm={true}/>\n              : null}\n              <Grid item xs={3}></Grid>                 \n          </Grid>\n      </div>\n    )\n}","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/FAQPage/faq.js",["152","153"],"import React, { useEffect, useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport SearchBar from \"material-ui-search-bar\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Questions from './question'\nimport './faq.css'\nimport axios from 'axios';\n\nexport default function FAQ(){\n    const [questions, setQuestions] = useState([]);\n    const [displayQuestions, setDisplayQuestions] = useState([{}]);\n    const [value, setValue] = useState('');\n\n    useEffect( () => {\n        axios.get('http://localhost:5000/faqs/all').then(res => {\n            let questionList = [];\n            for (const [key, val] of Object.entries(res.data)){\n                questionList.push([val.question, val.answer])\n            }\n            setQuestions(questionList);\n        });\n    }, []);\n\n    function handleSearch(val){\n        if (val === \"\"){\n            return;\n        }\n        setValue(val);\n        let questionList = [];\n        questions.forEach((faq) => {\n            if (faq[0].includes(val) || faq[1].includes(val)) {\n                questionList.push(faq);\n            }\n        })\n        setDisplayQuestions(questionList);\n        console.log(displayQuestions);\n    }\n\n\n    return(\n        <Container>\n            <Typography variant=\"h4\" className=\"title\">How can we help you?</Typography>\n            <SearchBar\n                className=\"searchBar\"\n                value={value}\n                type=\"text\"\n                onChange={(value) => handleSearch(value)}>\n            </SearchBar>\n            <Typography variant=\"h4\" className=\"titleTwo\">Frequently Asked Questions</Typography>\n            <Questions questionList={displayQuestions} />\n            <Typography variant=\"h4\" className=\"information\">\n                Still have questions?<br/>Contact us using online help<br/>Or call 123-456-7890\n            </Typography>\n        </Container>\n    )\n}\n","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/patientSettings/settings.js",["154"],"import React, {useState} from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { TextField } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\n\nimport {FormControl, \n        FormLabel,\n        Radio, \n        RadioGroup, \n        FormControlLabel} from '@material-ui/core';\nimport './settings.css'\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <Box p={3}>\n            <Typography>{children}</Typography>\n          </Box>\n        )}\n      </div>\n    );\n  }\n  \n  TabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n  };\n  \n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n  \n  const useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n      backgroundColor: theme.palette.background.paper,\n      height: '100vh'\n    },\n  }));\n\nexport default function PatientSettings(){\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n    const [phone, setPhone] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [currentPass, setCurrentPass] = useState(\"\");\n    const [newPass, setNewPass] = useState(\"\");\n    const [repeatPass, setRepeatPass] = useState(\"\");\n\n    const [notifyPhone, setNotifyPhone] = useState(\"Yes\");\n    const [notifyEmail, setNotifyEmail] = useState(\"Yes\");\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    }\n\n    const handleNotifyPhone = (event, newValue) => {\n        setNotifyPhone(newValue);\n    };\n\n    const handleNotifyEmail = (event, newValue) => {\n        setNotifyEmail(newValue);\n    };\n\n    const handleCurrentPass = (event, newValue) => {\n        setCurrentPass(newValue);\n    }\n\n    const handleNewPass = (event, newValue) => {\n        setNewPass(newValue);\n    }\n\n    const handleRepeatPass = (event, newValue) => {\n        setRepeatPass(newValue);\n    }\n\n    const handleNewPhone = (event, newValue) => {\n        setPhone(newValue);\n    }\n\n    const handleNewEmail = (event, newValue) => {\n        setEmail(newValue);\n    }\n\n    function updatePatientSettings() {\n        alert('you saved your phone number')\n    }\n    \n    return (\n        <Grid container>\n            <Grid item xs={1}></Grid>\n            <Grid item xs={10}>\n            <div className={classes.root}>\n                <Typography variant=\"h3\" align=\"center\" className=\"pageLabel\">Settings</Typography>\n                <div className=\"blueOutline\">\n                <AppBar position=\"static\" className=\"appBar\">\n                    <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\" className=\"tabAlign\">\n                    <Tab label=\"Security\" {...a11yProps(0)} className=\"tabs\"/>\n                    <Tab label=\"Notifications\" {...a11yProps(1)} className=\"tabs\"/>\n                    </Tabs>\n                </AppBar>\n                <TabPanel value={value} index={0} >\n                    <div className=\"panelStyling\">\n                        <TextField \n                            type=\"password\"\n                            id=\"password\"\n                            label=\"Enter current password\"\n                            defaultValue={currentPass}\n                            variant=\"outlined\"\n                            className=\"securityStyling\"\n                            onChange={handleCurrentPass}\n                            fullWidth\n                            required>\n                        </TextField>\n                        <TextField \n                            type=\"password\"\n                            id=\"password\"\n                            label=\"Enter new password\"\n                            defaultValue={newPass}\n                            variant=\"outlined\"\n                            className=\"securityStyling\"\n                            onChange={handleNewPass}                            \n                            fullWidth\n                            required>\n                        </TextField>\n                        <TextField \n                            type=\"password\"\n                            id=\"password\"\n                            label=\"Confirm new password\"\n                            defaultValue={repeatPass}\n                            variant=\"outlined\"\n                            className=\"securityStyling\"\n                            onChange={handleRepeatPass}\n                            fullWidth\n                            required>\n                        </TextField>\n                        <div className=\"saveButtonContainer\"><Button variant=\"outlined\" className=\"saveButton\" onClick={updatePatientSettings}>Save</Button></div>\n                    </div>\n                </TabPanel>\n                <TabPanel value={value} index={1}>\n                    <div className=\"panelStyling\">\n                        <div className=\"phoneNumberContainer\">\n                            <Typography variant=\"h5\" align=\"center\" className=\"phoneHeading\">Phone Number</Typography>\n                            <div className=\"settingsForm\">\n                                <div className=\"formHalf\">\n                                    <FormControl component=\"fieldset\" className=\"formControl\">\n                                        <FormLabel component=\"legend\">Notify Me?</FormLabel>\n                                        <RadioGroup row ria-label=\"phone notification\" name=\"phone notification\" className=\"formLabelShift\" value={notifyPhone} onChange={handleNotifyPhone}>\n                                            <FormControlLabel value=\"Yes\" control={<Radio />} label=\"Yes\" />\n                                            <FormControlLabel value=\"No\" control={<Radio />} label=\"No\" />\n                                        </RadioGroup>\n                                    </FormControl>\n                                </div>\n                                <div className=\"formHalf\">\n                                    <FormControl component=\"fieldset\" className=\"formControl\">\n                                        <FormLabel component=\"legend\" className=\"formLabel\">Set a new phone?</FormLabel>\n                                        <TextField \n                                            id=\"outlined-basic\"\n                                            label=\"714-123-4567\"\n                                            defaultValue={phone}\n                                            onChange={handleNewPhone}\n                                            variant=\"outlined\"\n                                            className=\"formLabelShift\"\n                                            fullWidth>\n                                        </TextField>\n                                    </FormControl>                                \n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"emailContainer\">\n                            <Typography variant=\"h5\" align=\"center\" className=\"emailHeading\">Email</Typography>\n                            <div className=\"settingsForm\">\n                                <div className=\"formHalf\">\n                                    <FormControl component=\"fieldset\" className=\"formControl\">\n                                        <FormLabel component=\"legend\">Notify Me?</FormLabel>\n                                        <RadioGroup row ria-label=\"email notification\" name=\"email notification\" className=\"formLabelShift\" value={notifyEmail} onChange={handleNotifyEmail}>\n                                            <FormControlLabel value=\"Yes\" control={<Radio />} label=\"Yes\" />\n                                            <FormControlLabel value=\"No\" control={<Radio />} label=\"No\" />\n                                        </RadioGroup>\n                                    </FormControl>\n                                </div>\n                                <div className=\"formHalf\">\n                                    <FormControl component=\"fieldset\" className=\"formControl\">\n                                        <FormLabel component=\"legend\" className=\"formLabel\">Set a new email?</FormLabel>\n                                        <TextField \n                                            id=\"outlined-basic\"\n                                            label=\"JMiller@gmail.com\"\n                                            defaultValue={email}\n                                            onChange={handleNewEmail}\n                                            variant=\"outlined\"\n                                            className=\"formLabelShift\">\n                                        </TextField>\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"saveButtonContainer\"><Button variant=\"outlined\" className=\"saveButton\" onClick={updatePatientSettings}>Save</Button></div>\n                    </div>\n                </TabPanel>\n            </div>\n            </div>\n            </Grid>\n            <Grid item xs={1}></Grid>\n      </Grid>\n    )\n}","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/homePage/patient/patientHome.js",["155","156","157"],"import React, { useState, useEffect } from \"react\"\nimport { createMuiTheme, responsiveFontSizes, ThemeProvider } from '@material-ui/core/styles';\nimport { Grid } from \"@material-ui/core\"\nimport { Typography } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport ScheduleEvent from \"../../../components/scheduleEvent/scheduleEvent\";\nimport Notifications from \"../../../components/notifications/notifications\";\nimport '../patient/patientHome.css'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        height: '100vh'\n    },\n}));\n\nlet theme = createMuiTheme();\ntheme = responsiveFontSizes(theme);\n\n\nexport default function PatientHome(props){\n\n    let propsName = \"Jasmine\";\n    let nextInfusion = \"Thursday, November 19th, 2020 at 6:00PM\";\n    let nextInfusionName = \"Antibiotic\";\n\n    const classes = useStyles();\n\n    return(\n       <div className={classes.root}>\n            <ThemeProvider theme={theme}>\n                <Grid container justify=\"center\" spacing={3}>\n                    <Grid item xs={2}></Grid>\n                        <Grid item xs={8}>\n                            <Typography variant=\"h4\" className=\"nextInfusionSummary\">Hi {propsName}, your next infusion is on {nextInfusion}</Typography>\n                        </Grid>\n                        <Grid item xs={2}></Grid>\n                        <Grid item xs={8} sm={8} md={4} className=\"widgetContainer\">\n                            <div>\n                                <div className=\"infusionWidget\">\n                                    <div className=\"infusionVideoContainer\">\n                                        <img src=\"https://picsum.photos/600/400\" className=\"infusionThumbnail\"></img>\n                                    </div>\n                                    <div className=\"infusionLabel\">\n                                        <Typography variant=\"h4\">Next Infusion: {nextInfusionName}</Typography>\n                                    </div>\n                                </div>\n                                <div className=\"notifWidget\">\n                                    <div className=\"notificationLabel\">\n                                        <Typography variant=\"h4\">Notifications</Typography>\n                                    </div>\n                                    <div className=\"notificationContainer\">\n                                        <br/>\n                                        <Notifications title=\"Infusion A Schedule Change\" description=\"Starting 3/1, take doses every five hours. GOT IT?\" />\n                                        <Notifications title=\"Infusion B Dosage Change\" description=\"Starting 3/24, do infusions only once every two days.\" />\n                                    </div>\n                                </div>\n                            </div>\n                        </Grid>\n                        <Grid item xs={8} sm={8} md={4} className=\"widgetContainer\">\n                            <div className=\"scheduleLabel\">\n                                <Typography variant=\"h4\">Today's Schedule</Typography>\n                            </div>\n                            <div className=\"scheduleWidget\">\n                                <br/>\n                                <ScheduleEvent time=\"12:30PM\" name=\"Antibiotic Infusion\"/>\n                                <ScheduleEvent time=\"4:30PM\" name=\"Antibiotic Infusion\"/>\n                                <ScheduleEvent time=\"8:30PM\" name=\"Antibiotic Infusion\"/>\n                            </div>\n                        </Grid>\n                </Grid>\n            </ThemeProvider>\n       </div>\n    )\n}","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/FAQPage/question.js",[],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/loginForm/loginForm.js",["158","159","160"],"import React, { useState } from \"react\"\nimport { Button } from '@material-ui/core'\nimport { Typography } from \"@material-ui/core\"\nimport { Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { Grid } from \"@material-ui/core\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport \"../signUpForm/signUpForm.css\"\nimport axios from \"axios\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    width: \"100%\",\n    marginTop: \"3%\"\n  },\n}));\n\nexport default function LoginForm(props){\n    const classes = useStyles();\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [role, setRole] = useState(\"\");\n\n    const loginInfo = {\n      email: email,\n      password: password\n    }\n\n    const [loginLanding, setLoginLanding] = useState(props.loginLanding);\n    const toggleOne = () => {\n        setLoginLanding(false);\n        setLoginForm(true);\n    }\n\n    const handleEmailChange = (event) => {\n      setEmail(event.target.value)\n    }\n\n    const handlePasswordChange = (event) => {\n      setPassword(event.target.value)\n    }\n\n    const handleRoleChange = (event) => {\n      setRole(event.target.value);\n    }\n\n    const [loginForm, setLoginForm] = useState(props.loginForm);\n    //add toast\n    const toggleTwo = () => {\n      if(role === \"patient\"){\n      axios.post('http://localhost:5000/patients/login', loginInfo).then(res => {\n        console.log(res.data);\n      }).catch(err =>{\n        console.log(err);\n      })}\n      else if (role === \"pharmacist\") {\n        axios.post('http://localhost:5000/pharmacists/login', loginInfo).then(res => {\n        console.log(res.data);\n      }).catch(err =>{\n        console.log(err);\n      })\n      }\n    }\n\n  \n\n    return(\n        <div className={classes.root} >\n          <Grid container justify=\"center\" spacing={3}>\n            <Grid item xs={1} md={3}></Grid>\n              {loginLanding === true ? \n              <Grid item xs={10} md={6} className=\"signupButton\">\n                <div className=\"buttonStyling\" onClick={toggleOne}>\n                  <Typography variant=\"h3\" className=\"textStyling textHolder\">Login</Typography>\n                  <Typography variant=\"h6\" className=\"textStyling\">(with Existing Account)</Typography>\n                </div>\n              </Grid>\n              : null}\n              {loginForm === true ? \n                <Grid item xs={10} md={6}>\n                <div className=\"formDiv\">\n                  <img src=\"https://picsum.photos/seed/picsum/200/300\" className=\"signupSuccessPhoto\"/>\n                  <FormControl variant=\"outlined\" className={classes.formControl}>\n                    <InputLabel id=\"demo-simple-select-outlined-label\">Account Type</InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-outlined-label\"\n                      id=\"demo-simple-select-outlined\"\n                      value={role}\n                      onChange={handleRoleChange}\n                      label=\"Role Select\"\n                    >\n                      <MenuItem value=\"\">\n                        <em>Select a role...</em>\n                      </MenuItem>\n                      <MenuItem value=\"patient\">Patient</MenuItem>\n                      <MenuItem value=\"pharmacist\">Pharmacist</MenuItem>\n                    </Select>\n                  </FormControl>\n                  <TextField className=\"formStyling formMargin\" id=\"outlined-basic\" label=\"Email\" variant=\"outlined\" onChange = {handleEmailChange} required />\n                  <TextField className=\"formStyling formMargin\" type = 'password' id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" onChange = {handlePasswordChange} required />\n                  <Button variant=\"outlined\" color=\"primary\" className=\"nextFullPassword\">Forgot Password?</Button>\n                  <Button disabled={email === \"\" || password === \"\" || role === \"\"} variant=\"contained\" color=\"primary\" className=\"nextFull nextFullLogin\" onClick={toggleTwo}>Login</Button>\n                </div>\n              </Grid>\n              : null}\n              <Grid item xs={1} md={3}></Grid>                 \n          </Grid>\n        </div>\n    )\n}","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/nav/nav.js",["161","162","163","164"],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/settings/settings.js",["165","166","167"],"import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport EditIcon from '@material-ui/icons/Edit';\nimport '../settings/settings.css'\n\nfunction switchNotificationPatient () {\n\tconsole.log('hello');\n\tdocument.getElementById('securityContainer-patient').style.display = 'none';\n\tdocument.getElementById('notificationsContainer').style.display = 'flex';\n}\n\nfunction switchSecurityPatient () {\n\tconsole.log('hello');\n\tdocument.getElementById('securityContainer-patient').style.display = 'flex';\n\tdocument.getElementById('notificationsContainer').style.display = 'none';\n}\n\nexport default function settings() {\n\treturn (\n    <div className = 'settingsContainer-patient'>\n      <div className = 'settingsTitle-patient'>\n        Settings\n      </div>\n\n      <div id = 'securityContainer-patient'>\n        <div className = 'titleBar-patient'>\n          <div className = 'securityTitle-patient'onClick = {switchSecurityPatient}>\n            Security\n          </div>\n          <div className = 'notificationTitle-patient' onClick = {switchNotificationPatient} >\n            Notification\n          </div>\n        </div>\n\n        <div className = 'passwordContainer'>\n          <div className = 'password' id = 'currentPW'>\n            Current Password: *****\n          </div>\n          <div className = 'password' id = 'newPW'>\n            New Password: *****\n          </div>\n          <div className = 'password' id = 'retypePW'>\n            Retype New Password: *****\n          </div>\n\n\t\t\t\t\t<div className = 'break'></div>\n\n          <div className = 'saveButton'>\n            Save\n          </div>\n        </div>\n      </div>\n\n\t\t\t<div id = 'notificationsContainer'>\n\t\t\t\t\t\t<div className = 'titleBar-patient'>\n\t\t          <div className = 'securityTitle-patient'onClick = {switchSecurityPatient}>\n\t\t            Security\n\t\t          </div>\n\t\t          <div className = 'notificationTitle-patient' onClick = {switchNotificationPatient} >\n\t\t            Notification\n\t\t          </div>\n\t\t        </div>\n\n\t\t\t\t\t\t<div className = 'folderBorder-patient'>\n\t\t\t\t\t\t\t<div className = 'whiteBorder-patient'>\n\t\t\t          <div className = 'notificationSection'>\n\t\t\t              <div className = 'insideTitle-patient'>\n\t\t\t                Phone Number\n\t\t\t              </div>\n\t\t\t              <div className = 'notifyMe'>\n\t\t\t                Notify Me?\n\t\t\t              </div>\n\t\t\t\t\t\t\t\t\t\t<div className = 'yesContainer'>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'yes'>\n\t\t\t\t\t\t\t\t\t\t\tYes\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'yesBox'> </div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className = 'noContainer'>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'no'>\n\t\t\t\t\t\t\t\t\t\t\tNo\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t              \t<div className = 'noBox'> </div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className = 'infoContainer-patient'>\n\t\t\t\t              <div className = 'infoBox-patient'>\n\t\t\t\t                Call me at:\n\t\t\t\t              </div>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'phone-patient_email_Container-patient'>\n\t\t\t\t\t              <div className = 'phone-patient'>\n\t\t\t\t\t                (408)123-4567\n\t\t\t\t\t              </div>\n\t\t\t\t\t              <div className = 'editContainer-patient'>\n\t\t\t\t\t                <EditIcon/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className = 'edit-patient'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t              </div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t          </div>\n\t\t\t\t\t\t\t\t<div className = 'notificationSection'>\n\t\t\t              <div className = 'insideTitle-patient'>\n\t\t\t                Email\n\t\t\t              </div>\n\t\t\t              <div className = 'notifyMe'>\n\t\t\t                Notify Me?\n\t\t\t              </div>\n\t\t\t\t\t\t\t\t\t\t<div className = 'yesContainer'>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'yes'>\n\t\t\t\t\t\t\t\t\t\t\tYes\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'yesBox'> </div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className = 'noContainer'>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'no'>\n\t\t\t\t\t\t\t\t\t\t\tNo\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t              \t<div className = 'noBox'> </div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className = 'infoContainer-patient'>\n\t\t\t\t              <div className = 'infoBox-patient'>\n\t\t\t\t                Email me at:\n\t\t\t\t              </div>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'phone-patient_email_Container-patient'>\n\t\t\t\t\t              <div className = 'email-patient'>\n\t\t\t\t\t                innovationlab@email.com\n\t\t\t\t\t              </div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className = 'editContainer-patient'>\n\t\t\t\t\t                <EditIcon/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className = 'edit-patient'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t              </div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t          </div>\n\n\t\t\t\t\t\t\t\t<div className = 'break'></div>\n\n\t\t\t\t\t\t\t\t<div className = 'saveButton'>\n\t\t\t            Save\n\t\t\t          </div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n      </div>\n    </div>\n\t);\n}\n","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/patientNav/patientNav.js",["168","169","170","171"],"import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CloseIcon from '@material-ui/icons/Close';\nimport logo from \"../../innovation.png\";\nimport \"./patientNav.css\"\nimport {\n    BrowserRouter as Router,\n    Route,\n    Link\n  } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    title:{\n        flexGrow: 1,\n    }\n}));\n\nexport default function PatientNav(){\n    const classes = useStyles();\n    const [auth, setAuth] = useState(true);\n    const [profileAnchor, setProfileAnchor] = React.useState(null);\n    const [hamburgerAnchor, setHamburgerAnchor] = React.useState(null);\n    const openProfile = Boolean(profileAnchor);\n    const openHamburger = Boolean(hamburgerAnchor);\n    const [hbIcon, setHbIcon] = React.useState(true);\n    const [closeIcon, setCloseIcon]= React.useState(false);\n\n    const handleProfile = (event) => {\n        setProfileAnchor(event.currentTarget);\n    };\n\n    const handleCloseProfile = () => {\n        setProfileAnchor(null);\n    };\n\n    const handleHamburger = (event) => {\n        setHamburgerAnchor(event.currentTarget);\n        setHbIcon(false);\n        setCloseIcon(true);\n    };\n\n    const handleHamburgerClose = () => {\n        setHamburgerAnchor(null);\n        setHbIcon(true);\n        setCloseIcon(false);\n\n    }\n\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar className=\"navStyling\">\n                    <div>\n                        <IconButton\n                            aria-label=\"hamburger list of pages\"\n                            aria-controls=\"menu-appbar\"\n                            aria-haspopup=\"true\"\n                            onClick={handleHamburger}\n                            color=\"inherit\">\n                                {hbIcon === true ? <MenuIcon className=\"hamburger\"/> : null}\n                                {closeIcon === true ? <CloseIcon className=\"close\"/> : null}\n                        </IconButton>\n                        <Menu\n                            id=\"menu-hamburger\"\n                            anchorEl={hamburgerAnchor}\n                            keepMounted\n                            open={openHamburger}\n                            onClose={handleHamburgerClose}\n                            PaperProps={{\n                                style: {\n                                     width: \"100%\",\n                                     maxWidth: \"100%\",\n                                     maxHeight: \"100%\",\n                                     left: 0,\n                                     right: 0,\n                                   }\n                                 }}\n                                 marginThreshold={0}\n                        >\n                            <Link className=\"burgerItem\" onClick={handleHamburgerClose} to=\"/\">Home</Link>\n                            <Link className=\"burgerItem\" onClick={handleHamburgerClose} to=\"/Tutorials\">Tutorials</Link>\n                            <Link className=\"burgerItem\" onClick={handleHamburgerClose} to=\"/Schedule\">Schedule</Link>\n                            <Link className=\"burgerItem\" onClick={handleHamburgerClose} to=\"/faq\">FAQ</Link>\n                            <Link className=\"burgerItem\" onClick={handleHamburgerClose} to=\"/contact\">Contact</Link>\n                        </Menu>\n                    </div>\n                    <IconButton edge=\"start\" id=\"logoIcon\" color=\"#00529b\" aria-label=\"menu\">\n                        <img src={logo} alt=\"Logo\" className=\"siteIcon\"/>\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        <Link className=\"navItem\" to=\"/\">Home</Link>\n                    </Typography>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        <Link className=\"navItem\" to=\"/Tutorials\">Tutorials</Link>\n                    </Typography>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        <Link className=\"navItem\" to=\"/Schedule\">Schedule</Link>\n                    </Typography>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        <Link className=\"navItem\" to=\"/faq\">FAQ</Link>\n                    </Typography>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        <Link className=\"navItem\" to=\"/contact\">Contact</Link>\n                    </Typography>\n                        {auth && (\n                           <div>\n                               <IconButton\n                                    aria-label=\"account of current user\"\n                                    aria-controls=\"menu-appbar\"\n                                    aria-haspopup=\"true\"\n                                    onClick={handleProfile}\n                                    color=\"inherit\"\n                                >\n                                    <AccountCircle />\n                                </IconButton>\n                                <Menu\n                                    id=\"menu-appbar\"\n                                    anchorEl={profileAnchor}\n                                    anchorOrigin={{\n                                        vertical: 'top',\n                                        horizontal: 'right',\n                                        }}\n                                        keepMounted\n                                        transformOrigin={{\n                                        vertical: 'top',\n                                        horizontal: 'right',\n                                    }}\n                                    open={openProfile}\n                                    onClose={handleCloseProfile}\n                                >\n                                    <MenuItem className=\"profileMenu\" onClick={handleCloseProfile}>Jasmine Miller</MenuItem>\n                                    <MenuItem className=\"profileMenu\" onClick={handleCloseProfile}><Link to=\"/profile\" className=\"profileLink\">Profile</Link></MenuItem>\n                                    <MenuItem className=\"profileMenu\" onClick={handleCloseProfile}><Link to=\"/settings\" className=\"profileLink\">Settings</Link></MenuItem>\n                                    <MenuItem className=\"profileMenu\" onClick={handleCloseProfile}>Log Out</MenuItem>\n                                </Menu>\n                           </div> \n                        )}\n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n}","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/pharmContact/pharmContact.js",[],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/patientSchedule/patientSchedule.js",["172","173","174","175","176","177"],"import React, {useState, useEffect} from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ScheduleEvent from \"../../components/scheduleEvent/scheduleEvent\";\nimport './patientSchedule.css';\n\n\nexport default function PatientSchedule(){\n\n    const [currentDay, setCurrentDay] = useState(new Date());\n    const [days, setDays] = useState([]);\n    const [render, setRender] = useState(false);\n    const [earliest, setEarliest] = useState(days[0]);\n    const [selected, setSelected] = useState(\"\");\n\n    let week = [];\n    useEffect(() => {\n        let curr = new Date(new Date()); // get current date  \n        let first = curr.getDate() - curr.getDay(); // First day is the  day of the month - the day of the week  \n        let firstday = new Date(curr.setDate(first)).toISOString().slice(0,10); \n        week = [firstday];\n        for (let i=0; i<7; i++){\n            week.push(new Date(curr.setDate(curr.getDate()+1)).toISOString().slice(0,10));\n        }\n        console.log(week);\n        setDays(week);\n        setRender(true);\n    }, []);    \n\n    const getCurrentDay = (day) => {\n        let numDate = day.substr(-2);\n        let newDate = new Date(day);\n        switch (newDate.getDay()){\n            case 0:\n                return [\"Mo\", numDate];\n            case 1:\n                return [\"Tu\", numDate];\n            case 2: \n                return [\"We\", numDate];\n            case 3:\n                return [\"Th\", numDate];\n            case 4:\n                return [\"Fr\", numDate];\n            case 5:\n                return [\"Sa\", numDate];\n            case 6:\n                return [\"Su\", numDate];\n        }\n    }\n\n    const getCurrentMonth = (month) => {\n        switch (month) {\n            case 0:\n                return \"January\";\n            case 1:\n                return \"February\";\n            case 2: \n                return \"March\";\n            case 3:\n                return \"April\";\n            case 4:\n                return \"May\";\n            case 5:\n                return \"June\";\n            case 6:\n                return \"July\";\n            case 7:\n                return \"August\";\n            case 8:\n                return \"September\";\n            case 9:\n                return \"October\";\n            case 10:\n                return \"November\";\n            case 11:\n                return \"December\";\n        }\n    }\n\n    // on click month, show modal calendar pick\n\n    // left arrow, decrement all current dates by one week\n    const handleNextDay = () => {\n        let week = days;\n        let newDate = new Date(week[week.length-1]);\n        let nextDay = new Date(newDate.getTime()+86400000).toISOString().slice(0,10);\n        week.push(nextDay);\n        week.shift();\n        setDays(week);\n        setEarliest(days[0]);\n    }\n    // right arrow, increment all current dates by one week\n    const handlePrevDay = () => {\n        let week = days;\n        let newDate = new Date(week[0]);\n        let prevDay = new Date(newDate.setDate(newDate.getDate()-1)).toISOString().slice(0,10);\n        week.pop();\n        week.unshift(prevDay);\n        setDays(week);\n        setEarliest(days[0]);\n    }\n\n    return(\n        render === true ? \n        <Grid container className=\"outerScheduleContainer\">\n            <Grid item xs={1}></Grid>\n            <Grid container xs={10} justify=\"center\" direction=\"column\" className=\"gridStyling\">\n                <Typography variant=\"h3\" align=\"center\" className=\"monthStyling\">{getCurrentMonth(new Date(days[0]).getMonth())}</Typography>\n                <Grid className=\"carouselStyling\" direction=\"row\">\n                    <ul className=\"weekDisplay\">\n                        <li className=\"weekDayDisplay arrowIcon\" onClick={handlePrevDay}>&#60;</li>\n                        <li className=\"weekDayDisplay\">\n                                <div className=\"dateContainer\">\n                                    <Typography variant=\"h3\" align=\"center\" className=\"nameDate\">{getCurrentDay(days[0])[0]}</Typography>\n                                    <Typography variant=\"h5\" align=\"center\" className=\"numDate\">{getCurrentDay(days[0])[1]}</Typography>\n                                </div>\n                        </li>\n                        <li className=\"weekDayDisplay\">\n                                <div className=\"dateContainer\">\n                                    <Typography variant=\"h3\" align=\"center\" className=\"nameDate\">{getCurrentDay(days[1])[0]}</Typography>\n                                    <Typography variant=\"h5\" align=\"center\" className=\"numDate\">{getCurrentDay(days[1])[1]}</Typography>\n                                </div>\n                        </li>     \n                        <li className=\"weekDayDisplay\">\n                                <div className=\"dateContainer\">\n                                    <Typography variant=\"h3\" align=\"center\" className=\"nameDate\">{getCurrentDay(days[2])[0]}</Typography>\n                                    <Typography variant=\"h5\" align=\"center\" className=\"numDate\">{getCurrentDay(days[2])[1]}</Typography>\n                                </div>\n                        </li>     \n                        <li className=\"weekDayDisplay\">\n                                <div className=\"dateContainer\">\n                                    <Typography variant=\"h3\" align=\"center\" className=\"nameDate\">{getCurrentDay(days[3])[0]}</Typography>\n                                    <Typography variant=\"h5\" align=\"center\" className=\"numDate\">{getCurrentDay(days[3])[1]}</Typography>\n                                </div>\n                        </li>     \n                        <li className=\"weekDayDisplay\">\n                                <div className=\"dateContainer\">\n                                    <Typography variant=\"h3\" align=\"center\" className=\"nameDate\">{getCurrentDay(days[4])[0]}</Typography>\n                                    <Typography variant=\"h5\" align=\"center\" className=\"numDate\">{getCurrentDay(days[4])[1]}</Typography>\n                                </div>\n                        </li>     \n                        <li className=\"weekDayDisplay\">\n                                <div className=\"dateContainer\">\n                                    <Typography variant=\"h3\" align=\"center\" className=\"nameDate\">{getCurrentDay(days[5])[0]}</Typography>\n                                    <Typography variant=\"h5\" align=\"center\" className=\"numDate\">{getCurrentDay(days[5])[1]}</Typography>\n                                </div>\n                        </li>     \n                        <li className=\"weekDayDisplay\">\n                                <div className=\"dateContainer\">\n                                    <Typography variant=\"h3\" align=\"center\" className=\"nameDate\">{getCurrentDay(days[6])[0]}</Typography>\n                                    <Typography variant=\"h5\" align=\"center\" className=\"numDate\">{getCurrentDay(days[6])[1]}</Typography>\n                                </div>\n                        </li>                             \n                        <li className=\"weekDayDisplay arrowIcon\" onClick={handleNextDay}>&#62;</li>\n                    </ul>\n                </Grid>\n                <Grid className=\"dayContainer\">\n                    <Typography variant=\"h3\" align=\"center\" className=\"dayStyling\">{currentDay.toLocaleString('en-us', {weekday:'long'})}</Typography>\n                    <div className=\"scheduleComponents\">\n                        <br/>\n                            <ScheduleEvent time=\"2:30PM\" name=\"Antibiotic Infusion\"/>\n                            <ScheduleEvent time=\"2:30PM\" name=\"Antibiotic Infusion\"/>\n                            <ScheduleEvent time=\"2:30PM\" name=\"Antibiotic Infusion\"/>\n                    </div>\n                </Grid>\n            </Grid>\n            <Grid item xs={1}></Grid>\n        </Grid>\n        : \"loading...\"\n    )\n}","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/TutorialPage/tutorial.js",["178","179","180"],"import React, {useState, useEffect} from \"react\";\nimport {Grid, Typography, Button} from \"@material-ui/core\";\nimport \"./tutorial.css\"\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport {Card, CardMedia, CardContent} from '@material-ui/core';\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport ReactPlayer from \"react-player\";\nimport Speech from \"react-speech\";\nimport axios from 'axios';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <Box p={3}>\n            <Typography>{children}</Typography>\n          </Box>\n        )}\n      </div>\n    );\n  }\n  \n  TabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n  };\n  \n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n\n  const Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n  });\n  \n  const useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n      backgroundColor: theme.palette.background,\n    },\n    buttonContainer: {\n        flexGrow: 1,\n        display: \"flex\",\n        flexDirection: \"row\",\n    },\n    infusionTitleContainer: {\n        width: \"100%\"\n    },\n  }));\n\nexport default function TutorialPage(props){    \n    const classes = useStyles();\n    const [tutorialArray, setTutorialArray] = useState([]);\n    const [tutorial, setTutorial] = useState({});\n    const [videosLoaded, setVideosLoaded] = useState(false);\n    const [viewCard, setViewCard] = useState(true);\n    const [viewTutorial, setViewTutorial] = useState(false);\n\n    useEffect(() => {\n        let tutorialArr = [];\n        axios.get(\"http://localhost:5000/tutorials/all\").then(res => {\n            tutorialArr = res.data[props.num]['tutorial']; \n            setTutorialArray(tutorialArr);\n            setTutorial(res.data[props.num]);\n            setVideosLoaded(true);\n        })\n    },[])\n\n    const [value, setValue] = useState(0);\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    }\n\n    const [navValue, setNavValue] = useState(0);\n    const handleNavChange = (event, newValue) => {\n        setNavValue(newValue);\n    }\n\n    const [playing, setPlaying] = useState(false);\n    const handlePause = (event) => {\n        setPlaying(false);\n    }\n\n    const handlePlay = (event) => {\n        setPlaying(true);\n    }\n\n    const [descOpen, setOpenDesc] = React.useState(false);\n    const handleClickOpenDesc = () => {\n        setOpenDesc(true);\n    }\n    const handleCloseDesc = () => {\n        setOpenDesc(false);\n    }\n\n    const [stepOpen, setOpenStep] = React.useState(false);\n    const handleClickOpenStep = () => {\n        setOpenStep(true);\n    };\n    const handleCloseStep = () => {\n        setOpenStep(false);\n    };\n\n    const [notesOpen, setOpenNotes] = React.useState(false);\n    const handleClickOpenNotes = () => {\n        setOpenNotes(true);\n    };\n    const handleCloseNotes = () => {\n        setOpenNotes(false);\n    };\n\n    const [videoCounter, setVideoCounter] = useState(0);\n\n    const handleNextVideo = () => {\n        if (videoCounter < tutorialArray.length-1){\n            console.log(tutorialArray)\n            let newCount = videoCounter + 1;\n            setVideoCounter(newCount);\n        }\n    }\n\n    const handlePrevVideo = () => {\n        if (videoCounter > 0){\n            let newCount = videoCounter - 1;\n            setVideoCounter(newCount);\n        }\n    }\n\n    const handleViewTutorial = () => {\n        setViewCard(!viewCard);\n        setViewTutorial(!viewTutorial);\n    }\n\n    return(\n        <Grid container>\n            <Grid xs={1}></Grid>\n            {viewCard === true ?\n            <Grid xs={10} container>\n                <Card className=\"cardRoot\">\n                    <CardMedia\n                        className=\"cover\"\n                        image={videosLoaded===true? tutorial['tutorial'][0]['videoUrl']['thumbnail'] : \"Loading...\"}\n                        title=\"Infusion Details\"\n                    />\n                    <div className=\"cardDetails\">\n                        <CardContent className=\"content\">\n                            <Typography variant=\"h5\">\n                                {videosLoaded===true? tutorial['name']:\"Loading...\"}\n                            </Typography>\n                            <Typography variant=\"subtitle1\">\n                                {videosLoaded===true? tutorial['description']:\"Loading...\"}\n                            </Typography>\n                            <Typography variant=\"subtitle1\">\n                                Duration: {videosLoaded===true? tutorial['duration']:\"Loading...\"}\n                            </Typography>\n                        </CardContent>\n                    </div>\n                    <ArrowForwardIosIcon className=\"arrowButton\" onClick={handleViewTutorial}/>\n                </Card>\n            </Grid> \n            : null }\n            {viewTutorial === true ?  \n            <Grid xs={10} container className=\"centralContainer\">\n                <Grid xs={0} md={6} container>\n                    <div className=\"infusionContainer\">\n                        <div>\n                            <Typography variant=\"h5\" align=\"center\" className=\"infusionTitle\"><KeyboardArrowLeftIcon className=\"toggleBackButton\" onClick={handleViewTutorial}/>{videosLoaded===true ? tutorialArray[videoCounter]['name']:\"Loading...\"}</Typography>\n                        </div>\n                        <div className=\"videoContainer\">\n                            <ReactPlayer className=\"video\" url={videosLoaded===true? tutorialArray[videoCounter]['videoUrl']['url'] : \"Loading...\"} playing={playing} onPlay={handlePlay} onPause={handlePause}/>\n                        </div>\n                    </div>\n                    <div className=\"videoAndDesc\">\n                        <div className=\"videoButtonsContainer\">\n                            <Button disabled={videoCounter === 0} variant=\"contained\" className=\"videoButtons\" onClick={handlePrevVideo}><KeyboardArrowLeftIcon/></Button>\n                            <Button variant=\"contained\" className=\"videoButtons\" onClick={playing === false ? handlePlay : handlePause}>{playing === false ? <PlayArrowIcon/> : <PauseIcon/>}</Button>\n                            <Button disabled={videoCounter === 9} variant=\"contained\" className=\"videoButtons\" onClick={handleNextVideo}><KeyboardArrowRightIcon/></Button>\n                        </div>\n                        <Typography variant=\"body1\" className=\"description desktopInteraction\">Description: {videosLoaded===true? tutorialArray[videoCounter]['description'] : \"Loading...\"}</Typography>\n                    </div>\n                </Grid>\n                <Grid sm={1}></Grid>\n                <Grid xs={0} md={5} container className=\"desktopInteraction\">\n                    <div className={classes.root}>\n                        <div className=\"noteContainer\">\n                            <AppBar position=\"static\" className=\"noteTabs\" fullWidth>\n                                <Tabs value={value} onChange={handleChange} centered className=\"tabsColor\" aria-label=\"simple tabs example\">\n                                    <Tab wrapped label=\"Pharmacist Notes\" {...a11yProps(0)} />\n                                    <Tab wrapped label=\"Text-Only Step List\" {...a11yProps(1)} />\n                                    <Tab wrapped label=\"Infusion Notes\" {...a11yProps(2)} />\n                                </Tabs>\n                            </AppBar>\n                            <TabPanel value={value} index={0}>\n                                <Typography align=\"center\">{videosLoaded===true? tutorialArray[videoCounter]['pharmacistNotes'] : \"Loading...\"}</Typography>\n                            </TabPanel>\n                            <TabPanel value={value} index={1}>\n                                <Typography align=\"center\"><ul>{videosLoaded===true? tutorialArray[videoCounter]['stepList'].map(step => {return <li className=\"listItem\">{step}</li>}) : \"Loading...\"}</ul></Typography>\n                            </TabPanel>\n                            <TabPanel value={value} index={2}>\n                                <Typography align=\"center\">{videosLoaded===true? tutorialArray[videoCounter]['infusionNotes'] : \"Loading...\"}</Typography>\n                            </TabPanel>\n                        </div>\n                        <Button variant=\"contained\" className=\"desktopButtons\">\n                            <Speech\n                            displayText=\"Text-to-Speech\"\n                            textAsButton={true}\n                            text={videosLoaded===true? tutorialArray[videoCounter]['description']:\"Loading...\"} \n                            voice=\"Google UK English Male\"\n                            Text-to-Speech>\n                        </Speech>\n                        </Button>\n                        <Button variant=\"contained\" className=\"desktopButtons\">Download Full Text</Button>\n                    </div>  \n                </Grid>\n            </Grid> : null}\n            {viewTutorial === true ?\n            <BottomNavigation\n                value={navValue}\n                onChange={handleNavChange}\n                showLabels\n                className=\"bottomNav mobileInteraction\"\n            >\n                <BottomNavigationAction className=\"bottomNavItem\" onClick={handleClickOpenDesc} label=\"Description\"/>\n                <BottomNavigationAction className=\"bottomNavItem\" onClick={handleClickOpenStep} label=\"Step List\"/>\n                <BottomNavigationAction className=\"bottomNavItem\" onClick={handleClickOpenNotes} label=\"Notes\"/>    \n                <BottomNavigationAction className=\"bottomNavItem\" label=\"Download Text\"/>        \n            </BottomNavigation> : null}\n            {viewTutorial === true ? \n            <Dialog\n                open={descOpen}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={handleCloseDesc}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"Description\"}</DialogTitle>\n                <DialogContent>\n                <DialogContentText id=\"alert-dialog-slide-description\">\n                    {videosLoaded===true? tutorialArray[videoCounter]['description'] : \"Loading...\"}\n                </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                <Button onClick={handleCloseDesc} color=\"primary\">\n                    Close\n                </Button>\n                </DialogActions>\n            </Dialog> : null}\n            {viewTutorial === true ?\n            <Dialog\n                open={stepOpen}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={handleCloseStep}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"Step List\"}</DialogTitle>\n                <DialogContent>\n                <DialogContentText id=\"alert-dialog-slide-description\">\n                    <ul>{videosLoaded===true? tutorialArray[videoCounter]['stepList'].map(step => {return <li className=\"listItem\">{step}</li>}) : \"Loading...\"}</ul>\n                </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                <Button onClick={handleCloseStep} color=\"primary\">\n                    Close\n                </Button>\n                </DialogActions>\n            </Dialog> : null}\n            {viewTutorial === true ? \n            <Dialog\n                open={notesOpen}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={handleCloseNotes}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"Notes\"}</DialogTitle>\n                <DialogContent>\n                <DialogContentText id=\"alert-dialog-slide-description\">\n                    <Typography variant=\"h5\" color=\"primary\">Pharmacist Notes:</Typography> \n                    <Typography variant=\"body1\">{videosLoaded===true? tutorialArray[videoCounter]['pharmacistNotes'] : \"Loading...\"}</Typography><br/>\n                    <Typography variant=\"h5\" color=\"primary\">Infusion Notes:</Typography>\n                    <Typography variant=\"body1\"> {videosLoaded===true? tutorialArray[videoCounter]['infusionNotes'] : \"Loading...\"}</Typography>\n                </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                <Button onClick={handleCloseNotes} color=\"primary\">\n                    Close\n                </Button>\n                </DialogActions>\n            </Dialog> : null}\n            <Grid xs={1}></Grid>\n        </Grid> \n    )\n}","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/pharmSettings/pharmSettings.js",["181","182","183"],"import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport EditIcon from '@material-ui/icons/Edit';\nimport '../pharmSettings/pharmSettings.css'\n\nfunction switchAbout () {\n\tconsole.log('hello');\n\tdocument.getElementById('securityContainer').style.display = 'none';\n\tdocument.getElementById('aboutUsContainer').style.display = 'flex';\n}\n\nfunction switchSecurity () {\n\tconsole.log('hello');\n\tdocument.getElementById('securityContainer').style.display = 'flex';\n\tdocument.getElementById('aboutUsContainer').style.display = 'none';\n}\n\nexport default function settings() {\n\treturn (\n    <div className = 'settingsContainer'>\n      <div className = 'settingsTitle'>\n        Settings\n      </div>\n\n      <div id = 'securityContainer'>\n        <div className = 'titleBar'>\n          <div className = 'securityTitle'onClick = {switchSecurity}>\n            Security\n          </div>\n          <div className = 'aboutUsTitle' onClick = {switchAbout} >\n            About Us\n          </div>\n        </div>\n\n        <div className = 'passwordContainer'>\n          <div className = 'password' id = 'currentPW'>\n            Current Password: *****\n          </div>\n          <div className = 'password' id = 'newPW'>\n            New Password: *****\n          </div>\n          <div className = 'password' id = 'retypePW'>\n            Retype New Password: *****\n          </div>\n\n\t\t\t\t\t<div className = 'break'></div>\n\n          <div className = 'saveButton'>\n            Save\n          </div>\n        </div>\n      </div>\n\n\t\t\t<div id = 'aboutUsContainer'>\n\t\t\t\t\t\t<div className = 'titleBar'>\n\t\t          <div className = 'securityTitle'onClick = {switchSecurity}>\n\t\t            Security\n\t\t          </div>\n\t\t          <div className = 'aboutUsTitle' onClick = {switchAbout} >\n\t\t            About Us\n\t\t          </div>\n\t\t        </div>\n\n\t\t\t\t\t\t<div className = 'folderBorder'>\n\t\t\t\t\t\t\t<div className = 'whiteBorder'>\n\t\t\t          <div className = 'aboutUsSection'>\n\t\t\t              <div className = 'insideTitle'>\n\t\t\t                Displayed Pharmacy Photo\n\t\t\t              </div>\n\n\t\t\t\t\t\t\t\t\t\t<div className = 'infoContainer'>\n\t\t\t\t              <div className = 'photoBox'>\n\t\t\t\t                <div className = 'photo'> Photo </div>\n\t\t\t\t              </div>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'editContainer'>\n\t\t\t\t\t\t\t\t\t\t\t\t<EditIcon/>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className = 'edit'>\n\t\t\t\t\t\t\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t          </div>\n\n\t\t\t\t\t\t\t\t<div className = 'aboutUsSection'>\n\t\t\t              <div className = 'insideTitle'>\n\t\t\t                Displayed Pharmacy Address\n\t\t\t              </div>\n\t\t\t\t\t\t\t\t\t\t<div className = 'infoOutline'>\n\t\t\t\t              <div className = 'informationBox'>\n\t\t\t\t                Pharmacy Address:\n\t\t\t\t              </div>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'address_Container'>\n\t\t\t\t\t              <div className = 'addressStreet'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t123 Pivot Avenue\n\t\t\t\t\t              </div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className = 'addressState'>\n\t\t\t\t\t\t\t\t\t\t\t\t\tCalifornia, 92612\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className = 'addressCountry'>\n\t\t\t\t\t\t\t\t\t\t\t\t\tUnited States\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'editContainer'>\n\t\t\t\t\t\t\t\t\t\t\t\t<EditIcon/>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className = 'edit'>\n\t\t\t\t\t\t\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t          </div>\n\n\t\t\t\t\t\t\t\t<div className = 'aboutUsSection'>\n\t\t\t              <div className = 'insideTitle'>\n\t\t\t                Displayed Pharmacy Name\n\t\t\t              </div>\n\t\t\t\t\t\t\t\t\t\t<div className = 'infoOutline'>\n\t\t\t\t              <div className = 'informationBox'>\n\t\t\t\t                Pharmacy Name:\n\t\t\t\t              </div>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'nameContainer'>\n\t\t\t\t\t\t\t\t\t\t\t\tLorem ipsum dolor\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'editContainer'>\n\t\t\t\t\t\t\t\t\t\t\t\t<EditIcon/>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className = 'edit'>\n\t\t\t\t\t\t\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t          </div>\n\n\t\t\t\t\t\t\t\t<div className = 'aboutUsSection2'>\n\t\t\t\t\t\t\t\t\t\t<div className = 'insideTitle'>\n\t\t\t\t\t\t\t\t\t\t\tDisplayed Pharmacy Contact Information\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className = 'infoOutline2'>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'informationBox2'>\n\t\t\t\t\t\t\t\t\t\t\t\tPharmacy Phone Number:\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'nameContainer'>\n\t\t\t\t\t\t\t\t\t\t\t\tLorem ipsum dolor\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'editContainer'>\n\t\t\t\t\t\t\t\t\t\t\t\t<EditIcon/>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className = 'edit'>\n\t\t\t\t\t\t\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className = 'infoOutline2'>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'informationBox2'>\n\t\t\t\t\t\t\t\t\t\t\t\tPharmacy Email:\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'nameContainer'>\n\t\t\t\t\t\t\t\t\t\t\t\tLorem ipsum dolor\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'editContainer'>\n\t\t\t\t\t\t\t\t\t\t\t\t<EditIcon/>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className = 'edit'>\n\t\t\t\t\t\t\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n      </div>\n    </div>\n\t);\n}\n","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/scheduleEvent/scheduleEvent.js",["184","185"],"import React from \"react\";\nimport \"./scheduleEvent.css\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default function ScheduleEvent(props){\n    return(\n        <div className=\"scheduleItem\">\n            <div className=\"infusionTime\">{props.time}</div>\n            <div className=\"infusionName\">{props.name}</div>\n        </div>\n    )\n}","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/notifications/notifications.js",["186"],"import React from \"react\";\nimport './notifications.css';\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\n\nexport default function Notification(props){\n    return(\n        <Card variant=\"outlined\" className=\"cardContainer\">\n            <CardContent className=\"cardContents\">\n                <div className=\"leftCard\">\n                    <Typography variant=\"h6\" color=\"secondary\" align=\"left\">{props.title}</Typography>\n                    <Typography variant=\"subtitle2\" align=\"left\">{props.description}</Typography>\n                </div>\n            </CardContent>\n        </Card>\n    )\n}\n","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/patientProfile/profile.js",["187","188","189"],"import React, {useState, useEffect} from \"react\";\nimport \"./profile.css\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default function PatientProfile(){\n    return(\n        <Grid container className=\"profileContainer\">\n            <Grid item xs={2}></Grid>\n            <Grid item xs={8} justify=\"center\">\n                <div className=\"patientProfileInfo\">\n                    <Typography align=\"center\" variant=\"h3\" className=\"patientName\">Jasmine Miller</Typography>\n                    <Typography align=\"center\" variant=\"h4\">Pharmacy: </Typography>\n                    <Typography align=\"center\" variant=\"h4\">Phone Number: </Typography>\n                </div>\n                <div className=\"infusionSummaryContainer\">\n                    <Typography align=\"center\" variant=\"h4\">Summary of Infusion</Typography>\n                    <div className=\"infusionSummary\">\n                        Notes from pharmacist here\n                    </div>\n                </div>\n            </Grid>\n            <Grid item xs={2}></Grid>\n        </Grid>\n    )\n}","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/pharmTutorialList/pharmTutorialList.js",["190","191","192","193","194","195"],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/pharmAssignPage/pharmAssign.js",["196","197","198","199","200"],"import React, { useState, useEffect } from \"react\"\nimport { createMuiTheme, responsiveFontSizes, ThemeProvider } from '@material-ui/core/styles';\nimport { Grid } from \"@material-ui/core\"\nimport { Typography } from \"@material-ui/core\"\nimport ScheduleEvent from \"../../components/scheduleEvent/scheduleEvent\";\nimport { makeStyles, useTheme, withTheme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport './pharmAssign.css'\n\nconst useStyles = makeStyles((theme) => ({\n    root: { flexGrow: 1, },\n    box: {\n        display: 'flex',\n        backgroundColor: '#3F51B5',\n        width: \"90%\",\n        height: \"150px\",\n        margin: '0 auto',\n        marginTop: '33px',\n        borderRadius: 20,\n        color: 'white',\n        backgroundColor: '#00529b',\n        textAlign: 'left',\n        fontSize: '14px'\n    },\n    details: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: '60%',\n    },\n    content: {\n        flex: '1 0 auto',\n\n        marginTop: 5,\n        marginLeft: 3,\n    },\n    cover: {\n        width: 50,\n        height: 50,\n        margin: 'auto 31px',\n        marginRight: 0,\n    },\n    summary: {\n        //marginBottom: 30,\n        overflowY: 'hidden',\n    },\n    playIcon: {\n        height: 38,\n        width: 38,\n    },\n    btn: {\n        margin: 'auto',\n        fontSize: 40,\n        padding:'5px',\n        float:\"right\",\n        backgroundColor: '#00529B',\n        border:  '1px solid white',\n        fontSize: 20,\n        padding:'0',\n        float:\"right\"\n    }\n}));\n\n\nlet theme = createMuiTheme();\ntheme = responsiveFontSizes(theme);\n\nconst TutorialsList = ({list})=>{\n    \n    const classes = useStyles();\n   return <>{list.map((item) => {\n        return <Card className={classes.box}>\n            <CardMedia\n                className={classes.cover}\n                image={item.img}\n                title=\"Live from space album cover\"\n            />\n            <div className={classes.details}>\n                <CardContent className={classes.content}>\n                    <Typography component=\"h6\" variant=\"h6\">\n                        {item.name}\n                    </Typography>\n                    <Typography className={classes.summary} variant=\"subtitle1\" >\n                        {item.description}\n                    </Typography>\n                    <Typography variant=\"subtitle1\" >\n                        Duration: {item.duration}\n                    </Typography>\n                </CardContent>\n            </div>\n            <ArrowForwardIosIcon className={classes.btn} style={{border:'none'}}></ArrowForwardIosIcon>\n        </Card>\n    })}</>\n}\n\n\nconst AddTutorialsList = ({list})=>{\n    \n    const classes = useStyles();\n   return <>{list.map((item) => {\n        return <Card className={classes.box}>\n            <CardMedia\n                className={classes.cover}\n                image={item.img}\n                title=\"Live from space album cover\"\n            />\n            <div className={classes.details}>\n                <CardContent className={classes.content}>\n                    <Typography component=\"h6\" variant=\"h6\">\n                        {item.name}\n                    </Typography>\n                    <Typography className={classes.summary} variant=\"subtitle1\" >\n                        {item.description}\n                    </Typography>\n                    <Typography variant=\"subtitle1\" >\n                        Duration: {item.duration}\n                    </Typography>\n                </CardContent>\n            </div>\n            <AddIcon className={classes.btn}></AddIcon>\n        </Card>\n    })}</>\n}\n\n\n\nexport default function PharmAssign(props) {\n\n    let nextInfusionName = \"Antibiotic\";\n\n    const classes = useStyles();\n    const theme = useTheme();\n\n    const [list, setList] = useState([]);\n\n    useEffect(async () => {\n        const response = await fetch('http://localhost:5000/tutorials/all');\n        const tutorials = await response.json();\n        setList(tutorials)\n    }, [])\n\n    return (\n        <div className={classes.root}>\n            <ThemeProvider theme={theme}>\n                <Grid container justify=\"center\" spacing={0}>\n\n\n                    <Grid item xs={8} sm={8} md={5} className=\"\">\n                        <div>\n                            <div style={{ textAlign: \"left\", height: '30vh' }}>\n                                <Typography variant=\"h2\">Name {nextInfusionName}</Typography>\n                                <br />\n                                <br />\n                                <Typography variant=\"h5\">Next Infusion: {nextInfusionName}</Typography>\n                                <br />\n                                <Typography variant=\"h6\">Next Infusion: {nextInfusionName}</Typography>\n\n                            </div>\n                            <div className=\"\">\n                                <div className=\"notificationLabel\">\n                                    <Typography variant=\"h4\">Today's Schedule <Button style={{marginLeft:10}} className={classes.btn} variant=\"contained\">\n                                    <svg width=\"30\" height=\"30\" viewBox=\"0 0 30 4\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                    <rect width=\"25\" height=\"6\" rx=\"2\" fill=\"#FFFFFF\"/>\n                                    </svg>\n\n                                        </Button><Button className={classes.btn} variant=\"contained\">\n                                    <svg width=\"30\" height=\"30\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                    <rect y=\"8\" width=\"30\" height=\"4\" rx=\"2\" fill=\"#FFFFFF\"/>\n                                    <rect x=\"12\" width=\"30\" height=\"4\" rx=\"2\" transform=\"rotate(90 12 0)\" fill=\"#FFFFFF\"/>\n                                    </svg>\n\n                                    </Button></Typography>                            \n                                </div>\n                                <div className=\"notificationContainer\">\n                                    <ScheduleEvent time=\"12:30PM\" name=\"Antibiotic Infusion\" />\n                                    <ScheduleEvent time=\"4:30PM\" name=\"Antibiotic Infusion\" />\n                                    <ScheduleEvent time=\"8:30PM\" name=\"Antibiotic Infusion\" />\n                                </div>\n                            </div>\n                        </div>\n                    </Grid>\n                    <Grid item xs={8} sm={8} md={5} style={{marginLeft:'50px'}} className=\"widgetContainer\">\n                        <div className=\"scheduleLabel\">\n                            <Typography variant=\"h4\">Assigned Tutorials <Button style={{marginLeft:10}} className={classes.btn} variant=\"contained\">\n                                    <svg width=\"30\" height=\"30\" viewBox=\"0 0 30 4\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                    <rect width=\"25\" height=\"6\" rx=\"2\" fill=\"#FFFFFF\"/>\n                                    </svg>\n\n                                        </Button><Button className={classes.btn} variant=\"contained\">\n                                    <svg width=\"30\" height=\"30\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                    <rect y=\"8\" width=\"30\" height=\"4\" rx=\"2\" fill=\"#FFFFFF\"/>\n                                    <rect x=\"12\" width=\"30\" height=\"4\" rx=\"2\" transform=\"rotate(90 12 0)\" fill=\"#FFFFFF\"/>\n                                    </svg>\n\n                                    </Button></Typography>\n                        </div>\n                        <div className=\"scheduleWidget\">\n                            <TutorialsList list={list} classes={classes}></TutorialsList>\n                        </div>\n                    </Grid>\n                </Grid>\n            </ThemeProvider>\n        </div>\n    )\n}","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/patientTutorials/tutorial.js",["201","202","203","204","205","206","207"],"import React,{useState, useEffect} from \"react\";\nimport {Grid, Typography} from \"@material-ui/core\";\nimport \"./tutorial.css\";\nimport Tutorial from \"../TutorialPage/tutorial\";\nimport axios from 'axios';\n\nexport default function PatientTutorials(){\n\n    const [tutorials, setTutorials] = useState([]);\n    const [tutorialsClicked, setTutorialsClicked] = useState([]);\n    const [tutorialsLoaded, setTutorialsLoaded] = useState(false);\n\n    useEffect(() => {\n        let tutorialsArr = [];\n        let tutorialsBoolArr = [];\n        axios.get('http://localhost:5000/tutorials/all').then(res=>{\n            tutorialsArr = res.data;\n            setTutorials(tutorialsArr);\n            for (let i = 0; i < tutorialsArr.length; i++){\n                tutorialsBoolArr.push(true);\n            }\n            setTutorialsClicked(tutorialsBoolArr);\n            setTutorialsLoaded(true);\n        })\n    },[])\n\n    const handleTutorialClicked = (index) => {\n        let clickedArr = [];\n        for (let i = 0; i < tutorials.length; i++){\n            if (i !== index){\n                clickedArr.push(false);\n            }\n        }\n        setTutorialsClicked(clickedArr);\n    }\n    \n    return (\n        <Grid>\n            {tutorials.map((item, index) => {\n                return <Tutorial num={index}/>    \n            })}\n        </Grid>\n    )\n}","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/UserContext.js",[],{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","severity":1,"message":"213","line":1,"column":8,"nodeType":"214","messageId":"215","endLine":1,"endColumn":12},{"ruleId":"212","severity":1,"message":"216","line":14,"column":8,"nodeType":"214","messageId":"215","endLine":14,"endColumn":13},{"ruleId":"212","severity":1,"message":"217","line":19,"column":8,"nodeType":"214","messageId":"215","endLine":19,"endColumn":21},{"ruleId":"212","severity":1,"message":"218","line":21,"column":8,"nodeType":"214","messageId":"215","endLine":21,"endColumn":22},{"ruleId":"212","severity":1,"message":"219","line":22,"column":8,"nodeType":"214","messageId":"215","endLine":22,"endColumn":19},{"ruleId":"212","severity":1,"message":"220","line":3,"column":8,"nodeType":"214","messageId":"215","endLine":3,"endColumn":18},{"ruleId":"212","severity":1,"message":"221","line":4,"column":8,"nodeType":"214","messageId":"215","endLine":4,"endColumn":16},{"ruleId":"222","severity":1,"message":"223","line":13,"column":5,"nodeType":"224","endLine":13,"endColumn":40},{"ruleId":"222","severity":1,"message":"223","line":18,"column":5,"nodeType":"224","endLine":18,"endColumn":40},{"ruleId":"212","severity":1,"message":"225","line":2,"column":8,"nodeType":"214","messageId":"215","endLine":2,"endColumn":18},{"ruleId":"212","severity":1,"message":"220","line":3,"column":8,"nodeType":"214","messageId":"215","endLine":3,"endColumn":18},{"ruleId":"212","severity":1,"message":"221","line":4,"column":8,"nodeType":"214","messageId":"215","endLine":4,"endColumn":16},{"ruleId":"212","severity":1,"message":"226","line":1,"column":38,"nodeType":"214","messageId":"215","endLine":1,"endColumn":49},{"ruleId":"212","severity":1,"message":"227","line":2,"column":32,"nodeType":"214","messageId":"215","endLine":2,"endColumn":41},{"ruleId":"212","severity":1,"message":"220","line":6,"column":8,"nodeType":"214","messageId":"215","endLine":6,"endColumn":18},{"ruleId":"212","severity":1,"message":"228","line":8,"column":8,"nodeType":"214","messageId":"215","endLine":8,"endColumn":24},{"ruleId":"212","severity":1,"message":"229","line":9,"column":8,"nodeType":"214","messageId":"215","endLine":9,"endColumn":21},{"ruleId":"212","severity":1,"message":"230","line":10,"column":8,"nodeType":"214","messageId":"215","endLine":10,"endColumn":20},{"ruleId":"231","severity":1,"message":"232","line":24,"column":5,"nodeType":"233","messageId":"234","endLine":24,"endColumn":20},{"ruleId":"212","severity":1,"message":"235","line":62,"column":9,"nodeType":"214","messageId":"215","endLine":62,"endColumn":14},{"ruleId":"236","severity":1,"message":"237","line":88,"column":13,"nodeType":"238","endLine":92,"endColumn":4},{"ruleId":"239","severity":1,"message":"240","line":263,"column":21,"nodeType":"224","endLine":263,"endColumn":106},{"ruleId":"212","severity":1,"message":"241","line":4,"column":10,"nodeType":"214","messageId":"215","endLine":4,"endColumn":20},{"ruleId":"212","severity":1,"message":"242","line":18,"column":25,"nodeType":"214","messageId":"215","endLine":18,"endColumn":28},{"ruleId":"212","severity":1,"message":"243","line":64,"column":18,"nodeType":"214","messageId":"215","endLine":64,"endColumn":25},{"ruleId":"212","severity":1,"message":"243","line":25,"column":18,"nodeType":"214","messageId":"215","endLine":25,"endColumn":25},{"ruleId":"236","severity":1,"message":"244","line":71,"column":8,"nodeType":"245","endLine":71,"endColumn":10,"suggestions":"246"},{"ruleId":"239","severity":1,"message":"240","line":86,"column":41,"nodeType":"224","endLine":86,"endColumn":133},{"ruleId":"212","severity":1,"message":"247","line":5,"column":10,"nodeType":"214","messageId":"215","endLine":5,"endColumn":17},{"ruleId":"212","severity":1,"message":"248","line":34,"column":13,"nodeType":"214","messageId":"215","endLine":34,"endColumn":17},{"ruleId":"239","severity":1,"message":"240","line":99,"column":19,"nodeType":"224","endLine":99,"endColumn":104},{"ruleId":"212","severity":1,"message":"249","line":12,"column":20,"nodeType":"214","messageId":"215","endLine":12,"endColumn":26},{"ruleId":"212","severity":1,"message":"250","line":13,"column":3,"nodeType":"214","messageId":"215","endLine":13,"endColumn":8},{"ruleId":"212","severity":1,"message":"251","line":38,"column":9,"nodeType":"214","messageId":"215","endLine":38,"endColumn":21},{"ruleId":"222","severity":1,"message":"223","line":70,"column":13,"nodeType":"224","endLine":70,"endColumn":45},{"ruleId":"212","severity":1,"message":"225","line":2,"column":8,"nodeType":"214","messageId":"215","endLine":2,"endColumn":18},{"ruleId":"212","severity":1,"message":"220","line":3,"column":8,"nodeType":"214","messageId":"215","endLine":3,"endColumn":18},{"ruleId":"212","severity":1,"message":"221","line":4,"column":8,"nodeType":"214","messageId":"215","endLine":4,"endColumn":16},{"ruleId":"212","severity":1,"message":"249","line":16,"column":22,"nodeType":"214","messageId":"215","endLine":16,"endColumn":28},{"ruleId":"212","severity":1,"message":"250","line":17,"column":5,"nodeType":"214","messageId":"215","endLine":17,"endColumn":10},{"ruleId":"212","severity":1,"message":"243","line":33,"column":18,"nodeType":"214","messageId":"215","endLine":33,"endColumn":25},{"ruleId":"212","severity":1,"message":"252","line":35,"column":18,"nodeType":"214","messageId":"215","endLine":35,"endColumn":25},{"ruleId":"212","severity":1,"message":"243","line":11,"column":18,"nodeType":"214","messageId":"215","endLine":11,"endColumn":25},{"ruleId":"253","severity":1,"message":"254","line":15,"column":9,"nodeType":"255","messageId":"256","endLine":30,"endColumn":10},{"ruleId":"212","severity":1,"message":"257","line":35,"column":12,"nodeType":"214","messageId":"215","endLine":35,"endColumn":20},{"ruleId":"236","severity":1,"message":"258","line":43,"column":16,"nodeType":"245","endLine":43,"endColumn":26},{"ruleId":"253","severity":1,"message":"254","line":54,"column":9,"nodeType":"255","messageId":"256","endLine":79,"endColumn":10},{"ruleId":"253","severity":1,"message":"254","line":104,"column":9,"nodeType":"255","messageId":"256","endLine":119,"endColumn":10},{"ruleId":"212","severity":1,"message":"248","line":83,"column":12,"nodeType":"214","messageId":"215","endLine":83,"endColumn":16},{"ruleId":"212","severity":1,"message":"243","line":83,"column":18,"nodeType":"214","messageId":"215","endLine":83,"endColumn":25},{"ruleId":"236","severity":1,"message":"259","line":100,"column":7,"nodeType":"245","endLine":100,"endColumn":9,"suggestions":"260"},{"ruleId":"212","severity":1,"message":"225","line":2,"column":8,"nodeType":"214","messageId":"215","endLine":2,"endColumn":18},{"ruleId":"212","severity":1,"message":"220","line":3,"column":8,"nodeType":"214","messageId":"215","endLine":3,"endColumn":18},{"ruleId":"212","severity":1,"message":"221","line":4,"column":8,"nodeType":"214","messageId":"215","endLine":4,"endColumn":16},{"ruleId":"212","severity":1,"message":"261","line":3,"column":8,"nodeType":"214","messageId":"215","endLine":3,"endColumn":12},{"ruleId":"212","severity":1,"message":"225","line":4,"column":8,"nodeType":"214","messageId":"215","endLine":4,"endColumn":18},{"ruleId":"212","severity":1,"message":"262","line":6,"column":8,"nodeType":"214","messageId":"215","endLine":6,"endColumn":24},{"ruleId":"212","severity":1,"message":"263","line":1,"column":16,"nodeType":"214","messageId":"215","endLine":1,"endColumn":24},{"ruleId":"212","severity":1,"message":"264","line":1,"column":26,"nodeType":"214","messageId":"215","endLine":1,"endColumn":35},{"ruleId":"212","severity":1,"message":"243","line":9,"column":18,"nodeType":"214","messageId":"215","endLine":9,"endColumn":25},{"ruleId":"212","severity":1,"message":"226","line":1,"column":38,"nodeType":"214","messageId":"215","endLine":1,"endColumn":49},{"ruleId":"212","severity":1,"message":"227","line":2,"column":32,"nodeType":"214","messageId":"215","endLine":2,"endColumn":41},{"ruleId":"212","severity":1,"message":"261","line":9,"column":8,"nodeType":"214","messageId":"215","endLine":9,"endColumn":12},{"ruleId":"231","severity":1,"message":"232","line":26,"column":9,"nodeType":"233","messageId":"234","endLine":26,"endColumn":24},{"ruleId":"212","severity":1,"message":"235","line":66,"column":11,"nodeType":"214","messageId":"215","endLine":66,"endColumn":16},{"ruleId":"236","severity":1,"message":"237","line":92,"column":15,"nodeType":"238","endLine":96,"endColumn":6},{"ruleId":"212","severity":1,"message":"227","line":6,"column":32,"nodeType":"214","messageId":"215","endLine":6,"endColumn":41},{"ruleId":"231","severity":1,"message":"232","line":26,"column":9,"nodeType":"233","messageId":"234","endLine":26,"endColumn":24},{"ruleId":"212","severity":1,"message":"235","line":69,"column":29,"nodeType":"214","messageId":"215","endLine":69,"endColumn":34},{"ruleId":"212","severity":1,"message":"265","line":100,"column":7,"nodeType":"214","messageId":"215","endLine":100,"endColumn":23},{"ruleId":"236","severity":1,"message":"237","line":139,"column":15,"nodeType":"238","endLine":143,"endColumn":6},{"ruleId":"212","severity":1,"message":"225","line":3,"column":15,"nodeType":"214","messageId":"215","endLine":3,"endColumn":25},{"ruleId":"212","severity":1,"message":"266","line":6,"column":8,"nodeType":"214","messageId":"215","endLine":6,"endColumn":13},{"ruleId":"212","severity":1,"message":"243","line":10,"column":18,"nodeType":"214","messageId":"215","endLine":10,"endColumn":25},{"ruleId":"212","severity":1,"message":"267","line":14,"column":12,"nodeType":"214","messageId":"215","endLine":14,"endColumn":28},{"ruleId":"212","severity":1,"message":"268","line":15,"column":12,"nodeType":"214","messageId":"215","endLine":15,"endColumn":27},{"ruleId":"236","severity":1,"message":"269","line":26,"column":7,"nodeType":"245","endLine":26,"endColumn":9,"suggestions":"270"},{"ruleId":"212","severity":1,"message":"271","line":28,"column":11,"nodeType":"214","messageId":"215","endLine":28,"endColumn":32},"no-native-reassign",["272"],"no-negated-in-lhs",["273"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Error' is defined but never used.","'PharmSettings' is defined but never used.","'PharmTutorials' is defined but never used.","'PharmAssign' is defined but never used.","'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Typography' is defined but never used.","'useCallback' is defined but never used.","'withTheme' is defined but never used.","'SkipPreviousIcon' is defined but never used.","'PlayArrowIcon' is defined but never used.","'SkipNextIcon' is defined but never used.","no-dupe-keys","Duplicate key 'backgroundColor'.","ObjectExpression","unexpected","'theme' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'makeStyles' is defined but never used.","'key' is assigned a value but never used.","'setUser' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getNextInfusion' and 'getTodaysSchedule'. Either include them or remove the dependency array.","ArrayExpression",["274"],"'Divider' is defined but never used.","'user' is assigned a value but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'handleChange' is assigned a value but never used.","'setAuth' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'earliest' is assigned a value but never used.","Assignments to the 'week' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has a missing dependency: 'props.num'. Either include it or remove the dependency array. If 'setTutorial' needs the current value of 'props.num', you can also switch to useReducer instead of useState and read 'props.num' in the reducer.",["275"],"'Grid' is defined but never used.","'ErrorOutlineIcon' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'AddTutorialsList' is assigned a value but never used.","'axios' is defined but never used.","'tutorialsClicked' is assigned a value but never used.","'tutorialsLoaded' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user.infusionArray'. Either include it or remove the dependency array.",["276"],"'handleTutorialClicked' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},"Update the dependencies array to be: [getNextInfusion, getTodaysSchedule]",{"range":"283","text":"284"},"Update the dependencies array to be: [props.num]",{"range":"285","text":"286"},"Update the dependencies array to be: [user.infusionArray]",{"range":"287","text":"288"},[2428,2430],"[getNextInfusion, getTodaysSchedule]",[3342,3344],"[props.num]",[883,885],"[user.infusionArray]"]
