[{"C:\\Users\\83550\\Documents\\GitHub\\InnovationLab-UCI-Capstone\\gap-project\\client\\src\\index.js":"1","C:\\Users\\83550\\Documents\\GitHub\\InnovationLab-UCI-Capstone\\gap-project\\client\\src\\reportWebVitals.js":"2","C:\\Users\\83550\\Documents\\GitHub\\InnovationLab-UCI-Capstone\\gap-project\\client\\src\\App.js":"3","C:\\Users\\83550\\Documents\\GitHub\\InnovationLab-UCI-Capstone\\gap-project\\client\\src\\components\\nav\\nav.js":"4","C:\\Users\\83550\\Documents\\GitHub\\InnovationLab-UCI-Capstone\\gap-project\\client\\src\\pages\\FAQ\\FAQ.js":"5","C:\\Users\\83550\\Documents\\GitHub\\InnovationLab-UCI-Capstone\\gap-project\\client\\src\\pages\\Tutorial_List\\Tutorial_List.js":"6"},{"size":517,"mtime":1609965644258,"results":"7","hashOfConfig":"8"},{"size":375,"mtime":1609965644259,"results":"9","hashOfConfig":"8"},{"size":1285,"mtime":1611626802962,"results":"10","hashOfConfig":"8"},{"size":4367,"mtime":1611789413816,"results":"11","hashOfConfig":"8"},{"size":6017,"mtime":1611631672057,"results":"12","hashOfConfig":"8"},{"size":3972,"mtime":1611630824813,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"e5ccle",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"C:\\Users\\83550\\Documents\\GitHub\\InnovationLab-UCI-Capstone\\gap-project\\client\\src\\index.js",[],["30","31"],"C:\\Users\\83550\\Documents\\GitHub\\InnovationLab-UCI-Capstone\\gap-project\\client\\src\\reportWebVitals.js",[],"C:\\Users\\83550\\Documents\\GitHub\\InnovationLab-UCI-Capstone\\gap-project\\client\\src\\App.js",["32","33"],"import logo from './logo.svg';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nimport './App.css';\r\nimport Nav from './components/nav/nav';\r\nimport FAQ from './pages/FAQ/FAQ';\r\nimport Tutorials from './pages/Tutorial_List/Tutorial_List'\r\nfunction App() {\r\n  return (<>\r\n\r\n  <Router>\r\n      <Nav/>  \r\n\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/faq\">\r\n          <FAQ />\r\n          </Route>\r\n          <Route path=\"/Schedule\">\r\n            Schedule\r\n          </Route>\r\n          <Route path=\"/tutorials\">\r\n            <Tutorials/>\r\n          </Route>\r\n          <Route path=\"/\">\r\n            Home\r\n          </Route>\r\n        </Switch>\r\n    </Router>\r\n \r\n \r\n    </>\r\n  );\r\n}\r\nexport default App;\r\n/**\r\n <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Hello world\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header>\r\n    </div>\r\n */","C:\\Users\\83550\\Documents\\GitHub\\InnovationLab-UCI-Capstone\\gap-project\\client\\src\\components\\nav\\nav.js",["34","35","36","37","38","39","40","41"],"C:\\Users\\83550\\Documents\\GitHub\\InnovationLab-UCI-Capstone\\gap-project\\client\\src\\pages\\FAQ\\FAQ.js",["42","43"],"import React, { useEffect, useState } from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport SearchBar from \"material-ui-search-bar\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nconst Questions = ({ questions }) => {\r\n\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            width: '80%',\r\n            margin: '0 auto',\r\n        },\r\n        heading: {\r\n            fontSize: theme.typography.pxToRem(15),\r\n            fontWeight: theme.typography.fontWeightRegular,\r\n        },\r\n        question_answers: {\r\n            marginTop: '20px',\r\n        },\r\n    }));\r\n    const classes = useStyles();\r\n    return (<div className={classes.root}>\r\n        {questions.map((question, index) => {\r\n\r\n            return <Accordion className={classes.question_answers}>\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls={`panel${index}-content`}\r\n                    id={`panel${index}-header`}\r\n                >\r\n                    <Typography className={classes.heading}> {question.title}</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <Typography>\r\n                        {question.content}\r\n                    </Typography>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n        })\r\n        }\r\n\r\n\r\n    </div>)\r\n}\r\n\r\nconst FAQ = () => {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        searchBar: {\r\n            width: '80%',\r\n            borderRadius: '50px',\r\n            margin: '0 auto',\r\n            color: '#00529b',\r\n\r\n        },\r\n        title: {\r\n            width: '100%',\r\n            color: '#00529b',\r\n            textAlign: 'center',\r\n            fontFamily: 'Roboto',\r\n            fontSize: '24px',\r\n            padding: '45px 0px 45px 0px',\r\n\r\n        },\r\n        information: {\r\n            color: '#00529b',\r\n            textAlign: 'center',\r\n            fontFamily: 'Roboto',\r\n            fontSize: '18px',\r\n            padding: '25px 0px 25px 0px',\r\n        },\r\n        title2: {\r\n            color: '#00529b',\r\n            textAlign: 'center',\r\n            fontFamily: 'Roboto',\r\n            fontSize: '18px',\r\n            padding: '50px 0px 25px 0px',\r\n        }\r\n    }));\r\n\r\n    const [questions, setQuestions] = useState([{\r\n        title: 'question 1', content: 'Aenean in apple massa. Praesent mattis bibendum hendrerit. Nunc bibendum odio nisi, vitae efficitur lacus molestie ac. Aenean eget venenatis magna. Ut accumsan urna et ex fringilla, nec malesuada tortor aliquam. Curabitur ullamcorper urna id volutpat vestibulum. Pellentesque quam eros, mollis iaculis feugiat eu, tempus sit amet sapien.'\r\n    }, {\r\n        title: 'question 2', content: 'Aenean in lorem massa. Praesent mattis bibendum hendrerit. Nunc bibendum odio nisi, vitae efficitur lacus molestie ac. Aenean eget venenatis magna. Ut accumsan urna et ex fringilla, nec malesuada tortor aliquam. Curabitur ullamcorper urna id volutpat vestibulum. Pellentesque quam eros, mollis iaculis feugiat eu, tempus sit amet sapien.'\r\n    }, {\r\n        title: 'question 3', content: 'Aenean in lorem massa. Praesent banana bibendum hendrerit. Nunc bibendum odio nisi, vitae efficitur lacus molestie ac. Aenean eget venenatis magna. Ut accumsan urna et ex fringilla, nec malesuada tortor aliquam. Curabitur ullamcorper urna id volutpat vestibulum. Pellentesque quam eros, mollis iaculis feugiat eu, tempus sit amet sapien.'\r\n    }, {\r\n        title: 'question 4', content: 'Aenean in lorem massa. Praesent mattis bibendum hendrerit. Nunc bibendum odio nisi, vitae efficitur lacus molestie ac. Aenean eget venenatis magna. Ut accumsan urna et ex fringilla, nec malesuada tortor aliquam. Curabitur ullamcorper urna id volutpat vestibulum. Pellentesque quam eros, mollis iaculis feugiat eu, tempus sit amet sapien.'\r\n    }, {\r\n        title: 'question 5', content: 'Aenean in lorem massa. Praesent mattis bibendum hendrerit. Nunc bibendum odio nisi, vitae efficitur lacus molestie ac. Aenean eget venenatis magna. Ut accumsan urna et ex fringilla, nec malesuada tortor aliquam. Curabitur ullamcorper urna id volutpat vestibulum. Pellentesque quam eros, mollis iaculis feugiat eu, tempus sit amet sapien.'\r\n    }]);\r\n    const [displayedQuestions,setDisplayedQuestions] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        setDisplayedQuestions(questions);\r\n    },[])\r\n\r\n    const [value, setValue] = useState('');\r\n    const classes = useStyles();\r\n    const handleSearch = (value) => {\r\n        let q = questions.filter((question)=>{\r\n            return question.title.includes(value) || question.content.includes(value);\r\n        })\r\n        setDisplayedQuestions(q);\r\n    }\r\n\r\n\r\n    return (\r\n        <Container >\r\n            <Typography variant=\"h4\" className={classes.title}>\r\n                How can we help you?\r\n        </Typography>\r\n            <SearchBar\r\n                className={classes.searchBar}\r\n                value={value}\r\n                type='text'\r\n                onChange={(newValue) => setValue(newValue)}\r\n                onRequestSearch={(value) => handleSearch( value)}\r\n            >\r\n            </SearchBar>\r\n            <Typography variant=\"h4\" className={classes.title2}>\r\n                Frequently Asked Questions\r\n        </Typography>\r\n            <Questions questions={displayedQuestions}></Questions>\r\n            <Typography variant=\"h4\" className={classes.information}>\r\n                Still have questions? <br />\r\n            Contact us using online Help <br />\r\n            or call 123-456-7890\r\n        </Typography>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FAQ;","C:\\Users\\83550\\Documents\\GitHub\\InnovationLab-UCI-Capstone\\gap-project\\client\\src\\pages\\Tutorial_List\\Tutorial_List.js",["44","45","46","47","48","49","50","51"],"import React, { useEffect, useState,useCallback } from 'react';\r\nimport { makeStyles, useTheme, withTheme } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      backgroundColor:'#3F51B5',\r\n      width: \"70%\",\r\n      height: \"216px\",\r\n      margin: '0 auto',\r\n      marginTop: '33px',\r\n      borderRadius: 20,\r\n      color: 'white',\r\n    },\r\n    details: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      width: '60%',\r\n    },\r\n    content: {\r\n      flex: '1 0 auto',\r\n\r\n      marginTop: 25,\r\n      marginLeft: 3,\r\n    },\r\n    cover: {\r\n      width: 150,\r\n      height: 150,\r\n      margin:'auto 31px',\r\n      marginRight:0,\r\n    },\r\n    summary: {\r\n        //marginBottom: 30,\r\n        overflowY: 'hidden',\r\n        height: '80px',\r\n    },\r\n    playIcon: {\r\n      height: 38,\r\n      width: 38,\r\n    },\r\n    btn:{\r\n        margin: 'auto',\r\n        marginRight: 47,\r\n        fontSize: 40,\r\n        \r\n    }\r\n  }));\r\n\r\nconst Tutorials = ()=>{\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n   const [list, setList] = useState([]);\r\n   const initList = useCallback(()=>{\r\n\r\n    const tutorials = [{\r\n        name:'Infusion A',\r\n        summary:`Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed viverra cursus augue, et suscipit dolor volutpat et. Fusce ut diam justo. Aliquam erat volutpat. Curabitur egestas diam sed lacus consectetur accumsan. Pellentesque consequat sem libero, vitae vestibulum arcu euismod sit amet. Nullam vitae lectus vitae arcu auctor venenatis. Interdum et malesuada fames ac ante ipsum primis in faucibus. Duis cursus nunc ut leo condimentum ultricies. In volutpat nisl nulla, at ornare augue pellentesque non. Phasellus hendrerit, elit vel condimentum auctor, quam velit molestie dolor, vel auctor felis purus eu ligula. Fusce ut semper lorem, ac lobortis enim. Vestibulum lectus justo, aliquet a ligula eget, vulputate pulvinar orci. Vestibulum dapibus et ligula eget egestas. Aenean eu felis magna. Nunc dapibus commodo nisi. Quisque in dignissim enim.`,\r\n        duration:'20 min',\r\n        img:'https://picsum.photos/seed/picsum/150/150',\r\n    },{\r\n        name:'Infusion B',\r\n        summary:'Summary B',\r\n        duration:'15 min',\r\n        img:'https://picsum.photos/seed/picsum/150/150',\r\n    },{\r\n        name:'Infusion C',\r\n        summary:'Summary C',\r\n        duration:'17 min',\r\n        img:'https://picsum.photos/seed/picsum/150/150',\r\n    }]\r\n    setList(tutorials)\r\n   },[list]);\r\n   useEffect(()=>{\r\n        initList();\r\n   },[])\r\n\r\n\r\n   return <>{\r\n    list.map((item)=>{\r\n        return <Card className={classes.root}>\r\n        <CardMedia\r\n          className={classes.cover}\r\n          image={item.img}\r\n          title=\"Live from space album cover\"\r\n        />\r\n         <div className={classes.details}>\r\n          <CardContent className={classes.content}>\r\n            <Typography component=\"h5\" variant=\"h5\">\r\n              {item.name}\r\n            </Typography>\r\n            <Typography className={classes.summary} variant=\"subtitle1\" >\r\n             {item.summary}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" >\r\n            Duration: {item.duration}\r\n            </Typography>\r\n          </CardContent>\r\n        </div>\r\n        <ArrowForwardIosIcon className={classes.btn}></ArrowForwardIosIcon>\r\n      </Card>\r\n    })\r\n\r\n   }</>\r\n}\r\n\r\nexport default Tutorials;",{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":1,"column":8,"nodeType":"58","messageId":"59","endLine":1,"endColumn":12},{"ruleId":"56","severity":1,"message":"60","line":7,"column":3,"nodeType":"58","messageId":"59","endLine":7,"endColumn":7},{"ruleId":"56","severity":1,"message":"61","line":7,"column":8,"nodeType":"58","messageId":"59","endLine":7,"endColumn":16},{"ruleId":"56","severity":1,"message":"62","line":9,"column":8,"nodeType":"58","messageId":"59","endLine":9,"endColumn":14},{"ruleId":"56","severity":1,"message":"63","line":10,"column":8,"nodeType":"58","messageId":"59","endLine":10,"endColumn":24},{"ruleId":"56","severity":1,"message":"64","line":11,"column":8,"nodeType":"58","messageId":"59","endLine":11,"endColumn":17},{"ruleId":"56","severity":1,"message":"65","line":15,"column":27,"nodeType":"58","messageId":"59","endLine":15,"endColumn":33},{"ruleId":"56","severity":1,"message":"66","line":17,"column":3,"nodeType":"58","messageId":"59","endLine":17,"endColumn":8},{"ruleId":"56","severity":1,"message":"67","line":41,"column":9,"nodeType":"58","messageId":"59","endLine":41,"endColumn":21},{"ruleId":"68","severity":1,"message":"69","line":72,"column":13,"nodeType":"70","endLine":72,"endColumn":45},{"ruleId":"56","severity":1,"message":"71","line":87,"column":23,"nodeType":"58","messageId":"59","endLine":87,"endColumn":35},{"ruleId":"72","severity":1,"message":"73","line":102,"column":7,"nodeType":"74","endLine":102,"endColumn":9,"suggestions":"75"},{"ruleId":"56","severity":1,"message":"76","line":2,"column":32,"nodeType":"58","messageId":"59","endLine":2,"endColumn":41},{"ruleId":"56","severity":1,"message":"77","line":6,"column":8,"nodeType":"58","messageId":"59","endLine":6,"endColumn":18},{"ruleId":"56","severity":1,"message":"78","line":8,"column":8,"nodeType":"58","messageId":"59","endLine":8,"endColumn":24},{"ruleId":"56","severity":1,"message":"79","line":9,"column":8,"nodeType":"58","messageId":"59","endLine":9,"endColumn":21},{"ruleId":"56","severity":1,"message":"80","line":10,"column":8,"nodeType":"58","messageId":"59","endLine":10,"endColumn":20},{"ruleId":"56","severity":1,"message":"81","line":60,"column":11,"nodeType":"58","messageId":"59","endLine":60,"endColumn":16},{"ruleId":"72","severity":1,"message":"82","line":81,"column":6,"nodeType":"74","endLine":81,"endColumn":12,"suggestions":"83"},{"ruleId":"72","severity":1,"message":"84","line":84,"column":6,"nodeType":"74","endLine":84,"endColumn":8,"suggestions":"85"},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'MenuIcon' is defined but never used.","'Switch' is defined but never used.","'FormControlLabel' is defined but never used.","'FormGroup' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'handleChange' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'setQuestions' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'questions'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setDisplayedQuestions' needs the current value of 'questions'.","ArrayExpression",["88"],"'withTheme' is defined but never used.","'IconButton' is defined but never used.","'SkipPreviousIcon' is defined but never used.","'PlayArrowIcon' is defined but never used.","'SkipNextIcon' is defined but never used.","'theme' is assigned a value but never used.","React Hook useCallback has an unnecessary dependency: 'list'. Either exclude it or remove the dependency array.",["89"],"React Hook useEffect has a missing dependency: 'initList'. Either include it or remove the dependency array.",["90"],"no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},"Update the dependencies array to be: [questions]",{"range":"97","text":"98"},"Update the dependencies array to be: []",{"range":"99","text":"100"},"Update the dependencies array to be: [initList]",{"range":"101","text":"102"},[4757,4759],"[questions]",[3044,3050],"[]",[3100,3102],"[initList]"]