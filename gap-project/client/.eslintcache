[{"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/index.js":"1","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/App.js":"2","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/reportWebVitals.js":"3","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/footer/footer.js":"4","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/nav/nav.js":"5","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/loginSignUp/loginSignUp.js":"6","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/signUpForm/signUpForm.js":"7","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/FAQ/FAQ.js":"8","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/pharmContact/pharmContact.js":"9"},{"size":500,"mtime":1610145654937,"results":"10","hashOfConfig":"11"},{"size":1220,"mtime":1612981671360,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1610145654938,"results":"13","hashOfConfig":"11"},{"size":0,"mtime":1612978320447,"results":"14","hashOfConfig":"11"},{"size":4040,"mtime":1612981696965,"results":"15","hashOfConfig":"11"},{"size":0,"mtime":1612978320450,"results":"16","hashOfConfig":"11"},{"size":0,"mtime":1612978320449,"results":"17","hashOfConfig":"11"},{"size":5531,"mtime":1612978320450,"results":"18","hashOfConfig":"11"},{"size":4826,"mtime":1612981581051,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"axtido",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/index.js",[],["42","43"],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/App.js",["44","45"],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/reportWebVitals.js",[],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/footer/footer.js",["46","47","48","49"],"import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport '../footer/footer.css';\n\n\nexport default function footerBar() {\n\treturn (\n\t\t<div className=\"footerContainer\">\n\t\t\t<div className=\"liveHelpBar\">\n\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t<a className=\"footerLink\" href=\"#\">Live Help</a>\n\t\t\t\t</Typography>\n\t\t\t</div>\n\t\t\t<div className=\"contactBar\">\n\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t<a className=\"footerLink\" href=\"#\">Pharmacy Contact Info</a>\n\t\t\t\t</Typography>\n\t\t\t</div>\n\t\t</div>\n\t);\n}","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/nav/nav.js",["50","51","52","53","54"],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/loginSignUp/loginSignUp.js",[],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/signUpForm/signUpForm.js",["55"],"import React, { useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport { Grid } from '@material-ui/core';\nimport { Typography } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport LoginForm from \"../loginForm/loginForm\"\nimport \"../signUpForm/signUpForm.css\"\nimport axios from \"axios\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n  }));\n\n\nexport default function SignUpForm(props){\n    // Email validation\n    var validator = require('email-validator');\n    function validateEmail(email) {\n        validator.validate(email);\n    }\n\n    // Phone validation\n    const phone = require('fonz.js');\n    var passwordValidator = require('password-validator');\n    var schema = new passwordValidator();\n    schema\n    .is().min(8)                                    // Minimum length 8\n    .is().max(16)                                   // Maximum length 16\n    .has().uppercase()                              // Must have uppercase letters\n    .has().lowercase()                              // Must have lowercase letters\n    .has().digits(2)                                // Must have at least 2 digits\n    .has().not().spaces()                           // Should not have spaces\n    .has().symbols();                                // Must have at least one symbol*/\n\n    const classes = useStyles();\n    const [signupLanding, setSignupLanding] = useState(true);\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [birthdate, setBirthdate] = useState(\"\");\n    const [gender, setGender] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [phoneNumber, setPhoneNumber] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [repeatPassword, setRepeatPassword] = useState(\"\");\n    const [loginLanding, setLoginLanding] = useState(false);    \n  \n    const user = {\n      firstName: firstName,\n      lastName: lastName,\n      birthday: birthdate,\n      gender: gender,\n      email: email,\n      phoneNumber: phoneNumber,\n      password: password\n    }\n\n    const toggleOne = () => {\n      setSignupLanding(false);\n      setSignupFormPageOne(true);\n    }\n\n    const toggleTwo = () => {\n      setSignupFormPageOne(false);\n      setSignupFormPageTwo(true);\n    }\n\n    const toggleThree = () => {\n      console.log(user);\n      setSignupFormPageTwo(false);\n      setSuccessPage(true);\n      \n      axios.post('http://localhost:5000/patients/register', user).then(res=>{\n        console.log(res);\n      })\n    }\n\n    const toggleFour = () => {\n      setSignupFormPageTwo(false);\n      setSignupFormPageOne(true);\n    }\n\n    const toggleFive = () => {\n      setSuccessPage(false);\n      setLoginLanding(true);\n    }\n\n    const [signupFormPageOne, setSignupFormPageOne] = useState(false);\n    const [signupFormPageTwo, setSignupFormPageTwo] = useState(false);\n    const [successPage, setSuccessPage] = useState(false);\n\n    const handleChange = (event) => {\n        setGender(event.target.value);\n    }\n\n    const handleFirstNameChange = (event) => {\n        setFirstName(event.target.value);\n    }\n\n    const handleLastNameChange = (event) => {\n        setLastName(event.target.value);\n    }\n\n    const handleBirthdateChange = (event) => {\n        setBirthdate(event.target.value);\n    }\n\n    const handleEmailChange = (event) => {\n        setEmail(event.target.value);\n    }\n\n    const handlePasswordChange = (event) => {\n        setPassword(event.target.value);\n    }\n\n    const handlePhoneNumberChange = (event) => {\n        setPhoneNumber(event.target.value);\n    }\n\n    const handleRepeatChange = (event) => {\n        setRepeatPassword(event.target.value);\n    }\n\n    return(\n      <div className={classes.root}>\n          <Grid container justify=\"center\" spacing={3}>\n              <Grid item xs={3}></Grid>\n              {signupLanding === true ? \n              <Grid item xs={6} className=\"signupButton\">\n                <div className=\"buttonStyling\" onClick={toggleOne}>\n                  <Typography variant=\"h3\" className=\"textStyling textHolder\">Sign Up</Typography>\n                  <Typography variant=\"h6\" className=\"textStyling\">(with Access Code)</Typography>\n                </div>\n              </Grid>\n              : null}\n              {signupFormPageOne === true ? \n                <Grid item xs={6}>\n                  <div className=\"formDiv\">\n                    <Typography variant=\"h5\" color=\"primary\" className=\"formTitle\">Create your account</Typography>\n                    <TextField className=\"formStyling formMargin\" id=\"outlined-basic\" label=\"First Name\" defaultValue={firstName} variant=\"outlined\" onChange={handleFirstNameChange} required />\n                    <TextField className=\"formStyling formMargin\" id=\"outlined-basic\" label=\"Last Name\" defaultValue={lastName} variant=\"outlined\" onChange={handleLastNameChange} required />\n                    <TextField \n                      id=\"date\"\n                      label=\"Birthday\"\n                      type=\"date\"\n                      defaultValue={birthdate}\n                      className=\"formMargin\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                      fullWidth\n                      onChange={handleBirthdateChange}\n                      required />\n                    <FormControl className=\"selectGender formMargin\" required>\n                      <InputLabel id=\"demo-simple-select-label\">Gender</InputLabel>\n                      <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        defaultValue={gender}\n                        onChange={handleChange}\n                      >\n                        <MenuItem value=\"male\">Male</MenuItem>\n                        <MenuItem value=\"female\">Female</MenuItem>\n                        <MenuItem value=\"other\">Other</MenuItem>\n                      </Select>\n                  </FormControl>\n                    <Button disabled={firstName === \"\" || lastName === \"\" || birthdate === \"\" || gender === \"\"} variant=\"outlined\" className=\"nextFull\" onClick={toggleTwo}>Next</Button>\n                  </div>\n                </Grid>\n              : null}\n              {signupFormPageTwo === true ? \n                <Grid item xs={6}>\n                  <div className=\"formDiv\">\n                    <Typography variant=\"h5\" color=\"primary\" className=\"formTitle\">Create your account</Typography>\n                    <TextField className=\"formStyling formMargin\" id=\"outlined-basic\" label=\"Email\" variant=\"outlined\" defaultValue={email} onChange = {handleEmailChange} required />\n                    <TextField className=\"formStyling formMargin\" id=\"outlined-basic\" label=\"Phone\" variant=\"outlined\" defaultValue={phoneNumber} onChange = {handlePhoneNumberChange} required />\n                    <TextField className=\"formStyling formMargin\" type=\"password\" id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" onChange = {handlePasswordChange} required />\n                    <TextField className=\"formStyling formMargin\" type=\"password\" id=\"outlined-basic\" label=\"Repeat Password\" variant=\"outlined\" onChange = {handleRepeatChange} required />\n                  </div>\n                  <Button variant=\"outlined\" className=\"prev\" onClick={toggleFour}>Back</Button>\n                  <Button disabled = {\n                        email === \"\" ||\n                        validateEmail(email) === true || \n                        phone.validate(phoneNumber) === false || \n                        schema.validate(password) === false || \n                        password !== repeatPassword } \n                        variant=\"outlined\" className=\"next\" onClick={toggleThree}>Submit</Button>\n                </Grid>\n              : null}\n              {successPage === true ? \n                <Grid item xs={6}>\n                  <div className=\"formDiv\">\n                    <img src=\"https://picsum.photos/seed/picsum/200/300\" className=\"signupSuccessPhoto\"/>\n                    <Typography variant=\"h5\" align=\"center\" className=\"signupSuccessTypography\">Congratulations!</Typography>\n                    <Typography variant=\"h5\" align=\"center\">Your account is ready</Typography>\n                  </div>\n                <Button variant=\"outlined\" className=\"nextFull\" onClick={toggleFive}>Login</Button>\n                </Grid>\n              : null }\n              {loginLanding === true ? \n                <LoginForm loginLanding={false} loginForm={true}/>\n              : null}\n              <Grid item xs={3}></Grid>                 \n          </Grid>\n      </div>\n    )\n}","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/FAQ/FAQ.js",["56"],"import React, { useEffect, useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport SearchBar from \"material-ui-search-bar\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport axios from 'axios';\n\n\nconst Questions = ({ questions }) => {\n\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            width: '80%',\n            margin: '0 auto',\n        },\n        heading: {\n            fontSize: theme.typography.pxToRem(15),\n            fontWeight: theme.typography.fontWeightRegular,\n        },\n        question_answers: {\n            marginTop: '20px',\n        },\n    }));\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            {questions.map((faq, index) => {\n                return <Accordion className={classes.question_answers}>\n                    <AccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls={`panel${index}-content`}\n                        id={`panel${index}-header`}\n                    >\n                        <Typography className={classes.heading}> {faq.question}</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                        <Typography>\n                            {faq.answer}\n                        </Typography>\n                    </AccordionDetails>\n                </Accordion>\n            })\n            }\n    </div>\n    )\n}\n\nconst FAQ = () => {\n\n    const useStyles = makeStyles((theme) => ({\n        searchBar: {\n            width: '80%',\n            borderRadius: '50px',\n            margin: '0 auto',\n            color: '#00529b',\n\n        },\n        title: {\n            width: '100%',\n            color: '#00529b',\n            textAlign: 'center',\n            fontFamily: 'Roboto',\n            fontSize: '24px',\n            padding: '45px 0px 45px 0px',\n\n        },\n        information: {\n            color: '#00529b',\n            textAlign: 'center',\n            fontFamily: 'Roboto',\n            fontSize: '18px',\n            padding: '25px 0px 25px 0px',\n        },\n        title2: {\n            color: '#00529b',\n            textAlign: 'center',\n            fontFamily: 'Roboto',\n            fontSize: '18px',\n            padding: '50px 0px 25px 0px',\n        }\n    }));\n\n\n    const [questions, setQuestions] = useState([]);\n\n    const [displayedQuestions,setDisplayedQuestions] = useState([{}]);\n\n    useEffect(()=>{\n        axios.get('http://localhost:5000/faqs/all').then(res => {\n            console.log(questions)\n            console.log(res.data)\n            console.log(typeof(res.data))\n            res.data.forEach(faq => {\n                console.log(faq)\n                setQuestions([...questions, faq]);\n                console.log(questions)\n            })\n        });\n        //setDisplayedQuestions(questions);\n    },[])\n\n    const [value, setValue] = useState('');\n    const classes = useStyles();\n    const handleSearch = (value) => {\n        let q = questions.filter((faq)=>{\n            return faq.question.includes(value) || faq.answer.includes(value);\n        })\n        setDisplayedQuestions(q);\n    }\n\n\n\n    return (\n        <Container >\n            <Typography variant=\"h4\" className={classes.title}>\n                How can we help you?\n        </Typography>\n            <SearchBar\n                className={classes.searchBar}\n                value={value}\n                type='text'\n                onChange={(newValue) => setValue(newValue)}\n                onRequestSearch={(value) => handleSearch( value)}\n            >\n            </SearchBar>\n            <Typography variant=\"h4\" className={classes.title2}>\n                Frequently Asked Questions\n        </Typography>\n            <Questions questions={displayedQuestions}></Questions>\n            <Typography variant=\"h4\" className={classes.information}>\n                Still have questions? <br />\n            Contact us using online Help <br />\n            or call 123-456-7890\n        </Typography>\n\n        </Container>\n    )\n}\n\nexport default FAQ;","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/pharmContact/pharmContact.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":1,"column":8,"nodeType":"63","messageId":"64","endLine":1,"endColumn":12},{"ruleId":"61","severity":1,"message":"65","line":7,"column":3,"nodeType":"63","messageId":"64","endLine":7,"endColumn":7},{"ruleId":"61","severity":1,"message":"66","line":3,"column":8,"nodeType":"63","messageId":"64","endLine":3,"endColumn":18},{"ruleId":"61","severity":1,"message":"67","line":4,"column":8,"nodeType":"63","messageId":"64","endLine":4,"endColumn":16},{"ruleId":"68","severity":1,"message":"69","line":13,"column":5,"nodeType":"70","endLine":13,"endColumn":40},{"ruleId":"68","severity":1,"message":"69","line":18,"column":5,"nodeType":"70","endLine":18,"endColumn":40},{"ruleId":"61","severity":1,"message":"67","line":7,"column":8,"nodeType":"63","messageId":"64","endLine":7,"endColumn":16},{"ruleId":"61","severity":1,"message":"71","line":9,"column":8,"nodeType":"63","messageId":"64","endLine":9,"endColumn":14},{"ruleId":"61","severity":1,"message":"72","line":10,"column":8,"nodeType":"63","messageId":"64","endLine":10,"endColumn":24},{"ruleId":"61","severity":1,"message":"73","line":11,"column":8,"nodeType":"63","messageId":"64","endLine":11,"endColumn":17},{"ruleId":"61","severity":1,"message":"74","line":38,"column":9,"nodeType":"63","messageId":"64","endLine":38,"endColumn":21},{"ruleId":"75","severity":1,"message":"76","line":200,"column":21,"nodeType":"70","endLine":200,"endColumn":106},{"ruleId":"77","severity":1,"message":"78","line":105,"column":7,"nodeType":"79","endLine":105,"endColumn":9,"suggestions":"80"},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Switch' is defined but never used.","'FormControlLabel' is defined but never used.","'FormGroup' is defined but never used.","'handleChange' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'questions'. Either include it or remove the dependency array. You can also do a functional update 'setQuestions(q => ...)' if you only need 'questions' in the 'setQuestions' call.","ArrayExpression",["83"],"no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},"Update the dependencies array to be: [questions]",{"range":"86","text":"87"},[3188,3190],"[questions]"]