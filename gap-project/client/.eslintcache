[{"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/index.js":"1","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/App.js":"2","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/reportWebVitals.js":"3","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/footer/footer.js":"4","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/404_error/404_error.js":"5","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/loginSignUp/loginSignUp.js":"6","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/signUpForm/signUpForm.js":"7","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/FAQPage/faq.js":"8","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/patientSettings/settings.js":"9","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/homePage/patient/patientHome.js":"10","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/FAQPage/question.js":"11","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/loginForm/loginForm.js":"12","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/nav/nav.js":"13","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/settings/settings.js":"14","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/patientNav/patientNav.js":"15","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/pharmContact/pharmContact.js":"16","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/patientSchedule/patientSchedule.js":"17","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/TutorialPage/tutorial.js":"18","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/scheduleEvent/scheduleEvent.js":"19","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/notifications/notifications.js":"20","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/patientProfile/profile.js":"21","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/pharmTutorialList/pharmTutorialList.js":"22","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/pharmAssignPage/pharmAssign.js":"23","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/patientTutorials/tutorial.js":"24","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/UserContext.js":"25","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/navPharmResponsive/navPharmResponsive.js":"26","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/homePage/pharmacist/pharmacistHome.js":"27","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/PatientContext.js":"28","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/authNav/authNav.js":"29","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/pharmFooter/footer.js":"30","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/TutorialContext.js":"31","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/TutorialList/tutorialList.js":"32","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/pharmSettings/settings.js":"33"},{"size":500,"mtime":1610145654937,"results":"34","hashOfConfig":"35"},{"size":3976,"mtime":1615282401515,"results":"36","hashOfConfig":"35"},{"size":362,"mtime":1610145654938,"results":"37","hashOfConfig":"35"},{"size":460,"mtime":1615107862084,"results":"38","hashOfConfig":"35"},{"size":424,"mtime":1612981913369,"results":"39","hashOfConfig":"35"},{"size":1174,"mtime":1615076358091,"results":"40","hashOfConfig":"35"},{"size":10848,"mtime":1615163719277,"results":"41","hashOfConfig":"35"},{"size":1985,"mtime":1614587175076,"results":"42","hashOfConfig":"35"},{"size":10944,"mtime":1615275740235,"results":"43","hashOfConfig":"35"},{"size":8880,"mtime":1615279226856,"results":"44","hashOfConfig":"35"},{"size":1180,"mtime":1613862548255,"results":"45","hashOfConfig":"35"},{"size":3384,"mtime":1615191914421,"results":"46","hashOfConfig":"35"},{"size":4028,"mtime":1613969866578,"results":"47","hashOfConfig":"35"},{"size":4832,"mtime":1614031496247,"results":"48","hashOfConfig":"35"},{"size":7191,"mtime":1615107862085,"results":"49","hashOfConfig":"35"},{"size":5546,"mtime":1614587175093,"results":"50","hashOfConfig":"35"},{"size":10943,"mtime":1615281609935,"results":"51","hashOfConfig":"35"},{"size":12186,"mtime":1615107862088,"results":"52","hashOfConfig":"35"},{"size":2984,"mtime":1615281525396,"results":"53","hashOfConfig":"35"},{"size":763,"mtime":1614036249578,"results":"54","hashOfConfig":"35"},{"size":1280,"mtime":1614587175084,"results":"55","hashOfConfig":"35"},{"size":15245,"mtime":1615282367344,"results":"56","hashOfConfig":"35"},{"size":42082,"mtime":1615192808806,"results":"57","hashOfConfig":"35"},{"size":1352,"mtime":1614587175090,"results":"58","hashOfConfig":"35"},{"size":87,"mtime":1614587175067,"results":"59","hashOfConfig":"35"},{"size":6492,"mtime":1615107862085,"results":"60","hashOfConfig":"35"},{"size":9239,"mtime":1615164954422,"results":"61","hashOfConfig":"35"},{"size":90,"mtime":1614823058317,"results":"62","hashOfConfig":"35"},{"size":2273,"mtime":1615076358089,"results":"63","hashOfConfig":"35"},{"size":458,"mtime":1615097094877,"results":"64","hashOfConfig":"35"},{"size":91,"mtime":1615107862083,"results":"65","hashOfConfig":"35"},{"size":4252,"mtime":1615191914421,"results":"66","hashOfConfig":"35"},{"size":14842,"mtime":1615275740236,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"axtido",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"70"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"70"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"70"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"70"},"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/index.js",[],["151","152"],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/App.js",[],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/reportWebVitals.js",[],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/footer/footer.js",["153","154","155"],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/404_error/404_error.js",["156","157","158"],"import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport '../404_error/404_error.css'\n\n\nexport default function error_page() {\n\treturn (\n\t\t<div className=\"errorContainer\">\n\t\t\t<div className=\"errorMessage\">\n\t\t\t\tOops, the page you are trying to find does not exist!\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/loginSignUp/loginSignUp.js",["159","160","161","162","163"],"import React, { useState } from \"react\"\nimport SignUpForm from \"../../components/signUpForm/signUpForm\"\nimport LoginForm from \"../../components/loginForm/loginForm\"\nimport { Grid } from \"@material-ui/core\"\n\nexport default function LoginSignUp(){\n\n    const [signUp, setSignUp] = useState(true);\n    const [login, setLogin] = useState(true);\n\n    const toggleSignupClicked = () => {\n        setLogin(false);\n    }\n\n    const toggleLoginClicked = () => {\n        setSignUp(false);\n    }\n\n    return (\n        <Grid container>\n            <Grid item xs={2}></Grid>\n            <Grid item xs={8}>\n                {signUp === true ?\n                <div onClick={toggleSignupClicked}> \n                    <SignUpForm/>\n                </div>\n                : null }\n                {login === true ?\n                <div onClick={toggleLoginClicked}>\n                    <LoginForm loginLanding={true} loginForm={false}/>\n                </div>\n                : null }\n            </Grid>\n            <Grid item xs={2}></Grid>\n        </Grid>\n    )\n}","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/signUpForm/signUpForm.js",["164","165","166","167","168","169"],"import React, { useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport { Grid } from '@material-ui/core';\nimport { Typography } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport LoginForm from \"../loginForm/loginForm\"\nimport \"../signUpForm/signUpForm.css\"\nimport axios from \"axios\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n      width: \"97%\",\n      marginTop: \"10vh\"\n    },\n  }));\n\n\nexport default function SignUpForm(props){\n    // Email validation\n    var validator = require('email-validator');\n    function validateEmail(email) {\n        validator.validate(email);\n    }\n\n    // Phone validation\n    const phone = require('fonz.js');\n    var passwordValidator = require('password-validator');\n    var schema = new passwordValidator();\n    schema\n    .is().min(8)                                    // Minimum length 8\n    .is().max(16)                                   // Maximum length 16\n    .has().uppercase()                              // Must have uppercase letters\n    .has().lowercase()                              // Must have lowercase letters\n    .has().digits(2)                                // Must have at least 2 digits\n    .has().not().spaces()                           // Should not have spaces\n    .has().symbols();                                // Must have at least one symbol*/\n\n    const classes = useStyles();\n    const [signupLanding, setSignupLanding] = useState(true);\n    const [role, setRole] = useState(\"\");\n    const [roleLanding, setRoleLanding] = useState(true);\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [birthdate, setBirthdate] = useState(\"\");\n    const [gender, setGender] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [phoneNumber, setPhoneNumber] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [repeatPassword, setRepeatPassword] = useState(\"\");\n    const [loginLanding, setLoginLanding] = useState(false);    \n  \n    const user = {\n      firstName: firstName,\n      lastName: lastName,\n      birthday: birthdate,\n      gender: gender,\n      email: email,\n      phoneNumber: phoneNumber,\n      password: password,\n      role: role\n    }\n\n    const pharmacistUser = {\n      firstName: firstName,\n      lastName: lastName,\n      birthday: birthdate,\n      gender: gender,\n      email: email,\n      phoneNumber: phoneNumber,\n      password: password,\n      role: role\n    }\n\n    const toggleOne = () => {\n      setSignupLanding(false);\n      setRoleLanding(true);\n    }\n\n    const toggleRoleSelect = () => {\n      setRoleLanding(false);\n      setSignupFormPageOne(true);\n    }\n\n    const toggleRoleTwo = () => {\n      setSignupFormPageOne(false);\n      setRoleLanding(true);\n    }\n\n    const toggleTwo = () => {\n      setSignupFormPageOne(false);\n      setSignupFormPageTwo(true);\n    }\n\n    const toggleThree = () => {\n      setSignupFormPageTwo(false);\n      setSuccessPage(true);\n      \n      if (role === \"patient\"){\n      axios.post(`http://localhost:5000/patients/register`, user).then(res=>{\n        console.log(res);\n      })}\n      else if (role === \"pharmacist\"){\n        axios.post(`http://localhost:5000/pharmacists/register`, pharmacistUser).then(res=>{\n        console.log(res);\n      })}\n    }\n\n    const toggleFour = () => {\n      setSignupFormPageTwo(false);\n      setSignupFormPageOne(true);\n    }\n\n    const toggleFive = () => {\n      setSuccessPage(false);\n    }\n\n    const [signupFormPageOne, setSignupFormPageOne] = useState(false);\n    const [signupFormPageTwo, setSignupFormPageTwo] = useState(false);\n    const [successPage, setSuccessPage] = useState(false);\n\n    const handleChange = (event) => {\n        setGender(event.target.value);\n    }\n\n    const handleRoleChange = (event) => {\n      setRole(event.target.value);\n      if(role !== \"\"){\n        setRoleLanding(true);\n      }\n    };\n\n    const handleFirstNameChange = (event) => {\n        setFirstName(event.target.value);\n    }\n\n    const handleLastNameChange = (event) => {\n        setLastName(event.target.value);\n    }\n\n    const handleBirthdateChange = (event) => {\n      setBirthdate(event.taret.value);\n    }\n\n    const handleEmailChange = (event) => {\n        setEmail(event.target.value);\n    }\n\n    const handlePasswordChange = (event) => {\n        setPassword(event.target.value);\n    }\n\n    const handlePhoneNumberChange = (event) => {\n        setPhoneNumber(event.target.value);\n    }\n\n    const handleRepeatChange = (event) => {\n        setRepeatPassword(event.target.value);\n    }\n\n    return(\n      <div className={classes.root}>\n          <Grid container justify=\"center\" spacing={3}>\n              <Grid item xs={1} md={3}></Grid>\n              {roleLanding === true ? \n              <Grid item xs={10} md={6}>\n                <div className=\"formDiv\">\n                  <Typography variant=\"h5\" color=\"primary\" className=\"formTitle\">Select Your Account Type</Typography>\n                  <FormControl className={classes.formControl}>\n                    <InputLabel id=\"demo-simple-select-label\">Role</InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-label\"\n                      id=\"demo-simple-select\"\n                      value={role}\n                      onChange={handleRoleChange}\n                      fullWidth\n                    >\n                      <MenuItem value={\"\"}>None</MenuItem>\n                      <MenuItem value={\"patient\"}>Patient</MenuItem>\n                      <MenuItem value={\"pharmacist\"}>Pharmacist</MenuItem>\n                    </Select>\n                </FormControl>\n                <Button disabled={role === \"\"} variant=\"outlined\" className=\"nextFull\" onClick={toggleRoleSelect}>Next</Button>\n                </div>  \n              </Grid> : null}\n              {signupFormPageOne === true ? \n                <Grid item xs={10} md={6}>\n                  <div className=\"formDiv\">\n                    <Typography variant=\"h5\" color=\"primary\" className=\"formTitle\">Create your account</Typography>\n                    <TextField className=\"formStyling formMargin\" id=\"outlined-basic\" label=\"First Name\" defaultValue={firstName} variant=\"outlined\" onChange={handleFirstNameChange} required />\n                    <TextField className=\"formStyling formMargin\" id=\"outlined-basic\" label=\"Last Name\" defaultValue={lastName} variant=\"outlined\" onChange={handleLastNameChange} required />\n                    <TextField \n                      id=\"date\"\n                      label=\"Birthday\"\n                      type=\"date\"\n                      defaultValue={birthdate}\n                      className=\"formMargin\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                      fullWidth\n                      onChange={handleBirthdateChange}\n                      required />\n                    <FormControl className=\"selectGender formMargin\" required>\n                      <InputLabel id=\"demo-simple-select-label\">Gender</InputLabel>\n                      <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        defaultValue={gender}\n                        onChange={handleChange}\n                      >\n                        <MenuItem value=\"male\">Male</MenuItem>\n                        <MenuItem value=\"female\">Female</MenuItem>\n                        <MenuItem value=\"other\">Other</MenuItem>\n                      </Select>\n                  </FormControl>\n                    <Button variant=\"outlined\" className=\"prev\" onClick={toggleRoleTwo}>Back</Button>\n                    <Button disabled={firstName === \"\" || lastName === \"\" || birthdate === \"\" || gender === \"\"} variant=\"outlined\" className=\"next\" onClick={toggleTwo}>Next</Button>\n                  </div>\n                </Grid>\n              : null}\n              {signupFormPageTwo === true ? \n                <Grid item xs={10} md={6}>\n                  <div className=\"formDiv\">\n                    <Typography variant=\"h5\" color=\"primary\" className=\"formTitle\">Create your account</Typography>\n                    <TextField className=\"formStyling formMargin\" id=\"outlined-basic\" label=\"Email\" variant=\"outlined\" defaultValue={email} onChange = {handleEmailChange} required />\n                    <TextField className=\"formStyling formMargin\" id=\"outlined-basic\" label=\"Phone\" variant=\"outlined\" defaultValue={phoneNumber} onChange = {handlePhoneNumberChange} required />\n                    <TextField className=\"formStyling formMargin\" type=\"password\" id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" onChange = {handlePasswordChange} required />\n                    <TextField className=\"formStyling formMargin\" type=\"password\" id=\"outlined-basic\" label=\"Repeat Password\" variant=\"outlined\" onChange = {handleRepeatChange} required />\n                  </div>\n                  <Button variant=\"outlined\" className=\"prev\" onClick={toggleFour}>Back</Button>\n                  <Button disabled = {\n                        email === \"\" ||\n                        validateEmail(email) === true || \n                        phone.validate(phoneNumber) === false || \n                        schema.validate(password) === false || \n                        password !== repeatPassword } \n                        variant=\"outlined\" className=\"next\" onClick={toggleThree}>Submit</Button>\n                </Grid>\n              : null}\n              {successPage === true ? \n                <Grid item xs={10} md={6}>\n                  <div className=\"formDiv\">\n                    <img src=\"https://picsum.photos/seed/picsum/200/300\" className=\"signupSuccessPhoto\"/>\n                    <Typography variant=\"h5\" align=\"center\" className=\"signupSuccessTypography\">Congratulations!</Typography>\n                    <Typography variant=\"h5\" align=\"center\">Your account is ready</Typography>\n                  </div>\n                <Link to=\"/Login\" className=\"loginLink\" onClick={toggleFive}><Button className=\"nextFull\">Login</Button></Link>\n                </Grid>\n              : null }\n              {loginLanding === true ? \n                <LoginForm loginLanding={false} loginForm={true}/>\n              : null}\n              <Grid item xs={1} md={3}></Grid>                 \n          </Grid>\n      </div>\n    )\n}","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/FAQPage/faq.js",["170","171"],"import React, { useEffect, useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport SearchBar from \"material-ui-search-bar\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Questions from './question'\nimport './faq.css'\nimport axios from 'axios';\n\nexport default function FAQ(){\n    const [questions, setQuestions] = useState([]);\n    const [displayQuestions, setDisplayQuestions] = useState([{}]);\n    const [value, setValue] = useState('');\n\n    useEffect( () => {\n        axios.get('http://localhost:5000/faqs/all').then(res => {\n            let questionList = [];\n            for (const [key, val] of Object.entries(res.data)){\n                questionList.push([val.question, val.answer])\n            }\n            setQuestions(questionList);\n        });\n    }, []);\n\n    function handleSearch(val){\n        if (val === \"\"){\n            return;\n        }\n        setValue(val);\n        let questionList = [];\n        questions.forEach((faq) => {\n            if (faq[0].includes(val) || faq[1].includes(val)) {\n                questionList.push(faq);\n            }\n        })\n        setDisplayQuestions(questionList);\n        console.log(displayQuestions);\n    }\n\n\n    return(\n        <Container>\n            <Typography variant=\"h4\" className=\"title\">How can we help you?</Typography>\n            <SearchBar\n                className=\"searchBar\"\n                value={value}\n                type=\"text\"\n                onChange={(value) => handleSearch(value)}>\n            </SearchBar>\n            <Typography variant=\"h4\" className=\"titleTwo\">Frequently Asked Questions</Typography>\n            <Questions questionList={displayQuestions} />\n            <Typography variant=\"h4\" className=\"information\">\n                Still have questions?<br/>Contact us using online help<br/>Or call 123-456-7890\n            </Typography>\n        </Container>\n    )\n}\n","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/patientSettings/settings.js",["172","173"],"import React, {useState, useContext} from \"react\";\nimport { UserContext } from \"../../UserContext\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { TextField } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\n\nimport {FormControl, \n        FormLabel,\n        Radio, \n        RadioGroup, \n        FormControlLabel} from '@material-ui/core';\nimport './settings.css'\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <Box p={3}>\n            <Typography>{children}</Typography>\n          </Box>\n        )}\n      </div>\n    );\n  }\n  \n  TabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n  };\n  \n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n  \n  const useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n      backgroundColor: theme.palette.background.paper,\n      height: '100vh'\n    },\n  }));\n\nexport default function PatientSettings(){\n\n    const {user, setUser} = useContext(UserContext);\n\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n    const [phone, setPhone] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [currentPass, setCurrentPass] = useState(\"\");\n    const [newPass, setNewPass] = useState(\"\");\n    const [repeatPass, setRepeatPass] = useState(\"\");\n\n    const [notifyPhone, setNotifyPhone] = useState(\"Yes\");\n    const [notifyEmail, setNotifyEmail] = useState(\"Yes\");\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    }\n\n    const handleNotifyPhone = (event, newValue) => {\n        setNotifyPhone(newValue);\n    };\n\n    const handleNotifyEmail = (event, newValue) => {\n        setNotifyEmail(newValue);\n    };\n\n    const handleCurrentPass = (event, newValue) => {\n        setCurrentPass(newValue);\n    }\n\n    const handleNewPass = (event, newValue) => {\n        setNewPass(newValue);\n    }\n\n    const handleRepeatPass = (event, newValue) => {\n        setRepeatPass(newValue);\n    }\n\n    const handleNewPhone = (event, newValue) => {\n        setPhone(newValue);\n    }\n\n    const handleNewEmail = (event, newValue) => {\n        setEmail(newValue);\n    }\n\n    function updatePatientSettings() {\n        alert('you saved your phone number')\n    }\n    \n    return (\n        <Grid container>\n            <Grid item xs={1}></Grid>\n            <Grid item xs={10}>\n            <div className={classes.root}>\n                <Typography variant=\"h3\" align=\"center\" className=\"pageLabel\">Settings</Typography>\n                <div className=\"blueOutline\">\n                <AppBar position=\"static\" className=\"appBar\">\n                    <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\" className=\"tabAlign\">\n                    <Tab label=\"Security\" {...a11yProps(0)} className=\"tabs\"/>\n                    <Tab label=\"Notifications\" {...a11yProps(1)} className=\"tabs\"/>\n                    </Tabs>\n                </AppBar>\n                <TabPanel value={value} index={0} >\n                    <div className=\"panelStyling\">\n                        <TextField \n                            type=\"password\"\n                            id=\"password\"\n                            label=\"Enter current password\"\n                            defaultValue={currentPass}\n                            variant=\"outlined\"\n                            className=\"securityStyling\"\n                            onChange={handleCurrentPass}\n                            fullWidth\n                            required>\n                        </TextField>\n                        <TextField \n                            type=\"password\"\n                            id=\"password\"\n                            label=\"Enter new password\"\n                            defaultValue={newPass}\n                            variant=\"outlined\"\n                            className=\"securityStyling\"\n                            onChange={handleNewPass}                            \n                            fullWidth\n                            required>\n                        </TextField>\n                        <TextField \n                            type=\"password\"\n                            id=\"password\"\n                            label=\"Confirm new password\"\n                            defaultValue={repeatPass}\n                            variant=\"outlined\"\n                            className=\"securityStyling\"\n                            onChange={handleRepeatPass}\n                            fullWidth\n                            required>\n                        </TextField>\n                        <div className=\"saveButtonContainer\"><Button variant=\"outlined\" className=\"saveButton\" onClick={updatePatientSettings}>Save</Button></div>\n                    </div>\n                </TabPanel>\n                <TabPanel value={value} index={1}>\n                    <div className=\"panelStyling\">\n                        <div className=\"phoneNumberContainer\">\n                            <Typography variant=\"h5\" align=\"center\" className=\"phoneHeading\">Phone Number</Typography>\n                            <div className=\"settingsForm\">\n                                <div className=\"formHalf\">\n                                    <FormControl component=\"fieldset\" className=\"formControl\">\n                                        <FormLabel component=\"legend\">Notify Me?</FormLabel>\n                                        <RadioGroup row ria-label=\"phone notification\" name=\"phone notification\" className=\"formLabelShift\" value={notifyPhone} onChange={handleNotifyPhone}>\n                                            <FormControlLabel value=\"Yes\" control={<Radio />} label=\"Yes\" />\n                                            <FormControlLabel value=\"No\" control={<Radio />} label=\"No\" />\n                                        </RadioGroup>\n                                    </FormControl>\n                                </div>\n                                <div className=\"formHalf\">\n                                    <FormControl component=\"fieldset\" className=\"formControl\">\n                                        <FormLabel component=\"legend\" className=\"formLabel\">Set a new phone?</FormLabel>\n                                        <TextField \n                                            id=\"outlined-basic\"\n                                            label={user.phoneNumber}\n                                            defaultValue={phone}\n                                            onChange={handleNewPhone}\n                                            variant=\"outlined\"\n                                            className=\"formLabelShift\"\n                                            fullWidth>\n                                        </TextField>\n                                    </FormControl>                                \n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"emailContainer\">\n                            <Typography variant=\"h5\" align=\"center\" className=\"emailHeading\">Email</Typography>\n                            <div className=\"settingsForm\">\n                                <div className=\"formHalf\">\n                                    <FormControl component=\"fieldset\" className=\"formControl\">\n                                        <FormLabel component=\"legend\">Notify Me?</FormLabel>\n                                        <RadioGroup row ria-label=\"email notification\" name=\"email notification\" className=\"formLabelShift\" value={notifyEmail} onChange={handleNotifyEmail}>\n                                            <FormControlLabel value=\"Yes\" control={<Radio />} label=\"Yes\" />\n                                            <FormControlLabel value=\"No\" control={<Radio />} label=\"No\" />\n                                        </RadioGroup>\n                                    </FormControl>\n                                </div>\n                                <div className=\"formHalf\">\n                                    <FormControl component=\"fieldset\" className=\"formControl\">\n                                        <FormLabel component=\"legend\" className=\"formLabel\">Set a new email?</FormLabel>\n                                        <TextField \n                                            id=\"outlined-basic\"\n                                            label={user.email}\n                                            defaultValue={email}\n                                            onChange={handleNewEmail}\n                                            variant=\"outlined\"\n                                            className=\"formLabelShift\">\n                                        </TextField>\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"saveButtonContainer\"><Button variant=\"outlined\" className=\"saveButton\" onClick={updatePatientSettings}>Save</Button></div>\n                    </div>\n                </TabPanel>\n            </div>\n            </div>\n            </Grid>\n            <Grid item xs={1}></Grid>\n      </Grid>\n    )\n}","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/homePage/patient/patientHome.js",["174","175","176","177","178","179","180"],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/FAQPage/question.js",[],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/loginForm/loginForm.js",["181","182","183","184","185","186","187","188","189","190","191","192","193"],"import React, { useState, useContext } from \"react\";\nimport { UserContext } from \"../../UserContext\";\nimport { Button } from '@material-ui/core';\nimport { Typography } from \"@material-ui/core\";\nimport { Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { Grid } from \"@material-ui/core\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport \"../signUpForm/signUpForm.css\"\nimport axios from \"axios\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    width: \"100%\",\n    marginTop: \"3%\"\n  },\n}));\n\nexport default function LoginForm(props){\n    const classes = useStyles();\n\n    // Handles login to initialize the userContext \n    const { user, setUser } = useContext(UserContext);\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [role, setRole] = useState(\"patient\");\n\n    const loginInfo = {\n      email: email,\n      password: password\n    }\n\n    const [loginLanding, setLoginLanding] = useState(props.loginLanding);\n    const toggleOne = () => {\n        setLoginLanding(false);\n        setLoginForm(true);\n    }\n\n    const handleEmailChange = (event) => {\n      setEmail(event.target.value)\n    }\n\n    const handlePasswordChange = (event) => {\n      setPassword(event.target.value)\n    }\n\n    const handleRoleChange = (event) => {\n      setRole(event.target.value);\n    }\n\n    const [loginForm, setLoginForm] = useState(props.loginForm);\n    //add toast\n    const toggleTwo = () => {\n      switch (role){\n        case \"patient\":\n          console.log(\"patient route\")\n          axios.post('http://localhost:5000/patients/login', loginInfo).then(res => {\n            setUser(res.data);\n          }).catch(err =>{\n            console.log(err);\n          })\n          break;\n        case \"pharmacist\":\n          console.log(\"pharm route\")\n          axios.post('http://localhost:5000/pharmacists/login', loginInfo).then(res => {\n            setUser(res.data);\n            }).catch(err =>{\n            console.log(err);\n          })\n          break;\n      }\n    }\n  \n\n    return(\n        <div className={classes.root} >\n          <Grid container justify=\"center\" spacing={3}>\n            <Grid item xs={1} md={3}></Grid>\n            <Grid item xs={10} md={6}>\n            <div className=\"formDiv\">\n              <img src=\"https://picsum.photos/seed/picsum/200/300\" className=\"signupSuccessPhoto\"/>\n              <TextField className=\"formStyling formMargin\" label=\"Email\" variant=\"outlined\" onChange = {handleEmailChange} required />\n              <TextField className=\"formStyling formMargin\" type = 'password' label=\"Password\" variant=\"outlined\" onChange = {handlePasswordChange} required />\n              <Button variant=\"outlined\" color=\"primary\" className=\"nextFullPassword\">Forgot Password?</Button>\n              <Button disabled={email === \"\" || password === \"\" || role === \"\"} variant=\"contained\" color=\"primary\" className=\"nextFull nextFullLogin\" onClick={toggleTwo}>Login</Button>\n            </div>\n          </Grid>\n              <Grid item xs={1} md={3}></Grid>                 \n          </Grid>\n        </div>\n    )\n}","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/nav/nav.js",["194","195","196","197"],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/settings/settings.js",["198","199","200"],"import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport EditIcon from '@material-ui/icons/Edit';\nimport '../settings/settings.css'\n\nfunction switchNotificationPatient () {\n\tconsole.log('hello');\n\tdocument.getElementById('securityContainer-patient').style.display = 'none';\n\tdocument.getElementById('notificationsContainer').style.display = 'flex';\n}\n\nfunction switchSecurityPatient () {\n\tconsole.log('hello');\n\tdocument.getElementById('securityContainer-patient').style.display = 'flex';\n\tdocument.getElementById('notificationsContainer').style.display = 'none';\n}\n\nexport default function settings() {\n\treturn (\n    <div className = 'settingsContainer-patient'>\n      <div className = 'settingsTitle-patient'>\n        Settings\n      </div>\n\n      <div id = 'securityContainer-patient'>\n        <div className = 'titleBar-patient'>\n          <div className = 'securityTitle-patient'onClick = {switchSecurityPatient}>\n            Security\n          </div>\n          <div className = 'notificationTitle-patient' onClick = {switchNotificationPatient} >\n            Notification\n          </div>\n        </div>\n\n        <div className = 'passwordContainer'>\n          <div className = 'password' id = 'currentPW'>\n            Current Password: *****\n          </div>\n          <div className = 'password' id = 'newPW'>\n            New Password: *****\n          </div>\n          <div className = 'password' id = 'retypePW'>\n            Retype New Password: *****\n          </div>\n\n\t\t\t\t\t<div className = 'break'></div>\n\n          <div className = 'saveButton'>\n            Save\n          </div>\n        </div>\n      </div>\n\n\t\t\t<div id = 'notificationsContainer'>\n\t\t\t\t\t\t<div className = 'titleBar-patient'>\n\t\t          <div className = 'securityTitle-patient'onClick = {switchSecurityPatient}>\n\t\t            Security\n\t\t          </div>\n\t\t          <div className = 'notificationTitle-patient' onClick = {switchNotificationPatient} >\n\t\t            Notification\n\t\t          </div>\n\t\t        </div>\n\n\t\t\t\t\t\t<div className = 'folderBorder-patient'>\n\t\t\t\t\t\t\t<div className = 'whiteBorder-patient'>\n\t\t\t          <div className = 'notificationSection'>\n\t\t\t              <div className = 'insideTitle-patient'>\n\t\t\t                Phone Number\n\t\t\t              </div>\n\t\t\t              <div className = 'notifyMe'>\n\t\t\t                Notify Me?\n\t\t\t              </div>\n\t\t\t\t\t\t\t\t\t\t<div className = 'yesContainer'>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'yes'>\n\t\t\t\t\t\t\t\t\t\t\tYes\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'yesBox'> </div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className = 'noContainer'>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'no'>\n\t\t\t\t\t\t\t\t\t\t\tNo\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t              \t<div className = 'noBox'> </div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className = 'infoContainer-patient'>\n\t\t\t\t              <div className = 'infoBox-patient'>\n\t\t\t\t                Call me at:\n\t\t\t\t              </div>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'phone-patient_email_Container-patient'>\n\t\t\t\t\t              <div className = 'phone-patient'>\n\t\t\t\t\t                (408)123-4567\n\t\t\t\t\t              </div>\n\t\t\t\t\t              <div className = 'editContainer-patient'>\n\t\t\t\t\t                <EditIcon/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className = 'edit-patient'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t              </div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t          </div>\n\t\t\t\t\t\t\t\t<div className = 'notificationSection'>\n\t\t\t              <div className = 'insideTitle-patient'>\n\t\t\t                Email\n\t\t\t              </div>\n\t\t\t              <div className = 'notifyMe'>\n\t\t\t                Notify Me?\n\t\t\t              </div>\n\t\t\t\t\t\t\t\t\t\t<div className = 'yesContainer'>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'yes'>\n\t\t\t\t\t\t\t\t\t\t\tYes\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'yesBox'> </div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className = 'noContainer'>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'no'>\n\t\t\t\t\t\t\t\t\t\t\tNo\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t              \t<div className = 'noBox'> </div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className = 'infoContainer-patient'>\n\t\t\t\t              <div className = 'infoBox-patient'>\n\t\t\t\t                Email me at:\n\t\t\t\t              </div>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'phone-patient_email_Container-patient'>\n\t\t\t\t\t              <div className = 'email-patient'>\n\t\t\t\t\t                innovationlab@email.com\n\t\t\t\t\t              </div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className = 'editContainer-patient'>\n\t\t\t\t\t                <EditIcon/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className = 'edit-patient'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t              </div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t          </div>\n\n\t\t\t\t\t\t\t\t<div className = 'break'></div>\n\n\t\t\t\t\t\t\t\t<div className = 'saveButton'>\n\t\t\t            Save\n\t\t\t          </div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n      </div>\n    </div>\n\t);\n}\n",["201","202"],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/patientNav/patientNav.js",["203","204","205"],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/pharmContact/pharmContact.js",[],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/patientSchedule/patientSchedule.js",["206","207","208","209","210","211","212"],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/TutorialPage/tutorial.js",["213","214","215","216","217","218","219","220","221"],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/scheduleEvent/scheduleEvent.js",["222","223","224","225","226","227","228","229","230"],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/notifications/notifications.js",["231"],"import React from \"react\";\nimport './notifications.css';\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\n\nexport default function Notification(props){\n    return(\n        <Card variant=\"outlined\" className=\"cardContainer\">\n            <CardContent className=\"cardContents\">\n                <div className=\"leftCard\">\n                    <Typography variant=\"h6\" color=\"secondary\" align=\"left\">{props.title}</Typography>\n                    <Typography variant=\"subtitle2\" align=\"left\">{props.description}</Typography>\n                </div>\n            </CardContent>\n        </Card>\n    )\n}\n","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/patientProfile/profile.js",["232","233","234"],"import React, {useState, useEffect} from \"react\";\nimport \"./profile.css\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default function PatientProfile(){\n    return(\n        <Grid container className=\"profileContainer\">\n            <Grid item xs={2}></Grid>\n            <Grid item xs={8} justify=\"center\">\n                <div className=\"patientProfileInfo\">\n                    <Typography align=\"center\" variant=\"h3\" className=\"patientName\">Jasmine Miller</Typography>\n                    <Typography align=\"center\" variant=\"h4\">Pharmacy: </Typography>\n                    <Typography align=\"center\" variant=\"h4\">Phone Number: </Typography>\n                </div>\n                <div className=\"infusionSummaryContainer\">\n                    <Typography align=\"center\" variant=\"h4\">Summary of Infusion</Typography>\n                    <div className=\"infusionSummary\">\n                        Notes from pharmacist here\n                    </div>\n                </div>\n            </Grid>\n            <Grid item xs={2}></Grid>\n        </Grid>\n    )\n}","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/pharmTutorialList/pharmTutorialList.js",["235","236","237","238","239","240","241","242","243","244","245","246"],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/pharmAssignPage/pharmAssign.js",["247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262"],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/patientTutorials/tutorial.js",["263","264","265","266","267","268","269"],"import React,{useState, useEffect} from \"react\";\nimport {Grid, Typography} from \"@material-ui/core\";\nimport \"./tutorial.css\";\nimport Tutorial from \"../TutorialPage/tutorial\";\nimport axios from 'axios';\n\nexport default function PatientTutorials(){\n\n    const [tutorials, setTutorials] = useState([]);\n    const [tutorialsClicked, setTutorialsClicked] = useState([]);\n    const [tutorialsLoaded, setTutorialsLoaded] = useState(false);\n\n    useEffect(() => {\n        let tutorialsArr = [];\n        let tutorialsBoolArr = [];\n        axios.get('http://localhost:5000/tutorials/all').then(res=>{\n            tutorialsArr = res.data;\n            setTutorials(tutorialsArr);\n            for (let i = 0; i < tutorialsArr.length; i++){\n                tutorialsBoolArr.push(true);\n            }\n            setTutorialsClicked(tutorialsBoolArr);\n            setTutorialsLoaded(true);\n        })\n    },[])\n\n    const handleTutorialClicked = (index) => {\n        let clickedArr = [];\n        for (let i = 0; i < tutorials.length; i++){\n            if (i !== index){\n                clickedArr.push(false);\n            }\n        }\n        setTutorialsClicked(clickedArr);\n    }\n    \n    return (\n        <Grid>\n            {tutorials.map((item, index) => {\n                return <Tutorial num={index}/>    \n            })}\n        </Grid>\n    )\n}",["270","271"],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/UserContext.js",[],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/navPharmResponsive/navPharmResponsive.js",["272","273","274","275"],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/homePage/pharmacist/pharmacistHome.js",["276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294"],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/PatientContext.js",[],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/authNav/authNav.js",["295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314"],"import React, {useState, useContext} from 'react';\nimport { UserContext } from \"../../UserContext\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CloseIcon from '@material-ui/icons/Close';\nimport logo from \"../../innovation.png\";\nimport \"../patientNav/patientNav.css\"\nimport axios from 'axios';\nimport {\n    BrowserRouter as Router,\n    Route,\n    Link\n  } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    title:{\n        flexGrow: 1,\n    }\n}));\n\nexport default function PatientNav(){\n    const classes = useStyles();\n    \n    const [profileAnchor, setProfileAnchor] = React.useState(null);\n    const [hamburgerAnchor, setHamburgerAnchor] = React.useState(null);\n    const openProfile = Boolean(profileAnchor);\n    const openHamburger = Boolean(hamburgerAnchor);\n    const [hbIcon, setHbIcon] = React.useState(true);\n    const [closeIcon, setCloseIcon]= React.useState(false);\n\n    const handleProfile = (event) => {\n        setProfileAnchor(event.currentTarget);\n    };\n\n    const handleCloseProfile = () => {\n        setProfileAnchor(null);\n    };\n\n    const handleHamburger = (event) => {\n        setHamburgerAnchor(event.currentTarget);\n        setHbIcon(false);\n        setCloseIcon(true);\n    };\n\n    const handleHamburgerClose = () => {\n        setHamburgerAnchor(null);\n        setHbIcon(true);\n        setCloseIcon(false);\n    }\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar className=\"navStyling\">\n                    <Link to=\"/loginSignup\"><IconButton edge=\"start\" id=\"logoIcon\" color=\"#00529b\" aria-label=\"menu\">\n                        <img src={logo} alt=\"Logo\" className=\"siteIcon\"/>\n                    </IconButton></Link>\n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n}","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/pharmFooter/footer.js",["315","316","317"],"import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport '../footer/footer.css';\n\n\nexport default function footerBar() {\n\treturn (\n\t\t<div className=\"footerContainer\">\n\t\t\t<div className=\"liveHelpBar\">\n\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t<a className=\"footerLink\">Patient Messages</a>\n\t\t\t\t</Typography>\n\t\t\t</div>\n\t\t</div>\n\t);\n}","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/TutorialContext.js",[],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/TutorialList/tutorialList.js",["318","319","320","321","322","323","324"],"import React, {useState, useEffect, useContext} from \"react\";\nimport './tutorialList.css';\nimport {UserContext} from \"../../UserContext\";\nimport {TutorialContext} from \"../../TutorialContext\";\nimport {Grid, Card, CardMedia, CardContent, Typography} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport ArrowForwardIos from \"@material-ui/icons/ArrowForwardIos\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport {\n    BrowserRouter as Router,\n    Route,\n    Link\n  } from \"react-router-dom\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n  });\n\nexport default function TutorialList(){\n    const {user, setUser} = useContext(UserContext);\n    const {tutorial, setTutorial} = useContext(TutorialContext);\n    const [tutorialSelect, setTutorialSelect] = useState(null);\n    const [openTutorialPrompt, setTutorialPrompt] = useState(false);\n\n    const handleTutorialPrompt = (event) => {\n        user.infusionArray.map(tutorial => {\n            if (tutorial._id === event.target.id){\n                setTutorialSelect(tutorial.name);\n                setTutorial(tutorial);\n            }\n        })\n        setTutorialPrompt(!openTutorialPrompt);\n    }\n\n    return(\n        <Grid className=\"tutorialListContainer\">\n            <Grid container>\n                <Grid xs={1} item></Grid>\n                <Grid xs={10} item>\n                    {user.infusionArray.length === 0 ? <Typography variant=\"h4\" color=\"primary\" align=\"center\" className=\"defaultMsg\">Your pharmacist has not assigned any tutorials for you yet. <br/>Please check back soon.</Typography>\n                    : user.infusionArray.map((infusion) => {\n                        return <Card className=\"cardRoot\" >\n                        <img src={infusion.tutorials[0].video.thumbnail} className=\"cover\"></img>\n                        <div className=\"cardDetails\">\n                            <CardContent>\n                                <Typography variant=\"h5\">\n                                    {infusion.name}\n                                </Typography>\n                                <Typography variant=\"subtitle1\" className=\"content\">\n                                    {infusion.description}\n                                </Typography>\n                                <Typography variant=\"subtitle1\">\n                                    Duration: {infusion.duration} \n                                </Typography>\n                            </CardContent>\n                        </div>\n                        <ArrowForwardIos id={infusion._id} onClick={handleTutorialPrompt} className=\"arrowButton\"/>\n                    </Card>\n                    })}\n                </Grid> \n                <Grid xs={1} item></Grid>\n            </Grid>\n            <Dialog\n                open={openTutorialPrompt}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={handleTutorialPrompt}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle>Tutorial Select</DialogTitle>\n                <DialogContent>\n                <DialogContentText>\n                    <Typography>Go to {tutorialSelect} Tutorial? </Typography>\n                </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                <Button onClick={handleTutorialPrompt} color=\"primary\">\n                    Close\n                </Button>\n                <Link to=\"/tutorialPage\"><Button variant=\"contained\" color=\"primary\">\n                    View\n                </Button></Link> \n                </DialogActions>\n            </Dialog>\n           \n        </Grid>\n    )\n}\n/*\n    <Link to=\"/tutorialPage\" onClick={handleTutorialId(infusion)} className=\"arrowButton\"></Link>\n*/\n","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/pharmSettings/settings.js",["325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341"],"import React, {useState, useContext, useEffect} from \"react\";\nimport { UserContext } from \"../../UserContext\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { TextField } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport ContactImage from '../pharmContact/pharmContact_image2.png';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport axios from 'axios';\nimport {FormControl, \n        FormLabel,\n        Radio, \n        RadioGroup, \n        FormControlLabel} from '@material-ui/core';\nimport CreateIcon from '@material-ui/icons/Create';\nimport './settings.css'\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <Box p={3}>\n            <Typography>{children}</Typography>\n          </Box>\n        )}\n      </div>\n    );\n  }\n  \n  TabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n  };\n  \n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n  \n  const useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n      backgroundColor: theme.palette.background.paper,\n      height: '100vh'\n    },\n    pageTitle:{\n        textAlign: 'center',\n        margin: '20px'\n    },\n    cardHeader: {\n        backgroundColor: '#00529B',\n        color: '#FFFFFF'\n        \n    },\n    image:{\n        width: '100%',\n        display: 'block',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        marginTop: '20px',\n        marginBottom: '20px'\n\n    },\n    innerBox:{\n        margin: '10px',\n        border: '1px',\n        borderColor: '#00529B',\n        borderStyle: 'solid',\n        borderRadius: '20px'\n    }\n  }));\n  const Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n  });\n\nexport default function PatientSettings(){\n\n    const {user, setUser} = useContext(UserContext);\n\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n    const [phone, setPhone] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [currentPass, setCurrentPass] = useState(\"\");\n    const [newPass, setNewPass] = useState(\"\");\n    const [repeatPass, setRepeatPass] = useState(\"\");\n    const [notifyPhone, setNotifyPhone] = useState(\"Yes\");\n    const [notifyEmail, setNotifyEmail] = useState(\"Yes\");\n    const [pharmName, setPharmName] = useState(\"\");\n    const [pharmAddress, setPharmAddress] = useState({});\n    const [pharmPhone, setPharmPhone] = useState(\"\");\n    const [pharmEmail, setPharmEmail] = useState(\"\");\n    const [pharmId, setPharmId] = useState(\"\");\n    const [openPharmacyForm, setOpenPharmacyForm] = useState(false);\n    \n    useEffect( () => {\n        axios.get('http://localhost:5000/pharmacy/all').then(res => {\n            console.log(res.data[0]._id);\n            let address = {'streetName': \"\", 'city': \"\", 'state': \"\", 'zipCode': \"\"};\n            let phone = \"\";\n            let email = \"\";\n            let name = \"\";\n            for (const [key, val] of Object.entries(res.data[0])){\n                if (key === 'streetName' || key === 'city' || key === 'state' || key === 'zipCode'){\n                    address[key] = val;\n                }\n                else if (key === 'phone'){\n                    phone = val;\n                }\n                else if (key === 'email'){\n                    email = val;\n                }\n                else if (key === 'name'){\n                    name = val;\n                }\n            }\n            setPharmName(name);\n            setPharmAddress(address);\n            setPharmEmail(email);\n            setPharmPhone(phone);\n            setPharmId(res.data[0]._id);\n        });\n    },[])   \n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    }\n    const handleCurrentPass = (event, newValue) => {\n        setCurrentPass(newValue);\n    }\n    const handleNewPass = (event) => {\n        setNewPass(event.target.value);\n    }\n    const handleRepeatPass = (event, newValue) => {\n        setRepeatPass(newValue);\n    }\n\n    const handleNewPhone = (event) => {\n        setPharmPhone(event.target.value);\n    }\n    const handleNewEmail = (event) => {\n        setPharmEmail(event.target.value);\n    }\n    const handleNewName = (event) => {\n        setPharmName(event.target.value);\n    }\n    const handlePharmacyForm = (event) => {\n        setOpenPharmacyForm(!openPharmacyForm);\n    }\n    const handleUpdateAddress = (event) => {\n        let address = pharmAddress;\n        switch (event.target.id){\n            case \"pharmStreet\":\n                address.streetName = event.target.value;\n                break;\n            case \"pharmCity\":\n                address.city = event.target.value;\n                break;\n            case \"pharmState\":\n                address.state = event.target.value;\n                break;\n            case \"pharmZipcode\":\n                address.zipCode = event.target.value;\n                break;\n        }\n        setPharmAddress(address);\n    }\n    const handleUpdatePharmacy = () => {\n        const value = {\n            name: pharmName,\n            streetName: pharmAddress.streetName,\n            city: pharmAddress.city,\n            state: pharmAddress.state,\n            zipCode: pharmAddress.zipCode,\n            phone: pharmPhone,\n            email: pharmEmail\n        }\n        axios.post(`http://localhost:5000/pharmacy/updateInfo/${pharmId}`, value).then(res =>{ \n        })\n        setOpenPharmacyForm(!openPharmacyForm);\n    } \n    \n    return (\n        <Grid container>\n            <Grid item xs={1}></Grid>\n            <Grid item xs={10}>\n            <div className={classes.root}>\n                <Typography variant=\"h3\" align=\"center\" className=\"pageLabel\">Settings</Typography>\n                <div className=\"blueOutline\">\n                <AppBar position=\"static\" className=\"appBar\">\n                    <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\" className=\"tabAlign\">\n                    <Tab label=\"Security\" {...a11yProps(0)} className=\"tabs\"/>\n                    <Tab label=\"About Us\" {...a11yProps(1)} className=\"tabs\"/>\n                    </Tabs>\n                </AppBar>\n                <TabPanel value={value} index={0} >\n                    <div className=\"panelStyling\">\n                        <TextField \n                            type=\"password\"\n                            id=\"password\"\n                            label=\"Enter current password\"\n                            defaultValue={currentPass}\n                            variant=\"outlined\"\n                            className=\"securityStyling\"\n                            onChange={handleCurrentPass}\n                            fullWidth\n                            required>\n                        </TextField>\n                        <TextField \n                            type=\"password\"\n                            id=\"password\"\n                            label=\"Enter new password\"\n                            defaultValue={newPass}\n                            variant=\"outlined\"\n                            className=\"securityStyling\"\n                            onChange={handleNewPass}                            \n                            fullWidth\n                            required>\n                        </TextField>\n                        <TextField \n                            type=\"password\"\n                            id=\"password\"\n                            label=\"Confirm new password\"\n                            defaultValue={repeatPass}\n                            variant=\"outlined\"\n                            className=\"securityStyling\"\n                            onChange={handleRepeatPass}\n                            fullWidth\n                            required>\n                        </TextField>\n                        <div className=\"saveButtonContainer\"><Button variant=\"outlined\" className=\"saveButton\">Save</Button></div>\n                    </div>\n                </TabPanel>\n                <TabPanel value={value} index={1}>\n                <Container className={classes.cardRoot}>\n                    {/* top half */}\n                    <Grid container>\n                        <Grid item xl={2} lg={2} xs={2}></Grid>\n                        \n                        <Grid item xs={12} md={8}>                            \n                            <img\n                                src={ContactImage}\n                                alt=\"Single tree with clouds in the background\"\n                                className={classes.image} />\n                        </Grid>\n                        <Grid item xl={2} lg={2} xs={2}></Grid>\n                    </Grid>\n                    {/* bottom half */}\n                    <Grid container spacing={2}>\n                        <Grid item xs={2}></Grid>\n                        <Grid item xs={12} md={4}>\n                                <Card borderRadius={30}>\n                                    <CardHeader\n                                        className={classes.cardHeader}\n                                        title=\"Pharmacy\"\n                                        align='center'\n                                    />\n                                    <CardContent>\n                                        <Box className={classes.innerBox}>\n                                            <Typography align='center' >Name: </Typography>\n                                            <Typography align='center' >{pharmName}</Typography>\n                                        </Box>\n                                        <Box className={classes.innerBox}>\n                                            <Typography align='center' >Address:</Typography>\n                                            <Typography align='center' >{`${pharmAddress.streetName},\\n${pharmAddress.city}, ${pharmAddress.state} ${pharmAddress.zipCode}`}</Typography>\n                                        </Box>\n                                    </CardContent>\n                                </Card>\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                                <Card>\n                                    <CardHeader\n                                        className={classes.cardHeader}\n                                        title=\"Contact Information\"\n                                        align='center'\n                                    />\n                                    <CardContent>\n                                        <Box className={classes.innerBox}>\n                                            <Typography align='center' >Phone Number:</Typography> \n                                            <Typography align='center' >{pharmPhone}</Typography>\n                                        </Box>\n                                        <Box className={classes.innerBox}>\n                                            <Typography align='center' >Email:</Typography>\n                                            <Typography align='center' >{pharmEmail}</Typography>\n                                        </Box>\n                                    </CardContent>\n                                </Card>\n                        </Grid>\n                        <Grid item xs={2} sm={4} md={2} lg={2} xl={2}></Grid>\n                    </Grid>\n                    <Grid container spacing={1}>\n                            <Grid item xs={12} align=\"center\">\n                                <Button variant=\"outlined\" className=\"updatePharmBtn\" color=\"primary\" onClick={handlePharmacyForm}>Update Pharmacy Info</Button>\n                            </Grid>\n                        </Grid>\n                </Container>\n                </TabPanel>\n            </div>\n            </div>\n            </Grid>\n            <Grid item xs={1}></Grid>\n            <Dialog\n                open={openPharmacyForm}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={handlePharmacyForm}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\">\n                <DialogTitle>Pharmacy Info Form</DialogTitle>\n                <DialogContent>\n                <DialogContentText>\n                    <TextField label=\"Pharmacy Name\" variant=\"outlined\" onChange={handleNewName} fullWidth required />\n                    <TextField label=\"Street Name\" onChange={handleUpdateAddress} id=\"pharmStreet\" variant=\"outlined\" fullWidth required />\n                    <TextField label=\"City\" onChange={handleUpdateAddress} id=\"pharmCity\" variant=\"outlined\" fullWidth required />\n                    <TextField label=\"State\" onChange={handleUpdateAddress} id=\"pharmState\" variant=\"outlined\" fullWidth required />\n                    <TextField label=\"Zip Code\" onChange={handleUpdateAddress} id=\"pharmZipcode\" variant=\"outlined\" fullWidth required />\n                    <TextField label=\"Phone Number\" onChange={handleNewPhone} variant=\"outlined\" fullWidth required />\n                    <TextField label=\"Email\" onChange={handleNewEmail} variant=\"outlined\" fullWidth required />\n                </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                <Button onClick={handlePharmacyForm} color=\"primary\">\n                    Close\n                </Button>\n                <Button onClick={handleUpdatePharmacy} variant=\"contained\" color=\"primary\">\n                    Update\n                </Button>\n                </DialogActions>\n            </Dialog>\n      </Grid>\n    )\n}",{"ruleId":"342","replacedBy":"343"},{"ruleId":"344","replacedBy":"345"},{"ruleId":"346","severity":1,"message":"347","line":3,"column":8,"nodeType":"348","messageId":"349","endLine":3,"endColumn":18},{"ruleId":"346","severity":1,"message":"350","line":4,"column":8,"nodeType":"348","messageId":"349","endLine":4,"endColumn":16},{"ruleId":"351","severity":1,"message":"352","line":13,"column":5,"nodeType":"353","endLine":13,"endColumn":40},{"ruleId":"346","severity":1,"message":"354","line":2,"column":8,"nodeType":"348","messageId":"349","endLine":2,"endColumn":18},{"ruleId":"346","severity":1,"message":"347","line":3,"column":8,"nodeType":"348","messageId":"349","endLine":3,"endColumn":18},{"ruleId":"346","severity":1,"message":"350","line":4,"column":8,"nodeType":"348","messageId":"349","endLine":4,"endColumn":16},{"ruleId":"346","severity":1,"message":"355","line":2,"column":8,"nodeType":"348","messageId":"349","endLine":2,"endColumn":18},{"ruleId":"346","severity":1,"message":"356","line":3,"column":8,"nodeType":"348","messageId":"349","endLine":3,"endColumn":17},{"ruleId":"346","severity":1,"message":"354","line":4,"column":8,"nodeType":"348","messageId":"349","endLine":4,"endColumn":18},{"ruleId":"346","severity":1,"message":"357","line":6,"column":22,"nodeType":"348","messageId":"349","endLine":6,"endColumn":28},{"ruleId":"346","severity":1,"message":"358","line":7,"column":5,"nodeType":"348","messageId":"349","endLine":7,"endColumn":10},{"ruleId":"346","severity":1,"message":"357","line":12,"column":20,"nodeType":"348","messageId":"349","endLine":12,"endColumn":26},{"ruleId":"346","severity":1,"message":"358","line":13,"column":3,"nodeType":"348","messageId":"349","endLine":13,"endColumn":8},{"ruleId":"346","severity":1,"message":"359","line":55,"column":12,"nodeType":"348","messageId":"349","endLine":55,"endColumn":25},{"ruleId":"346","severity":1,"message":"360","line":66,"column":26,"nodeType":"348","messageId":"349","endLine":66,"endColumn":41},{"ruleId":"346","severity":1,"message":"361","line":90,"column":11,"nodeType":"348","messageId":"349","endLine":90,"endColumn":20},{"ruleId":"362","severity":1,"message":"363","line":259,"column":21,"nodeType":"353","endLine":259,"endColumn":106},{"ruleId":"346","severity":1,"message":"364","line":4,"column":10,"nodeType":"348","messageId":"349","endLine":4,"endColumn":20},{"ruleId":"346","severity":1,"message":"365","line":18,"column":25,"nodeType":"348","messageId":"349","endLine":18,"endColumn":28},{"ruleId":"346","severity":1,"message":"366","line":64,"column":18,"nodeType":"348","messageId":"349","endLine":64,"endColumn":25},{"ruleId":"367","severity":1,"message":"368","line":152,"column":7,"nodeType":"369","endLine":152,"endColumn":9,"suggestions":"370"},{"ruleId":"346","severity":1,"message":"357","line":20,"column":22,"nodeType":"348","messageId":"349","endLine":20,"endColumn":28},{"ruleId":"346","severity":1,"message":"358","line":21,"column":5,"nodeType":"348","messageId":"349","endLine":21,"endColumn":10},{"ruleId":"346","severity":1,"message":"366","line":41,"column":18,"nodeType":"348","messageId":"349","endLine":41,"endColumn":25},{"ruleId":"371","severity":1,"message":"372","line":97,"column":41,"nodeType":"373","messageId":"374","endLine":97,"endColumn":43},{"ruleId":"367","severity":1,"message":"375","line":123,"column":8,"nodeType":"369","endLine":123,"endColumn":10,"suggestions":"376"},{"ruleId":"362","severity":1,"message":"363","line":138,"column":69,"nodeType":"353","endLine":138,"endColumn":152},{"ruleId":"362","severity":1,"message":"363","line":139,"column":43,"nodeType":"353","endLine":139,"endColumn":102},{"ruleId":"346","severity":1,"message":"354","line":4,"column":10,"nodeType":"348","messageId":"349","endLine":4,"endColumn":20},{"ruleId":"346","severity":1,"message":"377","line":5,"column":10,"nodeType":"348","messageId":"349","endLine":5,"endColumn":17},{"ruleId":"346","severity":1,"message":"378","line":9,"column":8,"nodeType":"348","messageId":"349","endLine":9,"endColumn":18},{"ruleId":"346","severity":1,"message":"379","line":10,"column":8,"nodeType":"348","messageId":"349","endLine":10,"endColumn":16},{"ruleId":"346","severity":1,"message":"380","line":11,"column":8,"nodeType":"348","messageId":"349","endLine":11,"endColumn":19},{"ruleId":"346","severity":1,"message":"381","line":12,"column":8,"nodeType":"348","messageId":"349","endLine":12,"endColumn":14},{"ruleId":"346","severity":1,"message":"382","line":34,"column":13,"nodeType":"348","messageId":"349","endLine":34,"endColumn":17},{"ruleId":"346","severity":1,"message":"383","line":45,"column":12,"nodeType":"348","messageId":"349","endLine":45,"endColumn":24},{"ruleId":"346","severity":1,"message":"361","line":46,"column":11,"nodeType":"348","messageId":"349","endLine":46,"endColumn":20},{"ruleId":"346","severity":1,"message":"384","line":59,"column":11,"nodeType":"348","messageId":"349","endLine":59,"endColumn":27},{"ruleId":"346","severity":1,"message":"385","line":63,"column":12,"nodeType":"348","messageId":"349","endLine":63,"endColumn":21},{"ruleId":"386","severity":1,"message":"387","line":66,"column":7,"nodeType":"388","messageId":"389","endLine":81,"endColumn":8},{"ruleId":"362","severity":1,"message":"363","line":91,"column":15,"nodeType":"353","endLine":91,"endColumn":100},{"ruleId":"346","severity":1,"message":"357","line":12,"column":20,"nodeType":"348","messageId":"349","endLine":12,"endColumn":26},{"ruleId":"346","severity":1,"message":"358","line":13,"column":3,"nodeType":"348","messageId":"349","endLine":13,"endColumn":8},{"ruleId":"346","severity":1,"message":"390","line":38,"column":9,"nodeType":"348","messageId":"349","endLine":38,"endColumn":21},{"ruleId":"351","severity":1,"message":"352","line":70,"column":13,"nodeType":"353","endLine":70,"endColumn":45},{"ruleId":"346","severity":1,"message":"354","line":2,"column":8,"nodeType":"348","messageId":"349","endLine":2,"endColumn":18},{"ruleId":"346","severity":1,"message":"347","line":3,"column":8,"nodeType":"348","messageId":"349","endLine":3,"endColumn":18},{"ruleId":"346","severity":1,"message":"350","line":4,"column":8,"nodeType":"348","messageId":"349","endLine":4,"endColumn":16},{"ruleId":"342","replacedBy":"391"},{"ruleId":"344","replacedBy":"392"},{"ruleId":"346","severity":1,"message":"357","line":16,"column":22,"nodeType":"348","messageId":"349","endLine":16,"endColumn":28},{"ruleId":"346","severity":1,"message":"358","line":17,"column":5,"nodeType":"348","messageId":"349","endLine":17,"endColumn":10},{"ruleId":"346","severity":1,"message":"393","line":35,"column":18,"nodeType":"348","messageId":"349","endLine":35,"endColumn":25},{"ruleId":"346","severity":1,"message":"394","line":3,"column":10,"nodeType":"348","messageId":"349","endLine":3,"endColumn":25},{"ruleId":"346","severity":1,"message":"366","line":11,"column":18,"nodeType":"348","messageId":"349","endLine":11,"endColumn":25},{"ruleId":"386","severity":1,"message":"387","line":15,"column":9,"nodeType":"388","messageId":"389","endLine":30,"endColumn":10},{"ruleId":"346","severity":1,"message":"395","line":35,"column":12,"nodeType":"348","messageId":"349","endLine":35,"endColumn":20},{"ruleId":"367","severity":1,"message":"396","line":43,"column":16,"nodeType":"369","endLine":43,"endColumn":26},{"ruleId":"386","severity":1,"message":"387","line":56,"column":9,"nodeType":"388","messageId":"389","endLine":81,"endColumn":10},{"ruleId":"386","severity":1,"message":"387","line":106,"column":9,"nodeType":"388","messageId":"389","endLine":121,"endColumn":10},{"ruleId":"346","severity":1,"message":"397","line":12,"column":9,"nodeType":"348","messageId":"349","endLine":12,"endColumn":13},{"ruleId":"346","severity":1,"message":"398","line":12,"column":15,"nodeType":"348","messageId":"349","endLine":12,"endColumn":24},{"ruleId":"346","severity":1,"message":"399","line":12,"column":26,"nodeType":"348","messageId":"349","endLine":12,"endColumn":37},{"ruleId":"346","severity":1,"message":"400","line":15,"column":8,"nodeType":"348","messageId":"349","endLine":15,"endColumn":27},{"ruleId":"346","severity":1,"message":"401","line":28,"column":8,"nodeType":"348","messageId":"349","endLine":28,"endColumn":13},{"ruleId":"346","severity":1,"message":"382","line":84,"column":12,"nodeType":"348","messageId":"349","endLine":84,"endColumn":16},{"ruleId":"346","severity":1,"message":"366","line":84,"column":18,"nodeType":"348","messageId":"349","endLine":84,"endColumn":25},{"ruleId":"346","severity":1,"message":"402","line":85,"column":22,"nodeType":"348","messageId":"349","endLine":85,"endColumn":33},{"ruleId":"367","severity":1,"message":"403","line":91,"column":7,"nodeType":"369","endLine":91,"endColumn":9,"suggestions":"404"},{"ruleId":"346","severity":1,"message":"405","line":1,"column":26,"nodeType":"348","messageId":"349","endLine":1,"endColumn":35},{"ruleId":"346","severity":1,"message":"406","line":5,"column":8,"nodeType":"348","messageId":"349","endLine":5,"endColumn":12},{"ruleId":"346","severity":1,"message":"354","line":6,"column":8,"nodeType":"348","messageId":"349","endLine":6,"endColumn":18},{"ruleId":"346","severity":1,"message":"407","line":11,"column":8,"nodeType":"348","messageId":"349","endLine":11,"endColumn":19},{"ruleId":"346","severity":1,"message":"357","line":14,"column":22,"nodeType":"348","messageId":"349","endLine":14,"endColumn":28},{"ruleId":"346","severity":1,"message":"358","line":15,"column":5,"nodeType":"348","messageId":"349","endLine":15,"endColumn":10},{"ruleId":"346","severity":1,"message":"366","line":25,"column":18,"nodeType":"348","messageId":"349","endLine":25,"endColumn":25},{"ruleId":"346","severity":1,"message":"408","line":27,"column":12,"nodeType":"348","messageId":"349","endLine":27,"endColumn":26},{"ruleId":"371","severity":1,"message":"372","line":33,"column":41,"nodeType":"373","messageId":"374","endLine":33,"endColumn":43},{"ruleId":"346","severity":1,"message":"409","line":6,"column":8,"nodeType":"348","messageId":"349","endLine":6,"endColumn":24},{"ruleId":"346","severity":1,"message":"410","line":1,"column":16,"nodeType":"348","messageId":"349","endLine":1,"endColumn":24},{"ruleId":"346","severity":1,"message":"405","line":1,"column":26,"nodeType":"348","messageId":"349","endLine":1,"endColumn":35},{"ruleId":"346","severity":1,"message":"366","line":9,"column":18,"nodeType":"348","messageId":"349","endLine":9,"endColumn":25},{"ruleId":"346","severity":1,"message":"380","line":17,"column":8,"nodeType":"348","messageId":"349","endLine":17,"endColumn":19},{"ruleId":"346","severity":1,"message":"378","line":18,"column":8,"nodeType":"348","messageId":"349","endLine":18,"endColumn":18},{"ruleId":"346","severity":1,"message":"381","line":19,"column":8,"nodeType":"348","messageId":"349","endLine":19,"endColumn":14},{"ruleId":"346","severity":1,"message":"379","line":20,"column":8,"nodeType":"348","messageId":"349","endLine":20,"endColumn":16},{"ruleId":"346","severity":1,"message":"357","line":30,"column":22,"nodeType":"348","messageId":"349","endLine":30,"endColumn":28},{"ruleId":"346","severity":1,"message":"358","line":31,"column":5,"nodeType":"348","messageId":"349","endLine":31,"endColumn":10},{"ruleId":"411","severity":1,"message":"412","line":57,"column":9,"nodeType":"413","messageId":"414","endLine":57,"endColumn":24},{"ruleId":"346","severity":1,"message":"415","line":111,"column":12,"nodeType":"348","messageId":"349","endLine":111,"endColumn":19},{"ruleId":"346","severity":1,"message":"416","line":111,"column":21,"nodeType":"348","messageId":"349","endLine":111,"endColumn":31},{"ruleId":"346","severity":1,"message":"382","line":112,"column":12,"nodeType":"348","messageId":"349","endLine":112,"endColumn":16},{"ruleId":"346","severity":1,"message":"366","line":112,"column":18,"nodeType":"348","messageId":"349","endLine":112,"endColumn":25},{"ruleId":"371","severity":1,"message":"372","line":135,"column":38,"nodeType":"373","messageId":"374","endLine":135,"endColumn":40},{"ruleId":"346","severity":1,"message":"417","line":9,"column":32,"nodeType":"348","messageId":"349","endLine":9,"endColumn":41},{"ruleId":"346","severity":1,"message":"418","line":28,"column":8,"nodeType":"348","messageId":"349","endLine":28,"endColumn":22},{"ruleId":"346","severity":1,"message":"419","line":29,"column":8,"nodeType":"348","messageId":"349","endLine":29,"endColumn":30},{"ruleId":"346","severity":1,"message":"420","line":39,"column":10,"nodeType":"348","messageId":"349","endLine":39,"endColumn":13},{"ruleId":"411","severity":1,"message":"412","line":52,"column":9,"nodeType":"413","messageId":"414","endLine":52,"endColumn":24},{"ruleId":"346","severity":1,"message":"421","line":84,"column":29,"nodeType":"348","messageId":"349","endLine":84,"endColumn":34},{"ruleId":"346","severity":1,"message":"416","line":87,"column":21,"nodeType":"348","messageId":"349","endLine":87,"endColumn":31},{"ruleId":"346","severity":1,"message":"382","line":120,"column":12,"nodeType":"348","messageId":"349","endLine":120,"endColumn":16},{"ruleId":"346","severity":1,"message":"366","line":120,"column":18,"nodeType":"348","messageId":"349","endLine":120,"endColumn":25},{"ruleId":"346","severity":1,"message":"416","line":121,"column":21,"nodeType":"348","messageId":"349","endLine":121,"endColumn":31},{"ruleId":"371","severity":1,"message":"372","line":170,"column":32,"nodeType":"373","messageId":"374","endLine":170,"endColumn":34},{"ruleId":"371","severity":1,"message":"372","line":179,"column":32,"nodeType":"373","messageId":"374","endLine":179,"endColumn":34},{"ruleId":"371","severity":1,"message":"372","line":327,"column":35,"nodeType":"373","messageId":"374","endLine":327,"endColumn":37},{"ruleId":"371","severity":1,"message":"372","line":337,"column":35,"nodeType":"373","messageId":"374","endLine":337,"endColumn":37},{"ruleId":"371","severity":1,"message":"372","line":365,"column":38,"nodeType":"373","messageId":"374","endLine":365,"endColumn":40},{"ruleId":"367","severity":1,"message":"422","line":400,"column":7,"nodeType":"369","endLine":400,"endColumn":9,"suggestions":"423"},{"ruleId":"346","severity":1,"message":"354","line":3,"column":15,"nodeType":"348","messageId":"349","endLine":3,"endColumn":25},{"ruleId":"346","severity":1,"message":"401","line":6,"column":8,"nodeType":"348","messageId":"349","endLine":6,"endColumn":13},{"ruleId":"346","severity":1,"message":"366","line":10,"column":18,"nodeType":"348","messageId":"349","endLine":10,"endColumn":25},{"ruleId":"346","severity":1,"message":"424","line":14,"column":12,"nodeType":"348","messageId":"349","endLine":14,"endColumn":28},{"ruleId":"346","severity":1,"message":"425","line":15,"column":12,"nodeType":"348","messageId":"349","endLine":15,"endColumn":27},{"ruleId":"367","severity":1,"message":"426","line":26,"column":7,"nodeType":"369","endLine":26,"endColumn":9,"suggestions":"427"},{"ruleId":"346","severity":1,"message":"428","line":28,"column":11,"nodeType":"348","messageId":"349","endLine":28,"endColumn":32},{"ruleId":"342","replacedBy":"429"},{"ruleId":"344","replacedBy":"430"},{"ruleId":"346","severity":1,"message":"401","line":15,"column":8,"nodeType":"348","messageId":"349","endLine":15,"endColumn":13},{"ruleId":"346","severity":1,"message":"357","line":17,"column":22,"nodeType":"348","messageId":"349","endLine":17,"endColumn":28},{"ruleId":"346","severity":1,"message":"358","line":18,"column":5,"nodeType":"348","messageId":"349","endLine":18,"endColumn":10},{"ruleId":"346","severity":1,"message":"393","line":36,"column":18,"nodeType":"348","messageId":"349","endLine":36,"endColumn":25},{"ruleId":"346","severity":1,"message":"357","line":16,"column":22,"nodeType":"348","messageId":"349","endLine":16,"endColumn":28},{"ruleId":"346","severity":1,"message":"431","line":17,"column":5,"nodeType":"348","messageId":"349","endLine":17,"endColumn":11},{"ruleId":"346","severity":1,"message":"358","line":18,"column":5,"nodeType":"348","messageId":"349","endLine":18,"endColumn":10},{"ruleId":"346","severity":1,"message":"366","line":39,"column":18,"nodeType":"348","messageId":"349","endLine":39,"endColumn":25},{"ruleId":"371","severity":1,"message":"372","line":108,"column":30,"nodeType":"373","messageId":"374","endLine":108,"endColumn":32},{"ruleId":"432","severity":1,"message":"433","line":157,"column":54,"nodeType":"434","endLine":157,"endColumn":81},{"ruleId":"432","severity":1,"message":"433","line":160,"column":54,"nodeType":"434","endLine":160,"endColumn":81},{"ruleId":"432","severity":1,"message":"433","line":163,"column":54,"nodeType":"434","endLine":163,"endColumn":81},{"ruleId":"432","severity":1,"message":"433","line":166,"column":54,"nodeType":"434","endLine":166,"endColumn":81},{"ruleId":"432","severity":1,"message":"433","line":169,"column":54,"nodeType":"434","endLine":169,"endColumn":81},{"ruleId":"432","severity":1,"message":"433","line":172,"column":54,"nodeType":"434","endLine":172,"endColumn":81},{"ruleId":"432","severity":1,"message":"433","line":175,"column":54,"nodeType":"434","endLine":175,"endColumn":81},{"ruleId":"432","severity":1,"message":"433","line":181,"column":62,"nodeType":"434","endLine":181,"endColumn":84},{"ruleId":"432","severity":1,"message":"433","line":184,"column":62,"nodeType":"434","endLine":184,"endColumn":84},{"ruleId":"432","severity":1,"message":"433","line":187,"column":62,"nodeType":"434","endLine":187,"endColumn":84},{"ruleId":"432","severity":1,"message":"433","line":190,"column":62,"nodeType":"434","endLine":190,"endColumn":84},{"ruleId":"432","severity":1,"message":"433","line":193,"column":62,"nodeType":"434","endLine":193,"endColumn":84},{"ruleId":"432","severity":1,"message":"433","line":196,"column":62,"nodeType":"434","endLine":196,"endColumn":84},{"ruleId":"432","severity":1,"message":"433","line":199,"column":62,"nodeType":"434","endLine":199,"endColumn":84},{"ruleId":"346","severity":1,"message":"410","line":1,"column":16,"nodeType":"348","messageId":"349","endLine":1,"endColumn":24},{"ruleId":"346","severity":1,"message":"435","line":1,"column":26,"nodeType":"348","messageId":"349","endLine":1,"endColumn":36},{"ruleId":"346","severity":1,"message":"436","line":2,"column":10,"nodeType":"348","messageId":"349","endLine":2,"endColumn":21},{"ruleId":"346","severity":1,"message":"354","line":6,"column":8,"nodeType":"348","messageId":"349","endLine":6,"endColumn":18},{"ruleId":"346","severity":1,"message":"437","line":8,"column":8,"nodeType":"348","messageId":"349","endLine":8,"endColumn":21},{"ruleId":"346","severity":1,"message":"379","line":9,"column":8,"nodeType":"348","messageId":"349","endLine":9,"endColumn":16},{"ruleId":"346","severity":1,"message":"438","line":10,"column":8,"nodeType":"348","messageId":"349","endLine":10,"endColumn":12},{"ruleId":"346","severity":1,"message":"350","line":11,"column":8,"nodeType":"348","messageId":"349","endLine":11,"endColumn":16},{"ruleId":"346","severity":1,"message":"439","line":12,"column":8,"nodeType":"348","messageId":"349","endLine":12,"endColumn":17},{"ruleId":"346","severity":1,"message":"401","line":15,"column":8,"nodeType":"348","messageId":"349","endLine":15,"endColumn":13},{"ruleId":"346","severity":1,"message":"357","line":17,"column":22,"nodeType":"348","messageId":"349","endLine":17,"endColumn":28},{"ruleId":"346","severity":1,"message":"358","line":18,"column":5,"nodeType":"348","messageId":"349","endLine":18,"endColumn":10},{"ruleId":"346","severity":1,"message":"440","line":36,"column":11,"nodeType":"348","messageId":"349","endLine":36,"endColumn":22},{"ruleId":"346","severity":1,"message":"441","line":37,"column":11,"nodeType":"348","messageId":"349","endLine":37,"endColumn":24},{"ruleId":"346","severity":1,"message":"442","line":38,"column":12,"nodeType":"348","messageId":"349","endLine":38,"endColumn":18},{"ruleId":"346","severity":1,"message":"443","line":39,"column":12,"nodeType":"348","messageId":"349","endLine":39,"endColumn":21},{"ruleId":"346","severity":1,"message":"444","line":41,"column":11,"nodeType":"348","messageId":"349","endLine":41,"endColumn":24},{"ruleId":"346","severity":1,"message":"445","line":45,"column":11,"nodeType":"348","messageId":"349","endLine":45,"endColumn":29},{"ruleId":"346","severity":1,"message":"446","line":49,"column":11,"nodeType":"348","messageId":"349","endLine":49,"endColumn":26},{"ruleId":"346","severity":1,"message":"447","line":55,"column":11,"nodeType":"348","messageId":"349","endLine":55,"endColumn":31},{"ruleId":"346","severity":1,"message":"347","line":3,"column":8,"nodeType":"348","messageId":"349","endLine":3,"endColumn":18},{"ruleId":"346","severity":1,"message":"350","line":4,"column":8,"nodeType":"348","messageId":"349","endLine":4,"endColumn":16},{"ruleId":"351","severity":1,"message":"448","line":13,"column":5,"nodeType":"353","endLine":13,"endColumn":31},{"ruleId":"346","severity":1,"message":"405","line":1,"column":26,"nodeType":"348","messageId":"349","endLine":1,"endColumn":35},{"ruleId":"346","severity":1,"message":"398","line":5,"column":21,"nodeType":"348","messageId":"349","endLine":5,"endColumn":30},{"ruleId":"346","severity":1,"message":"357","line":15,"column":22,"nodeType":"348","messageId":"349","endLine":15,"endColumn":28},{"ruleId":"346","severity":1,"message":"358","line":16,"column":5,"nodeType":"348","messageId":"349","endLine":16,"endColumn":10},{"ruleId":"346","severity":1,"message":"366","line":25,"column":18,"nodeType":"348","messageId":"349","endLine":25,"endColumn":25},{"ruleId":"371","severity":1,"message":"372","line":31,"column":41,"nodeType":"373","messageId":"374","endLine":31,"endColumn":43},{"ruleId":"362","severity":1,"message":"363","line":48,"column":25,"nodeType":"353","endLine":48,"endColumn":92},{"ruleId":"346","severity":1,"message":"380","line":25,"column":9,"nodeType":"348","messageId":"349","endLine":25,"endColumn":20},{"ruleId":"346","severity":1,"message":"449","line":26,"column":9,"nodeType":"348","messageId":"349","endLine":26,"endColumn":18},{"ruleId":"346","severity":1,"message":"450","line":27,"column":9,"nodeType":"348","messageId":"349","endLine":27,"endColumn":14},{"ruleId":"346","severity":1,"message":"451","line":28,"column":9,"nodeType":"348","messageId":"349","endLine":28,"endColumn":19},{"ruleId":"346","severity":1,"message":"452","line":29,"column":9,"nodeType":"348","messageId":"349","endLine":29,"endColumn":25},{"ruleId":"346","severity":1,"message":"453","line":30,"column":8,"nodeType":"348","messageId":"349","endLine":30,"endColumn":18},{"ruleId":"346","severity":1,"message":"382","line":104,"column":12,"nodeType":"348","messageId":"349","endLine":104,"endColumn":16},{"ruleId":"346","severity":1,"message":"366","line":104,"column":18,"nodeType":"348","messageId":"349","endLine":104,"endColumn":25},{"ruleId":"346","severity":1,"message":"454","line":108,"column":12,"nodeType":"348","messageId":"349","endLine":108,"endColumn":17},{"ruleId":"346","severity":1,"message":"455","line":108,"column":19,"nodeType":"348","messageId":"349","endLine":108,"endColumn":27},{"ruleId":"346","severity":1,"message":"456","line":109,"column":12,"nodeType":"348","messageId":"349","endLine":109,"endColumn":17},{"ruleId":"346","severity":1,"message":"457","line":109,"column":19,"nodeType":"348","messageId":"349","endLine":109,"endColumn":27},{"ruleId":"346","severity":1,"message":"458","line":113,"column":12,"nodeType":"348","messageId":"349","endLine":113,"endColumn":23},{"ruleId":"346","severity":1,"message":"459","line":113,"column":25,"nodeType":"348","messageId":"349","endLine":113,"endColumn":39},{"ruleId":"346","severity":1,"message":"460","line":114,"column":12,"nodeType":"348","messageId":"349","endLine":114,"endColumn":23},{"ruleId":"346","severity":1,"message":"461","line":114,"column":25,"nodeType":"348","messageId":"349","endLine":114,"endColumn":39},{"ruleId":"386","severity":1,"message":"387","line":178,"column":9,"nodeType":"388","messageId":"389","endLine":191,"endColumn":10},"no-native-reassign",["462"],"no-negated-in-lhs",["463"],"no-unused-vars","'IconButton' is defined but never used.","Identifier","unusedVar","'MenuIcon' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Typography' is defined but never used.","'SignUpForm' is defined but never used.","'LoginForm' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'signupLanding' is assigned a value but never used.","'setLoginLanding' is assigned a value but never used.","'toggleOne' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'makeStyles' is defined but never used.","'key' is assigned a value but never used.","'setUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user.notificationType'. Either include it or remove the dependency array.","ArrayExpression",["464"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'getNextInfusion', 'getTodaysSchedule', and 'user.events.length'. Either include them or remove the dependency array.",["465"],"'Divider' is defined but never used.","'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'FormControl' is defined but never used.","'Select' is defined but never used.","'user' is assigned a value but never used.","'loginLanding' is assigned a value but never used.","'handleRoleChange' is assigned a value but never used.","'loginForm' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'handleChange' is assigned a value but never used.",["462"],["463"],"'setAuth' is assigned a value but never used.","'TutorialContext' is defined but never used.","'earliest' is assigned a value but never used.","Assignments to the 'week' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'Card' is defined but never used.","'CardMedia' is defined but never used.","'CardContent' is defined but never used.","'ArrowForwardIosIcon' is defined but never used.","'axios' is defined but never used.","'setTutorial' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'tutorial'. Either include it or remove the dependency array.",["466"],"'useEffect' is defined but never used.","'Grid' is defined but never used.","'DialogTitle' is defined but never used.","'tutorialSelect' is assigned a value but never used.","'ErrorOutlineIcon' is defined but never used.","'useState' is defined but never used.","no-dupe-keys","Duplicate key 'backgroundColor'.","ObjectExpression","unexpected","'patient' is assigned a value but never used.","'setPatient' is assigned a value but never used.","'withTheme' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'KeyboardArrowRightIcon' is defined but never used.","'set' is defined but never used.","'theme' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getTodaysSchedule' and 'patient'. Either include them or remove the dependency array.",["467"],"'tutorialsClicked' is assigned a value but never used.","'tutorialsLoaded' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user.infusionArray'. Either include it or remove the dependency array.",["468"],"'handleTutorialClicked' is assigned a value but never used.",["462"],["463"],"'Switch' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useContext' is defined but never used.","'UserContext' is defined but never used.","'AccountCircle' is defined but never used.","'Menu' is defined but never used.","'CloseIcon' is defined but never used.","'openProfile' is assigned a value but never used.","'openHamburger' is assigned a value but never used.","'hbIcon' is assigned a value but never used.","'closeIcon' is assigned a value but never used.","'handleProfile' is assigned a value but never used.","'handleCloseProfile' is assigned a value but never used.","'handleHamburger' is assigned a value but never used.","'handleHamburgerClose' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'FormLabel' is defined but never used.","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'CreateIcon' is defined but never used.","'phone' is assigned a value but never used.","'setPhone' is assigned a value but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'notifyPhone' is assigned a value but never used.","'setNotifyPhone' is assigned a value but never used.","'notifyEmail' is assigned a value but never used.","'setNotifyEmail' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"469","fix":"470"},{"desc":"471","fix":"472"},{"desc":"473","fix":"474"},{"desc":"475","fix":"476"},{"desc":"477","fix":"478"},"Update the dependencies array to be: [user.notificationType]",{"range":"479","text":"480"},"Update the dependencies array to be: [getNextInfusion, getTodaysSchedule, user.events.length]",{"range":"481","text":"482"},"Update the dependencies array to be: [tutorial]",{"range":"483","text":"484"},"Update the dependencies array to be: [getTodaysSchedule, patient]",{"range":"485","text":"486"},"Update the dependencies array to be: [user.infusionArray]",{"range":"487","text":"488"},[4294,4296],"[user.notificationType]",[4458,4460],"[getNextInfusion, getTodaysSchedule, user.events.length]",[2913,2915],"[tutorial]",[14903,14905],"[getTodaysSchedule, patient]",[883,885],"[user.infusionArray]"]