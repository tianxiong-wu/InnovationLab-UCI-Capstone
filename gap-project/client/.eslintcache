[{"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/index.js":"1","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/reportWebVitals.js":"2","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/App.js":"3","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/nav/nav.js":"4","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/footer/footer.js":"5","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/loginSignUp/loginSignUp.js":"6","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/loginForm/loginForm.js":"7","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/signUpForm/signUpForm.js":"8"},{"size":500,"mtime":1610145654937,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1610145654938,"results":"11","hashOfConfig":"10"},{"size":260,"mtime":1611881161722,"results":"12","hashOfConfig":"10"},{"size":3755,"mtime":1611881161726,"results":"13","hashOfConfig":"10"},{"size":0,"mtime":1611807471687,"results":"14","hashOfConfig":"10"},{"size":1532,"mtime":1611901887697,"results":"15","hashOfConfig":"10"},{"size":3370,"mtime":1611901983436,"results":"16","hashOfConfig":"10"},{"size":5655,"mtime":1611900537038,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"axtido",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/index.js",[],["36","37"],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/reportWebVitals.js",[],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/App.js",["38"],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/nav/nav.js",["39","40","41","42","43"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\nimport {\n  Link\n} from \"react-router-dom\";\nimport '../nav/nav.css'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function MenuAppBar() {\n  const classes = useStyles();\n  const [auth, setAuth] = React.useState(true);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleChange = (event) => {\n    setAuth(event.target.checked);\n  };\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n// replace all the <a> tags with <Link> to use react routing once the other pages are built.\n// add a react conditional rendering: if not logged in, only show the logo on the nav bar.\n// currently developed for desktop pov. Add css media queries to show a different nav format \n// if the size of the window is larger than a mobile size.\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar className=\"navStyling\">\n        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            Icon\n        </IconButton>\n        <Typography variant=\"h6\" className={classes.title}>\n            <Link className=\"navItem\" to=\"/\">Home</Link>\n        </Typography>\n        <Typography variant=\"h6\" className={classes.title}>\n            <Link className=\"navItem\" href=\"#\">Tutorials</Link>\n        </Typography>\n        <Typography variant=\"h6\" className={classes.title}>\n            <Link className=\"navItem\">Link</Link>\n        </Typography>\n        <Typography variant=\"h6\" className={classes.title}>\n            <Link className=\"navItem\"  to=\"/faq\">FAQ</Link>\n        </Typography>\n        <Typography variant=\"h6\" className={classes.title}>\n            <Link className=\"navItem\" href=\"#\">Contact</Link>\n        </Typography>\n          {auth && (\n            <div>\n              <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClose}>Jasmine Miller</MenuItem>\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>Settings</MenuItem>\n                <MenuItem onClick={handleClose}>Log Out</MenuItem>\n              </Menu>\n            </div>\n          )}\n          \n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\n/**\n       <FormGroup>\n        <FormControlLabel\n          control={<Switch checked={auth} onChange={handleChange} aria-label=\"login switch\" />}\n          label={auth ? 'Logout' : 'Login'}\n        />\n      </FormGroup>\n */","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/footer/footer.js",["44","45","46","47"],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/loginSignUp/loginSignUp.js",[],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/loginForm/loginForm.js",["48","49"],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/signUpForm/signUpForm.js",["50","51"],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":1,"column":8,"nodeType":"58","messageId":"59","endLine":1,"endColumn":12},{"ruleId":"56","severity":1,"message":"60","line":7,"column":8,"nodeType":"58","messageId":"59","endLine":7,"endColumn":16},{"ruleId":"56","severity":1,"message":"61","line":9,"column":8,"nodeType":"58","messageId":"59","endLine":9,"endColumn":14},{"ruleId":"56","severity":1,"message":"62","line":10,"column":8,"nodeType":"58","messageId":"59","endLine":10,"endColumn":24},{"ruleId":"56","severity":1,"message":"63","line":11,"column":8,"nodeType":"58","messageId":"59","endLine":11,"endColumn":17},{"ruleId":"56","severity":1,"message":"64","line":38,"column":9,"nodeType":"58","messageId":"59","endLine":38,"endColumn":21},{"ruleId":"56","severity":1,"message":"65","line":3,"column":8,"nodeType":"58","messageId":"59","endLine":3,"endColumn":18},{"ruleId":"56","severity":1,"message":"60","line":4,"column":8,"nodeType":"58","messageId":"59","endLine":4,"endColumn":16},{"ruleId":"66","severity":1,"message":"67","line":13,"column":5,"nodeType":"68","endLine":13,"endColumn":40},{"ruleId":"66","severity":1,"message":"67","line":18,"column":5,"nodeType":"68","endLine":18,"endColumn":40},{"ruleId":"56","severity":1,"message":"69","line":4,"column":10,"nodeType":"58","messageId":"59","endLine":4,"endColumn":17},{"ruleId":"70","severity":1,"message":"71","line":49,"column":19,"nodeType":"68","endLine":49,"endColumn":104},{"ruleId":"56","severity":1,"message":"69","line":5,"column":10,"nodeType":"58","messageId":"59","endLine":5,"endColumn":17},{"ruleId":"70","severity":1,"message":"71","line":121,"column":21,"nodeType":"68","endLine":121,"endColumn":106},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'MenuIcon' is defined but never used.","'Switch' is defined but never used.","'FormControlLabel' is defined but never used.","'FormGroup' is defined but never used.","'handleChange' is assigned a value but never used.","'IconButton' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Divider' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]