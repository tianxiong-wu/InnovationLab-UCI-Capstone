[{"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/index.js":"1","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/App.js":"2","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/reportWebVitals.js":"3","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/footer/footer.js":"4","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/404_error/404_error.js":"5","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/loginSignUp/loginSignUp.js":"6","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/signUpForm/signUpForm.js":"7","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/FAQPage/faq.js":"8","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/patientSettings/settings.js":"9","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/homePage/patient/patientHome.js":"10","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/FAQPage/question.js":"11","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/loginForm/loginForm.js":"12","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/nav/nav.js":"13","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/settings/settings.js":"14","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/patientNav/patientNav.js":"15","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/pharmContact/pharmContact.js":"16","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/patientSchedule/patientSchedule.js":"17","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/TutorialPage/tutorial.js":"18","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/pharmSettings/pharmSettings.js":"19","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/scheduleEvent/scheduleEvent.js":"20","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/notifications/notifications.js":"21","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/patientProfile/profile.js":"22","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/pharmTutorialList/pharmTutorialList.js":"23","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/pharmAssignPage/pharmAssign.js":"24","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/patientTutorials/tutorial.js":"25","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/UserContext.js":"26","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/navPharmResponsive/navPharmResponsive.js":"27","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/homePage/pharmacist/pharmacistHome.js":"28","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/PatientContext.js":"29","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/authNav/authNav.js":"30","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/pharmFooter/footer.js":"31","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/TutorialContext.js":"32","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/TutorialList/tutorialList.js":"33"},{"size":500,"mtime":1610145654937,"results":"34","hashOfConfig":"35"},{"size":3914,"mtime":1615107862082,"results":"36","hashOfConfig":"35"},{"size":362,"mtime":1610145654938,"results":"37","hashOfConfig":"35"},{"size":460,"mtime":1615107862084,"results":"38","hashOfConfig":"35"},{"size":424,"mtime":1612981913369,"results":"39","hashOfConfig":"35"},{"size":1174,"mtime":1615076358091,"results":"40","hashOfConfig":"35"},{"size":10848,"mtime":1615163719277,"results":"41","hashOfConfig":"35"},{"size":1985,"mtime":1614587175076,"results":"42","hashOfConfig":"35"},{"size":9963,"mtime":1614587175088,"results":"43","hashOfConfig":"35"},{"size":5913,"mtime":1615164251001,"results":"44","hashOfConfig":"35"},{"size":1180,"mtime":1613862548255,"results":"45","hashOfConfig":"35"},{"size":3460,"mtime":1615076358089,"results":"46","hashOfConfig":"35"},{"size":4028,"mtime":1613969866578,"results":"47","hashOfConfig":"35"},{"size":4832,"mtime":1614031496247,"results":"48","hashOfConfig":"35"},{"size":7191,"mtime":1615107862085,"results":"49","hashOfConfig":"35"},{"size":5546,"mtime":1614587175093,"results":"50","hashOfConfig":"35"},{"size":10858,"mtime":1615163719279,"results":"51","hashOfConfig":"35"},{"size":12186,"mtime":1615107862088,"results":"52","hashOfConfig":"35"},{"size":5102,"mtime":1613970201849,"results":"53","hashOfConfig":"35"},{"size":397,"mtime":1613977929355,"results":"54","hashOfConfig":"35"},{"size":763,"mtime":1614036249578,"results":"55","hashOfConfig":"35"},{"size":1280,"mtime":1614587175084,"results":"56","hashOfConfig":"35"},{"size":4063,"mtime":1614587392839,"results":"57","hashOfConfig":"35"},{"size":30277,"mtime":1615066045796,"results":"58","hashOfConfig":"35"},{"size":1352,"mtime":1614587175090,"results":"59","hashOfConfig":"35"},{"size":87,"mtime":1614587175067,"results":"60","hashOfConfig":"35"},{"size":6492,"mtime":1615107862085,"results":"61","hashOfConfig":"35"},{"size":9062,"mtime":1615163719277,"results":"62","hashOfConfig":"35"},{"size":90,"mtime":1614823058317,"results":"63","hashOfConfig":"35"},{"size":2273,"mtime":1615076358089,"results":"64","hashOfConfig":"35"},{"size":458,"mtime":1615097094877,"results":"65","hashOfConfig":"35"},{"size":91,"mtime":1615107862083,"results":"66","hashOfConfig":"35"},{"size":4223,"mtime":1615164457652,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"axtido",{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"70"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"70"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/index.js",[],["154","155"],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/App.js",["156"],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/reportWebVitals.js",[],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/footer/footer.js",["157","158","159"],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/404_error/404_error.js",["160","161","162"],"import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport '../404_error/404_error.css'\n\n\nexport default function error_page() {\n\treturn (\n\t\t<div className=\"errorContainer\">\n\t\t\t<div className=\"errorMessage\">\n\t\t\t\tOops, the page you are trying to find does not exist!\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/loginSignUp/loginSignUp.js",["163","164","165","166","167"],"import React, { useState } from \"react\"\nimport SignUpForm from \"../../components/signUpForm/signUpForm\"\nimport LoginForm from \"../../components/loginForm/loginForm\"\nimport { Grid } from \"@material-ui/core\"\n\nexport default function LoginSignUp(){\n\n    const [signUp, setSignUp] = useState(true);\n    const [login, setLogin] = useState(true);\n\n    const toggleSignupClicked = () => {\n        setLogin(false);\n    }\n\n    const toggleLoginClicked = () => {\n        setSignUp(false);\n    }\n\n    return (\n        <Grid container>\n            <Grid item xs={2}></Grid>\n            <Grid item xs={8}>\n                {signUp === true ?\n                <div onClick={toggleSignupClicked}> \n                    <SignUpForm/>\n                </div>\n                : null }\n                {login === true ?\n                <div onClick={toggleLoginClicked}>\n                    <LoginForm loginLanding={true} loginForm={false}/>\n                </div>\n                : null }\n            </Grid>\n            <Grid item xs={2}></Grid>\n        </Grid>\n    )\n}","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/signUpForm/signUpForm.js",["168","169","170","171","172","173"],"import React, { useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport { Grid } from '@material-ui/core';\nimport { Typography } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport LoginForm from \"../loginForm/loginForm\"\nimport \"../signUpForm/signUpForm.css\"\nimport axios from \"axios\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n      width: \"97%\",\n      marginTop: \"10vh\"\n    },\n  }));\n\n\nexport default function SignUpForm(props){\n    // Email validation\n    var validator = require('email-validator');\n    function validateEmail(email) {\n        validator.validate(email);\n    }\n\n    // Phone validation\n    const phone = require('fonz.js');\n    var passwordValidator = require('password-validator');\n    var schema = new passwordValidator();\n    schema\n    .is().min(8)                                    // Minimum length 8\n    .is().max(16)                                   // Maximum length 16\n    .has().uppercase()                              // Must have uppercase letters\n    .has().lowercase()                              // Must have lowercase letters\n    .has().digits(2)                                // Must have at least 2 digits\n    .has().not().spaces()                           // Should not have spaces\n    .has().symbols();                                // Must have at least one symbol*/\n\n    const classes = useStyles();\n    const [signupLanding, setSignupLanding] = useState(true);\n    const [role, setRole] = useState(\"\");\n    const [roleLanding, setRoleLanding] = useState(true);\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [birthdate, setBirthdate] = useState(\"\");\n    const [gender, setGender] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [phoneNumber, setPhoneNumber] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [repeatPassword, setRepeatPassword] = useState(\"\");\n    const [loginLanding, setLoginLanding] = useState(false);    \n  \n    const user = {\n      firstName: firstName,\n      lastName: lastName,\n      birthday: birthdate,\n      gender: gender,\n      email: email,\n      phoneNumber: phoneNumber,\n      password: password,\n      role: role\n    }\n\n    const pharmacistUser = {\n      firstName: firstName,\n      lastName: lastName,\n      birthday: birthdate,\n      gender: gender,\n      email: email,\n      phoneNumber: phoneNumber,\n      password: password,\n      role: role\n    }\n\n    const toggleOne = () => {\n      setSignupLanding(false);\n      setRoleLanding(true);\n    }\n\n    const toggleRoleSelect = () => {\n      setRoleLanding(false);\n      setSignupFormPageOne(true);\n    }\n\n    const toggleRoleTwo = () => {\n      setSignupFormPageOne(false);\n      setRoleLanding(true);\n    }\n\n    const toggleTwo = () => {\n      setSignupFormPageOne(false);\n      setSignupFormPageTwo(true);\n    }\n\n    const toggleThree = () => {\n      setSignupFormPageTwo(false);\n      setSuccessPage(true);\n      \n      if (role === \"patient\"){\n      axios.post(`http://localhost:5000/patients/register`, user).then(res=>{\n        console.log(res);\n      })}\n      else if (role === \"pharmacist\"){\n        axios.post(`http://localhost:5000/pharmacists/register`, pharmacistUser).then(res=>{\n        console.log(res);\n      })}\n    }\n\n    const toggleFour = () => {\n      setSignupFormPageTwo(false);\n      setSignupFormPageOne(true);\n    }\n\n    const toggleFive = () => {\n      setSuccessPage(false);\n    }\n\n    const [signupFormPageOne, setSignupFormPageOne] = useState(false);\n    const [signupFormPageTwo, setSignupFormPageTwo] = useState(false);\n    const [successPage, setSuccessPage] = useState(false);\n\n    const handleChange = (event) => {\n        setGender(event.target.value);\n    }\n\n    const handleRoleChange = (event) => {\n      setRole(event.target.value);\n      if(role !== \"\"){\n        setRoleLanding(true);\n      }\n    };\n\n    const handleFirstNameChange = (event) => {\n        setFirstName(event.target.value);\n    }\n\n    const handleLastNameChange = (event) => {\n        setLastName(event.target.value);\n    }\n\n    const handleBirthdateChange = (event) => {\n      setBirthdate(event.taret.value);\n    }\n\n    const handleEmailChange = (event) => {\n        setEmail(event.target.value);\n    }\n\n    const handlePasswordChange = (event) => {\n        setPassword(event.target.value);\n    }\n\n    const handlePhoneNumberChange = (event) => {\n        setPhoneNumber(event.target.value);\n    }\n\n    const handleRepeatChange = (event) => {\n        setRepeatPassword(event.target.value);\n    }\n\n    return(\n      <div className={classes.root}>\n          <Grid container justify=\"center\" spacing={3}>\n              <Grid item xs={1} md={3}></Grid>\n              {roleLanding === true ? \n              <Grid item xs={10} md={6}>\n                <div className=\"formDiv\">\n                  <Typography variant=\"h5\" color=\"primary\" className=\"formTitle\">Select Your Account Type</Typography>\n                  <FormControl className={classes.formControl}>\n                    <InputLabel id=\"demo-simple-select-label\">Role</InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-label\"\n                      id=\"demo-simple-select\"\n                      value={role}\n                      onChange={handleRoleChange}\n                      fullWidth\n                    >\n                      <MenuItem value={\"\"}>None</MenuItem>\n                      <MenuItem value={\"patient\"}>Patient</MenuItem>\n                      <MenuItem value={\"pharmacist\"}>Pharmacist</MenuItem>\n                    </Select>\n                </FormControl>\n                <Button disabled={role === \"\"} variant=\"outlined\" className=\"nextFull\" onClick={toggleRoleSelect}>Next</Button>\n                </div>  \n              </Grid> : null}\n              {signupFormPageOne === true ? \n                <Grid item xs={10} md={6}>\n                  <div className=\"formDiv\">\n                    <Typography variant=\"h5\" color=\"primary\" className=\"formTitle\">Create your account</Typography>\n                    <TextField className=\"formStyling formMargin\" id=\"outlined-basic\" label=\"First Name\" defaultValue={firstName} variant=\"outlined\" onChange={handleFirstNameChange} required />\n                    <TextField className=\"formStyling formMargin\" id=\"outlined-basic\" label=\"Last Name\" defaultValue={lastName} variant=\"outlined\" onChange={handleLastNameChange} required />\n                    <TextField \n                      id=\"date\"\n                      label=\"Birthday\"\n                      type=\"date\"\n                      defaultValue={birthdate}\n                      className=\"formMargin\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                      fullWidth\n                      onChange={handleBirthdateChange}\n                      required />\n                    <FormControl className=\"selectGender formMargin\" required>\n                      <InputLabel id=\"demo-simple-select-label\">Gender</InputLabel>\n                      <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        defaultValue={gender}\n                        onChange={handleChange}\n                      >\n                        <MenuItem value=\"male\">Male</MenuItem>\n                        <MenuItem value=\"female\">Female</MenuItem>\n                        <MenuItem value=\"other\">Other</MenuItem>\n                      </Select>\n                  </FormControl>\n                    <Button variant=\"outlined\" className=\"prev\" onClick={toggleRoleTwo}>Back</Button>\n                    <Button disabled={firstName === \"\" || lastName === \"\" || birthdate === \"\" || gender === \"\"} variant=\"outlined\" className=\"next\" onClick={toggleTwo}>Next</Button>\n                  </div>\n                </Grid>\n              : null}\n              {signupFormPageTwo === true ? \n                <Grid item xs={10} md={6}>\n                  <div className=\"formDiv\">\n                    <Typography variant=\"h5\" color=\"primary\" className=\"formTitle\">Create your account</Typography>\n                    <TextField className=\"formStyling formMargin\" id=\"outlined-basic\" label=\"Email\" variant=\"outlined\" defaultValue={email} onChange = {handleEmailChange} required />\n                    <TextField className=\"formStyling formMargin\" id=\"outlined-basic\" label=\"Phone\" variant=\"outlined\" defaultValue={phoneNumber} onChange = {handlePhoneNumberChange} required />\n                    <TextField className=\"formStyling formMargin\" type=\"password\" id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" onChange = {handlePasswordChange} required />\n                    <TextField className=\"formStyling formMargin\" type=\"password\" id=\"outlined-basic\" label=\"Repeat Password\" variant=\"outlined\" onChange = {handleRepeatChange} required />\n                  </div>\n                  <Button variant=\"outlined\" className=\"prev\" onClick={toggleFour}>Back</Button>\n                  <Button disabled = {\n                        email === \"\" ||\n                        validateEmail(email) === true || \n                        phone.validate(phoneNumber) === false || \n                        schema.validate(password) === false || \n                        password !== repeatPassword } \n                        variant=\"outlined\" className=\"next\" onClick={toggleThree}>Submit</Button>\n                </Grid>\n              : null}\n              {successPage === true ? \n                <Grid item xs={10} md={6}>\n                  <div className=\"formDiv\">\n                    <img src=\"https://picsum.photos/seed/picsum/200/300\" className=\"signupSuccessPhoto\"/>\n                    <Typography variant=\"h5\" align=\"center\" className=\"signupSuccessTypography\">Congratulations!</Typography>\n                    <Typography variant=\"h5\" align=\"center\">Your account is ready</Typography>\n                  </div>\n                <Link to=\"/Login\" className=\"loginLink\" onClick={toggleFive}><Button className=\"nextFull\">Login</Button></Link>\n                </Grid>\n              : null }\n              {loginLanding === true ? \n                <LoginForm loginLanding={false} loginForm={true}/>\n              : null}\n              <Grid item xs={1} md={3}></Grid>                 \n          </Grid>\n      </div>\n    )\n}","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/FAQPage/faq.js",["174","175"],"import React, { useEffect, useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport SearchBar from \"material-ui-search-bar\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Questions from './question'\nimport './faq.css'\nimport axios from 'axios';\n\nexport default function FAQ(){\n    const [questions, setQuestions] = useState([]);\n    const [displayQuestions, setDisplayQuestions] = useState([{}]);\n    const [value, setValue] = useState('');\n\n    useEffect( () => {\n        axios.get('http://localhost:5000/faqs/all').then(res => {\n            let questionList = [];\n            for (const [key, val] of Object.entries(res.data)){\n                questionList.push([val.question, val.answer])\n            }\n            setQuestions(questionList);\n        });\n    }, []);\n\n    function handleSearch(val){\n        if (val === \"\"){\n            return;\n        }\n        setValue(val);\n        let questionList = [];\n        questions.forEach((faq) => {\n            if (faq[0].includes(val) || faq[1].includes(val)) {\n                questionList.push(faq);\n            }\n        })\n        setDisplayQuestions(questionList);\n        console.log(displayQuestions);\n    }\n\n\n    return(\n        <Container>\n            <Typography variant=\"h4\" className=\"title\">How can we help you?</Typography>\n            <SearchBar\n                className=\"searchBar\"\n                value={value}\n                type=\"text\"\n                onChange={(value) => handleSearch(value)}>\n            </SearchBar>\n            <Typography variant=\"h4\" className=\"titleTwo\">Frequently Asked Questions</Typography>\n            <Questions questionList={displayQuestions} />\n            <Typography variant=\"h4\" className=\"information\">\n                Still have questions?<br/>Contact us using online help<br/>Or call 123-456-7890\n            </Typography>\n        </Container>\n    )\n}\n","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/patientSettings/settings.js",["176"],"import React, {useState} from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { TextField } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\n\nimport {FormControl, \n        FormLabel,\n        Radio, \n        RadioGroup, \n        FormControlLabel} from '@material-ui/core';\nimport './settings.css'\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <Box p={3}>\n            <Typography>{children}</Typography>\n          </Box>\n        )}\n      </div>\n    );\n  }\n  \n  TabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n  };\n  \n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n  \n  const useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n      backgroundColor: theme.palette.background.paper,\n      height: '100vh'\n    },\n  }));\n\nexport default function PatientSettings(){\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n    const [phone, setPhone] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [currentPass, setCurrentPass] = useState(\"\");\n    const [newPass, setNewPass] = useState(\"\");\n    const [repeatPass, setRepeatPass] = useState(\"\");\n\n    const [notifyPhone, setNotifyPhone] = useState(\"Yes\");\n    const [notifyEmail, setNotifyEmail] = useState(\"Yes\");\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    }\n\n    const handleNotifyPhone = (event, newValue) => {\n        setNotifyPhone(newValue);\n    };\n\n    const handleNotifyEmail = (event, newValue) => {\n        setNotifyEmail(newValue);\n    };\n\n    const handleCurrentPass = (event, newValue) => {\n        setCurrentPass(newValue);\n    }\n\n    const handleNewPass = (event, newValue) => {\n        setNewPass(newValue);\n    }\n\n    const handleRepeatPass = (event, newValue) => {\n        setRepeatPass(newValue);\n    }\n\n    const handleNewPhone = (event, newValue) => {\n        setPhone(newValue);\n    }\n\n    const handleNewEmail = (event, newValue) => {\n        setEmail(newValue);\n    }\n\n    function updatePatientSettings() {\n        alert('you saved your phone number')\n    }\n    \n    return (\n        <Grid container>\n            <Grid item xs={1}></Grid>\n            <Grid item xs={10}>\n            <div className={classes.root}>\n                <Typography variant=\"h3\" align=\"center\" className=\"pageLabel\">Settings</Typography>\n                <div className=\"blueOutline\">\n                <AppBar position=\"static\" className=\"appBar\">\n                    <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\" className=\"tabAlign\">\n                    <Tab label=\"Security\" {...a11yProps(0)} className=\"tabs\"/>\n                    <Tab label=\"Notifications\" {...a11yProps(1)} className=\"tabs\"/>\n                    </Tabs>\n                </AppBar>\n                <TabPanel value={value} index={0} >\n                    <div className=\"panelStyling\">\n                        <TextField \n                            type=\"password\"\n                            id=\"password\"\n                            label=\"Enter current password\"\n                            defaultValue={currentPass}\n                            variant=\"outlined\"\n                            className=\"securityStyling\"\n                            onChange={handleCurrentPass}\n                            fullWidth\n                            required>\n                        </TextField>\n                        <TextField \n                            type=\"password\"\n                            id=\"password\"\n                            label=\"Enter new password\"\n                            defaultValue={newPass}\n                            variant=\"outlined\"\n                            className=\"securityStyling\"\n                            onChange={handleNewPass}                            \n                            fullWidth\n                            required>\n                        </TextField>\n                        <TextField \n                            type=\"password\"\n                            id=\"password\"\n                            label=\"Confirm new password\"\n                            defaultValue={repeatPass}\n                            variant=\"outlined\"\n                            className=\"securityStyling\"\n                            onChange={handleRepeatPass}\n                            fullWidth\n                            required>\n                        </TextField>\n                        <div className=\"saveButtonContainer\"><Button variant=\"outlined\" className=\"saveButton\" onClick={updatePatientSettings}>Save</Button></div>\n                    </div>\n                </TabPanel>\n                <TabPanel value={value} index={1}>\n                    <div className=\"panelStyling\">\n                        <div className=\"phoneNumberContainer\">\n                            <Typography variant=\"h5\" align=\"center\" className=\"phoneHeading\">Phone Number</Typography>\n                            <div className=\"settingsForm\">\n                                <div className=\"formHalf\">\n                                    <FormControl component=\"fieldset\" className=\"formControl\">\n                                        <FormLabel component=\"legend\">Notify Me?</FormLabel>\n                                        <RadioGroup row ria-label=\"phone notification\" name=\"phone notification\" className=\"formLabelShift\" value={notifyPhone} onChange={handleNotifyPhone}>\n                                            <FormControlLabel value=\"Yes\" control={<Radio />} label=\"Yes\" />\n                                            <FormControlLabel value=\"No\" control={<Radio />} label=\"No\" />\n                                        </RadioGroup>\n                                    </FormControl>\n                                </div>\n                                <div className=\"formHalf\">\n                                    <FormControl component=\"fieldset\" className=\"formControl\">\n                                        <FormLabel component=\"legend\" className=\"formLabel\">Set a new phone?</FormLabel>\n                                        <TextField \n                                            id=\"outlined-basic\"\n                                            label=\"714-123-4567\"\n                                            defaultValue={phone}\n                                            onChange={handleNewPhone}\n                                            variant=\"outlined\"\n                                            className=\"formLabelShift\"\n                                            fullWidth>\n                                        </TextField>\n                                    </FormControl>                                \n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"emailContainer\">\n                            <Typography variant=\"h5\" align=\"center\" className=\"emailHeading\">Email</Typography>\n                            <div className=\"settingsForm\">\n                                <div className=\"formHalf\">\n                                    <FormControl component=\"fieldset\" className=\"formControl\">\n                                        <FormLabel component=\"legend\">Notify Me?</FormLabel>\n                                        <RadioGroup row ria-label=\"email notification\" name=\"email notification\" className=\"formLabelShift\" value={notifyEmail} onChange={handleNotifyEmail}>\n                                            <FormControlLabel value=\"Yes\" control={<Radio />} label=\"Yes\" />\n                                            <FormControlLabel value=\"No\" control={<Radio />} label=\"No\" />\n                                        </RadioGroup>\n                                    </FormControl>\n                                </div>\n                                <div className=\"formHalf\">\n                                    <FormControl component=\"fieldset\" className=\"formControl\">\n                                        <FormLabel component=\"legend\" className=\"formLabel\">Set a new email?</FormLabel>\n                                        <TextField \n                                            id=\"outlined-basic\"\n                                            label=\"JMiller@gmail.com\"\n                                            defaultValue={email}\n                                            onChange={handleNewEmail}\n                                            variant=\"outlined\"\n                                            className=\"formLabelShift\">\n                                        </TextField>\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"saveButtonContainer\"><Button variant=\"outlined\" className=\"saveButton\" onClick={updatePatientSettings}>Save</Button></div>\n                    </div>\n                </TabPanel>\n            </div>\n            </div>\n            </Grid>\n            <Grid item xs={1}></Grid>\n      </Grid>\n    )\n}","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/homePage/patient/patientHome.js",["177","178","179"],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/FAQPage/question.js",[],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/loginForm/loginForm.js",["180","181","182","183","184","185","186","187","188","189","190","191","192"],"import React, { useState, useContext } from \"react\";\nimport { UserContext } from \"../../UserContext\";\nimport { Button } from '@material-ui/core';\nimport { Typography } from \"@material-ui/core\";\nimport { Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { Grid } from \"@material-ui/core\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport \"../signUpForm/signUpForm.css\"\nimport axios from \"axios\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    width: \"100%\",\n    marginTop: \"3%\"\n  },\n}));\n\nexport default function LoginForm(props){\n    const classes = useStyles();\n\n    // Handles login to initialize the userContext \n    const { user, setUser } = useContext(UserContext);\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [role, setRole] = useState(\"patient\");\n\n    const loginInfo = {\n      email: email,\n      password: password\n    }\n\n    const [loginLanding, setLoginLanding] = useState(props.loginLanding);\n    const toggleOne = () => {\n        setLoginLanding(false);\n        setLoginForm(true);\n    }\n\n    const handleEmailChange = (event) => {\n      setEmail(event.target.value)\n    }\n\n    const handlePasswordChange = (event) => {\n      setPassword(event.target.value)\n    }\n\n    const handleRoleChange = (event) => {\n      setRole(event.target.value);\n    }\n\n    const [loginForm, setLoginForm] = useState(props.loginForm);\n    //add toast\n    const toggleTwo = () => {\n      switch (role){\n        case \"patient\":\n          console.log(\"patient route\")\n          axios.post('http://localhost:5000/patients/login', loginInfo).then(res => {\n            setUser(res.data);\n          }).catch(err =>{\n            console.log(err);\n          })\n          break;\n        case \"pharmacist\":\n          console.log(\"pharm route\")\n          axios.post('http://localhost:5000/pharmacists/login', loginInfo).then(res => {\n            setUser(res.data);\n            }).catch(err =>{\n            console.log(err);\n          })\n          break;\n      }\n    }\n  \n\n    return(\n        <div className={classes.root} >\n          <Grid container justify=\"center\" spacing={3}>\n            <Grid item xs={1} md={3}></Grid>\n              {loginLanding === true ? \n              <Grid item xs={10} md={6} className=\"signupButton\">\n                <div className=\"buttonStyling\" onClick={toggleOne}>\n                  <Typography variant=\"h3\" className=\"textStyling textHolder\">Login</Typography>\n                  <Typography variant=\"h6\" className=\"textStyling\">(with Existing Account)</Typography>\n                </div>\n              </Grid>\n              : null}\n              {loginForm === true ? \n                <Grid item xs={10} md={6}>\n                <div className=\"formDiv\">\n                  <img src=\"https://picsum.photos/seed/picsum/200/300\" className=\"signupSuccessPhoto\"/>\n                  <TextField className=\"formStyling formMargin\" label=\"Email\" variant=\"outlined\" onChange = {handleEmailChange} required />\n                  <TextField className=\"formStyling formMargin\" type = 'password' label=\"Password\" variant=\"outlined\" onChange = {handlePasswordChange} required />\n                  <Button variant=\"outlined\" color=\"primary\" className=\"nextFullPassword\">Forgot Password?</Button>\n                  <Button disabled={email === \"\" || password === \"\" || role === \"\"} variant=\"contained\" color=\"primary\" className=\"nextFull nextFullLogin\" onClick={toggleTwo}>Login</Button>\n                </div>\n              </Grid>\n              : null}\n              <Grid item xs={1} md={3}></Grid>                 \n          </Grid>\n        </div>\n    )\n}","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/nav/nav.js",["193","194","195","196"],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/settings/settings.js",["197","198","199"],"import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport EditIcon from '@material-ui/icons/Edit';\nimport '../settings/settings.css'\n\nfunction switchNotificationPatient () {\n\tconsole.log('hello');\n\tdocument.getElementById('securityContainer-patient').style.display = 'none';\n\tdocument.getElementById('notificationsContainer').style.display = 'flex';\n}\n\nfunction switchSecurityPatient () {\n\tconsole.log('hello');\n\tdocument.getElementById('securityContainer-patient').style.display = 'flex';\n\tdocument.getElementById('notificationsContainer').style.display = 'none';\n}\n\nexport default function settings() {\n\treturn (\n    <div className = 'settingsContainer-patient'>\n      <div className = 'settingsTitle-patient'>\n        Settings\n      </div>\n\n      <div id = 'securityContainer-patient'>\n        <div className = 'titleBar-patient'>\n          <div className = 'securityTitle-patient'onClick = {switchSecurityPatient}>\n            Security\n          </div>\n          <div className = 'notificationTitle-patient' onClick = {switchNotificationPatient} >\n            Notification\n          </div>\n        </div>\n\n        <div className = 'passwordContainer'>\n          <div className = 'password' id = 'currentPW'>\n            Current Password: *****\n          </div>\n          <div className = 'password' id = 'newPW'>\n            New Password: *****\n          </div>\n          <div className = 'password' id = 'retypePW'>\n            Retype New Password: *****\n          </div>\n\n\t\t\t\t\t<div className = 'break'></div>\n\n          <div className = 'saveButton'>\n            Save\n          </div>\n        </div>\n      </div>\n\n\t\t\t<div id = 'notificationsContainer'>\n\t\t\t\t\t\t<div className = 'titleBar-patient'>\n\t\t          <div className = 'securityTitle-patient'onClick = {switchSecurityPatient}>\n\t\t            Security\n\t\t          </div>\n\t\t          <div className = 'notificationTitle-patient' onClick = {switchNotificationPatient} >\n\t\t            Notification\n\t\t          </div>\n\t\t        </div>\n\n\t\t\t\t\t\t<div className = 'folderBorder-patient'>\n\t\t\t\t\t\t\t<div className = 'whiteBorder-patient'>\n\t\t\t          <div className = 'notificationSection'>\n\t\t\t              <div className = 'insideTitle-patient'>\n\t\t\t                Phone Number\n\t\t\t              </div>\n\t\t\t              <div className = 'notifyMe'>\n\t\t\t                Notify Me?\n\t\t\t              </div>\n\t\t\t\t\t\t\t\t\t\t<div className = 'yesContainer'>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'yes'>\n\t\t\t\t\t\t\t\t\t\t\tYes\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'yesBox'> </div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className = 'noContainer'>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'no'>\n\t\t\t\t\t\t\t\t\t\t\tNo\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t              \t<div className = 'noBox'> </div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className = 'infoContainer-patient'>\n\t\t\t\t              <div className = 'infoBox-patient'>\n\t\t\t\t                Call me at:\n\t\t\t\t              </div>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'phone-patient_email_Container-patient'>\n\t\t\t\t\t              <div className = 'phone-patient'>\n\t\t\t\t\t                (408)123-4567\n\t\t\t\t\t              </div>\n\t\t\t\t\t              <div className = 'editContainer-patient'>\n\t\t\t\t\t                <EditIcon/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className = 'edit-patient'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t              </div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t          </div>\n\t\t\t\t\t\t\t\t<div className = 'notificationSection'>\n\t\t\t              <div className = 'insideTitle-patient'>\n\t\t\t                Email\n\t\t\t              </div>\n\t\t\t              <div className = 'notifyMe'>\n\t\t\t                Notify Me?\n\t\t\t              </div>\n\t\t\t\t\t\t\t\t\t\t<div className = 'yesContainer'>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'yes'>\n\t\t\t\t\t\t\t\t\t\t\tYes\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'yesBox'> </div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className = 'noContainer'>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'no'>\n\t\t\t\t\t\t\t\t\t\t\tNo\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t              \t<div className = 'noBox'> </div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className = 'infoContainer-patient'>\n\t\t\t\t              <div className = 'infoBox-patient'>\n\t\t\t\t                Email me at:\n\t\t\t\t              </div>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'phone-patient_email_Container-patient'>\n\t\t\t\t\t              <div className = 'email-patient'>\n\t\t\t\t\t                innovationlab@email.com\n\t\t\t\t\t              </div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className = 'editContainer-patient'>\n\t\t\t\t\t                <EditIcon/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className = 'edit-patient'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t              </div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t          </div>\n\n\t\t\t\t\t\t\t\t<div className = 'break'></div>\n\n\t\t\t\t\t\t\t\t<div className = 'saveButton'>\n\t\t\t            Save\n\t\t\t          </div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n      </div>\n    </div>\n\t);\n}\n",["200","201"],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/patientNav/patientNav.js",["202","203","204"],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/pharmContact/pharmContact.js",[],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/patientSchedule/patientSchedule.js",["205","206","207","208","209","210"],"import React, {useState, useEffect, useContext} from \"react\";\nimport { UserContext } from \"../../UserContext\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ScheduleEvent from \"../../components/scheduleEvent/scheduleEvent\";\nimport './patientSchedule.css';\n\n\nexport default function PatientSchedule(){\n\n    const {user, setUser} = useContext(UserContext);\n    const getCurrentDay = (day) => {\n        let numDate = day.substr(-2);\n        let newDate = new Date(day);\n        switch (newDate.getDay()){\n            case 0:\n                return [\"Mo\", numDate, \"Monday\"];\n            case 1:\n                return [\"Tu\", numDate, \"Tuesday\"];\n            case 2: \n                return [\"We\", numDate, \"Wednesday\"];\n            case 3:\n                return [\"Th\", numDate, \"Thursday\"];\n            case 4:\n                return [\"Fr\", numDate, \"Friday\"];\n            case 5:\n                return [\"Sa\", numDate, \"Saturday\"];\n            case 6:\n                return [\"Su\", numDate, \"Sunday\"];\n        }\n    }\n    const [currentDay, setCurrentDay] = useState(getCurrentDay(new Date().toISOString().slice(0,10))[2]);\n    const [days, setDays] = useState([]);\n    const [render, setRender] = useState(false);\n    const [earliest, setEarliest] = useState(days[0]);\n    const [todaysSchedule, setTodaysSchedule] = useState([]);\n\n    let week = [];\n    useEffect(() => {\n        let curr = new Date(new Date()); // get current date  \n        let first = curr.getDate() - curr.getDay(); // First day is the  day of the month - the day of the week  \n        let firstday = new Date(curr.setDate(first)).toISOString().slice(0,10); \n        week = [firstday];\n        for (let i=0; i<7; i++){\n            week.push(new Date(curr.setDate(curr.getDate()+1)).toISOString().slice(0,10));\n        }\n        setDays(week);\n        setRender(true);\n    }, []);    \n\n    \n\n    const getCurrentMonth = (month) => {\n        switch (month) {\n            case 0:\n                return \"January\";\n            case 1:\n                return \"February\";\n            case 2: \n                return \"March\";\n            case 3:\n                return \"April\";\n            case 4:\n                return \"May\";\n            case 5:\n                return \"June\";\n            case 6:\n                return \"July\";\n            case 7:\n                return \"August\";\n            case 8:\n                return \"September\";\n            case 9:\n                return \"October\";\n            case 10:\n                return \"November\";\n            case 11:\n                return \"December\";\n        }\n    }\n\n    // left arrow, decrement all current dates by one week\n    const handleNextDay = () => {\n        let week = days;\n        let newDate = new Date(week[week.length-1]);\n        let nextDay = new Date(newDate.getTime()+86400000).toISOString().slice(0,10);\n        week.push(nextDay);\n        week.shift();\n        setDays(week);\n        setEarliest(days[0]);\n    }\n    // right arrow, increment all current dates by one week\n    const handlePrevDay = () => {\n        let week = days;\n        let newDate = new Date(week[0]);\n        let prevDay = new Date(newDate.setDate(newDate.getDate()-1)).toISOString().slice(0,10);\n        week.pop();\n        week.unshift(prevDay);\n        setDays(week);\n        setEarliest(days[0]);\n    }\n\n    const getDayIndex = (dayID) => {\n        switch (dayID){\n            case \"dayOne\":\n                return 0;\n            case \"dayTwo\":\n                return 1;\n            case \"dayThree\":\n                return 2;\n            case \"dayFour\":\n                return 3;\n            case \"dayFive\":\n                return 4;\n            case \"daySix\":\n                return 5;\n            case \"daySeven\":\n                return 6;\n        }\n    }\n\n    const dayMonthYear = (date) => {\n        let dd = String(date.getDate());\n        let mm = String(date.getMonth());\n        let yy = String(date.getFullYear());\n        let dateString = `${mm}/${dd}/${yy}`;\n        return dateString;\n    }\n\n    const formatTime = (date) => {\n        let hours = date.getHours();\n        let minutes = date.getMinutes();\n        let ampm = hours >= 12 ? 'pm' : 'am';\n        hours = hours % 12;\n        hours = hours ? hours : 12;\n        minutes = minutes < 10 ? '0'+ minutes: minutes;\n        let strTime = hours + ':' + minutes + ' ' + ampm;\n        return strTime\n    }\n\n    const getTodaysSchedule = (selected) => {\n        let selectedDate = new Date(selected); //get new date object of a date passed into function\n        let scheduleArr = []; // initialized schedule array\n        for (let i = 0; i < user.events.length; i++){ // iter thru events\n            if (dayMonthYear(selectedDate) ===  dayMonthYear(new Date(user.events[i].notifyAt))){ // compare the selectedDate with date of notifyAt \n                scheduleArr.push(user.events[i]); //push into schedule array\n            }\n        }\n        return scheduleArr;\n    }\n\n    const handleNewCurrentDay = (event) => {\n        let dayIndex = event.target.id; // get day index even if day changes\n        let dayString = days[getDayIndex(dayIndex)]; // get the current date object\n        setCurrentDay(getCurrentDay(dayString)[2]); // change current date to what was selected\n        console.log(currentDay)\n        setTodaysSchedule(getTodaysSchedule(dayString)); // change the schedule output based on the selectedDay\n        console.log(todaysSchedule);\n    }\n\n    return(\n        render === true ? \n        <Grid container className=\"outerScheduleContainer\">\n            <Grid item xs={1}></Grid>\n            <Grid container xs={10} justify=\"center\" direction=\"column\" className=\"gridStyling\">\n                <Typography variant=\"h3\" align=\"center\" className=\"monthStyling\">{getCurrentMonth(new Date(days[0]).getMonth())}</Typography>\n                <Grid className=\"carouselStyling\" direction=\"row\">\n                    <ul className=\"weekDisplay\">\n                        <li className=\"weekDayDisplay arrowIcon\" onClick={handlePrevDay}>&#60;</li>\n                        <li className=\"weekDayDisplay\">\n                                <div className=\"dateContainer\">\n                                    <Typography variant=\"h3\" align=\"center\" className=\"nameDate\">{getCurrentDay(days[0])[0]}</Typography>\n                                    <Typography variant=\"h5\" align=\"center\" className=\"numDate\" id=\"dayOne\" onClick={handleNewCurrentDay}>{getCurrentDay(days[0])[1]}</Typography>\n                                </div>\n                        </li>\n                        <li className=\"weekDayDisplay\">\n                                <div className=\"dateContainer\">\n                                    <Typography variant=\"h3\" align=\"center\" className=\"nameDate\">{getCurrentDay(days[1])[0]}</Typography>\n                                    <Typography variant=\"h5\" align=\"center\" className=\"numDate\" id=\"dayTwo\" onClick={handleNewCurrentDay}>{getCurrentDay(days[1])[1]}</Typography>\n                                </div>\n                        </li>     \n                        <li className=\"weekDayDisplay\">\n                                <div className=\"dateContainer\">\n                                    <Typography variant=\"h3\" align=\"center\" className=\"nameDate\">{getCurrentDay(days[2])[0]}</Typography>\n                                    <Typography variant=\"h5\" align=\"center\" className=\"numDate\" id=\"dayThree\" onClick={handleNewCurrentDay}>{getCurrentDay(days[2])[1]}</Typography>\n                                </div>\n                        </li>     \n                        <li className=\"weekDayDisplay\">\n                                <div className=\"dateContainer\">\n                                    <Typography variant=\"h3\" align=\"center\" className=\"nameDate\">{getCurrentDay(days[3])[0]}</Typography>\n                                    <Typography variant=\"h5\" align=\"center\" className=\"numDate\" id=\"dayFour\" onClick={handleNewCurrentDay}>{getCurrentDay(days[3])[1]}</Typography>\n                                </div>\n                        </li>     \n                        <li className=\"weekDayDisplay\">\n                                <div className=\"dateContainer\">\n                                    <Typography variant=\"h3\" align=\"center\" className=\"nameDate\">{getCurrentDay(days[4])[0]}</Typography>\n                                    <Typography variant=\"h5\" align=\"center\" className=\"numDate\" id=\"dayFive\" onClick={handleNewCurrentDay}>{getCurrentDay(days[4])[1]}</Typography>\n                                </div>\n                        </li>     \n                        <li className=\"weekDayDisplay\">\n                                <div className=\"dateContainer\">\n                                    <Typography variant=\"h3\" align=\"center\" className=\"nameDate\">{getCurrentDay(days[5])[0]}</Typography>\n                                    <Typography variant=\"h5\" align=\"center\" className=\"numDate\" id=\"daySix\" onClick={handleNewCurrentDay}>{getCurrentDay(days[5])[1]}</Typography>\n                                </div>\n                        </li>     \n                        <li className=\"weekDayDisplay\">\n                                <div className=\"dateContainer\">\n                                    <Typography variant=\"h3\" align=\"center\" className=\"nameDate\">{getCurrentDay(days[6])[0]}</Typography>\n                                    <Typography variant=\"h5\" align=\"center\" className=\"numDate\" id=\"daySeven\" onClick={handleNewCurrentDay}>{getCurrentDay(days[6])[1]}</Typography>\n                                </div>\n                        </li>                             \n                        <li className=\"weekDayDisplay arrowIcon\" onClick={handleNextDay}>&#62;</li>\n                    </ul>\n                </Grid>\n                <Grid className=\"dayContainer\">\n                    <Typography variant=\"h3\" align=\"center\" className=\"dayStyling\">{currentDay.toLocaleString('en-us', {weekday:'long'})}</Typography>\n                    <div className=\"scheduleComponents\">\n                        <br/>\n                        {todaysSchedule.length === 0 ? <Typography variant=\"h4\" color=\"primary\" align=\"center\">No Infusions Today</Typography> : todaysSchedule.map((item => {\n                            return <ScheduleEvent time={formatTime(new Date(item.notifyAt))} name={item.title}/>\n                        }))}\n                    </div>\n                </Grid>\n            </Grid>\n            <Grid item xs={1}></Grid>\n        </Grid>\n        : \"loading...\"\n    )\n}","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/TutorialPage/tutorial.js",["211","212","213","214","215","216","217","218","219"],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/pharmSettings/pharmSettings.js",["220","221","222"],"import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport EditIcon from '@material-ui/icons/Edit';\nimport '../pharmSettings/pharmSettings.css'\n\nfunction switchAbout () {\n\tconsole.log('hello');\n\tdocument.getElementById('securityContainer').style.display = 'none';\n\tdocument.getElementById('aboutUsContainer').style.display = 'flex';\n}\n\nfunction switchSecurity () {\n\tconsole.log('hello');\n\tdocument.getElementById('securityContainer').style.display = 'flex';\n\tdocument.getElementById('aboutUsContainer').style.display = 'none';\n}\n\nexport default function settings() {\n\treturn (\n    <div className = 'settingsContainer'>\n      <div className = 'settingsTitle'>\n        Settings\n      </div>\n\n      <div id = 'securityContainer'>\n        <div className = 'titleBar'>\n          <div className = 'securityTitle'onClick = {switchSecurity}>\n            Security\n          </div>\n          <div className = 'aboutUsTitle' onClick = {switchAbout} >\n            About Us\n          </div>\n        </div>\n\n        <div className = 'passwordContainer'>\n          <div className = 'password' id = 'currentPW'>\n            Current Password: *****\n          </div>\n          <div className = 'password' id = 'newPW'>\n            New Password: *****\n          </div>\n          <div className = 'password' id = 'retypePW'>\n            Retype New Password: *****\n          </div>\n\n\t\t\t\t\t<div className = 'break'></div>\n\n          <div className = 'saveButton'>\n            Save\n          </div>\n        </div>\n      </div>\n\n\t\t\t<div id = 'aboutUsContainer'>\n\t\t\t\t\t\t<div className = 'titleBar'>\n\t\t          <div className = 'securityTitle'onClick = {switchSecurity}>\n\t\t            Security\n\t\t          </div>\n\t\t          <div className = 'aboutUsTitle' onClick = {switchAbout} >\n\t\t            About Us\n\t\t          </div>\n\t\t        </div>\n\n\t\t\t\t\t\t<div className = 'folderBorder'>\n\t\t\t\t\t\t\t<div className = 'whiteBorder'>\n\t\t\t          <div className = 'aboutUsSection'>\n\t\t\t              <div className = 'insideTitle'>\n\t\t\t                Displayed Pharmacy Photo\n\t\t\t              </div>\n\n\t\t\t\t\t\t\t\t\t\t<div className = 'infoContainer'>\n\t\t\t\t              <div className = 'photoBox'>\n\t\t\t\t                <div className = 'photo'> Photo </div>\n\t\t\t\t              </div>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'editContainer'>\n\t\t\t\t\t\t\t\t\t\t\t\t<EditIcon/>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className = 'edit'>\n\t\t\t\t\t\t\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t          </div>\n\n\t\t\t\t\t\t\t\t<div className = 'aboutUsSection'>\n\t\t\t              <div className = 'insideTitle'>\n\t\t\t                Displayed Pharmacy Address\n\t\t\t              </div>\n\t\t\t\t\t\t\t\t\t\t<div className = 'infoOutline'>\n\t\t\t\t              <div className = 'informationBox'>\n\t\t\t\t                Pharmacy Address:\n\t\t\t\t              </div>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'address_Container'>\n\t\t\t\t\t              <div className = 'addressStreet'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t123 Pivot Avenue\n\t\t\t\t\t              </div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className = 'addressState'>\n\t\t\t\t\t\t\t\t\t\t\t\t\tCalifornia, 92612\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className = 'addressCountry'>\n\t\t\t\t\t\t\t\t\t\t\t\t\tUnited States\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'editContainer'>\n\t\t\t\t\t\t\t\t\t\t\t\t<EditIcon/>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className = 'edit'>\n\t\t\t\t\t\t\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t          </div>\n\n\t\t\t\t\t\t\t\t<div className = 'aboutUsSection'>\n\t\t\t              <div className = 'insideTitle'>\n\t\t\t                Displayed Pharmacy Name\n\t\t\t              </div>\n\t\t\t\t\t\t\t\t\t\t<div className = 'infoOutline'>\n\t\t\t\t              <div className = 'informationBox'>\n\t\t\t\t                Pharmacy Name:\n\t\t\t\t              </div>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'nameContainer'>\n\t\t\t\t\t\t\t\t\t\t\t\tLorem ipsum dolor\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'editContainer'>\n\t\t\t\t\t\t\t\t\t\t\t\t<EditIcon/>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className = 'edit'>\n\t\t\t\t\t\t\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t          </div>\n\n\t\t\t\t\t\t\t\t<div className = 'aboutUsSection2'>\n\t\t\t\t\t\t\t\t\t\t<div className = 'insideTitle'>\n\t\t\t\t\t\t\t\t\t\t\tDisplayed Pharmacy Contact Information\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className = 'infoOutline2'>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'informationBox2'>\n\t\t\t\t\t\t\t\t\t\t\t\tPharmacy Phone Number:\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'nameContainer'>\n\t\t\t\t\t\t\t\t\t\t\t\tLorem ipsum dolor\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'editContainer'>\n\t\t\t\t\t\t\t\t\t\t\t\t<EditIcon/>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className = 'edit'>\n\t\t\t\t\t\t\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className = 'infoOutline2'>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'informationBox2'>\n\t\t\t\t\t\t\t\t\t\t\t\tPharmacy Email:\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'nameContainer'>\n\t\t\t\t\t\t\t\t\t\t\t\tLorem ipsum dolor\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className = 'editContainer'>\n\t\t\t\t\t\t\t\t\t\t\t\t<EditIcon/>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className = 'edit'>\n\t\t\t\t\t\t\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n      </div>\n    </div>\n\t);\n}\n","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/scheduleEvent/scheduleEvent.js",["223","224"],"import React from \"react\";\nimport \"./scheduleEvent.css\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default function ScheduleEvent(props){\n    return(\n        <div className=\"scheduleItem\">\n            <div className=\"infusionTime\">{props.time}</div>\n            <div className=\"infusionName\">{props.name}</div>\n        </div>\n    )\n}","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/notifications/notifications.js",["225"],"import React from \"react\";\nimport './notifications.css';\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\n\nexport default function Notification(props){\n    return(\n        <Card variant=\"outlined\" className=\"cardContainer\">\n            <CardContent className=\"cardContents\">\n                <div className=\"leftCard\">\n                    <Typography variant=\"h6\" color=\"secondary\" align=\"left\">{props.title}</Typography>\n                    <Typography variant=\"subtitle2\" align=\"left\">{props.description}</Typography>\n                </div>\n            </CardContent>\n        </Card>\n    )\n}\n","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/patientProfile/profile.js",["226","227","228"],"import React, {useState, useEffect} from \"react\";\nimport \"./profile.css\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default function PatientProfile(){\n    return(\n        <Grid container className=\"profileContainer\">\n            <Grid item xs={2}></Grid>\n            <Grid item xs={8} justify=\"center\">\n                <div className=\"patientProfileInfo\">\n                    <Typography align=\"center\" variant=\"h3\" className=\"patientName\">Jasmine Miller</Typography>\n                    <Typography align=\"center\" variant=\"h4\">Pharmacy: </Typography>\n                    <Typography align=\"center\" variant=\"h4\">Phone Number: </Typography>\n                </div>\n                <div className=\"infusionSummaryContainer\">\n                    <Typography align=\"center\" variant=\"h4\">Summary of Infusion</Typography>\n                    <div className=\"infusionSummary\">\n                        Notes from pharmacist here\n                    </div>\n                </div>\n            </Grid>\n            <Grid item xs={2}></Grid>\n        </Grid>\n    )\n}","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/pharmTutorialList/pharmTutorialList.js",["229","230","231","232","233","234"],"import React, { useEffect, useState, useCallback } from 'react';\nimport { makeStyles, useTheme, withTheme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport { useHistory } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n    box:{\n        width :'100%',\n        display: 'inline-block',\n    },\n    root: {\n        display:'inline-block',\n        // float:'left',\n        margin:'2.5vw',\n        backgroundColor: '#3F51B5',\n        width: \"45vw\",\n        height: \"216px\",\n        marginTop: '33px',\n        borderRadius: 20,\n        color: 'white',\n        backgroundColor: '#00529b',\n    },\n    details: {\n        verticalAlign:'top',\n        display: 'inline-block',\n        width: '60%',\n    },\n    content: {\n        flex: '1 0 auto',\n\n        marginTop: 25,\n        marginLeft: 3,\n    },\n    cover: {\n        marginTop:'4%',\n        width: '20%',\n        height: 150,\n        display:'inline-block',\n        margin: 'auto 31px',\n        marginRight: 0,\n    },\n    summary: {\n        //marginBottom: 30,\n        overflowY: 'hidden',\n        height: '80px',\n    },\n    playIcon: {\n        height: 38,\n        width: 38,\n    },\n    btn: {\n        display:'inline-block',\n        verticalAlign:'top',\n        fontSize: 40,\n        width:'10%',\n        marginTop:'80px',\n    }\n}));\nexport default function PharmTutorialList(){\n    const classes = useStyles();\n    const theme = useTheme();\n    const history = useHistory();\n    const [list, setList] = useState([]);\n    //const initList = async () => {\n\n    // const tutorials = [{\n    //   id: 0,\n    //   name: 'Infusion A',\n    //   summary: `Lorem ipsum dolor sit amet`,\n    //   duration: '20 min',\n    //   img: 'https://picsum.photos/seed/picsum/150/150',\n    // }, {\n    //   id: 1,\n    //   name: 'Infusion B'\n    //   summary: 'Summary B',\n    //   duration: '15 min',\n    //   img: 'https://picsum.photos/seed/picsum/150/150',\n    // }, {\n    //   id: 2,\n    //   name: 'Infusion C',\n    //   summary: 'Summary C',\n    //   duration: '17 min',\n    //   img: 'https://picsum.photos/seed/picsum/150/150',\n    // }] \n\n    //};\n    useEffect(async () => {\n        const response = await fetch('http://localhost:5000/tutorials/all');\n        const tutorials = await response.json();\n        setList(tutorials)\n    }, [])\n\n\n    const handleChange = (id) => {\n        history.push('/Tutorial/' + id);\n    }\n\n        return <div className={classes.box}>{\n            list.map((item) => {\n                return  <Card onClick={() => handleChange(item._id)} className={classes.root}>\n                            <CardMedia\n                                className={classes.cover}\n                                image={item.img}\n                                title=\"Live from space album cover\"\n                            />\n                            <div className={classes.details}>\n                                <CardContent className={classes.content}>\n                                    <Typography component=\"h5\" variant=\"h5\">\n                                        {item.name}\n                                    </Typography>\n                                    <Typography className={classes.summary} variant=\"subtitle1\" >\n                                        {item.description}\n                                    </Typography>\n                                    <Typography variant=\"subtitle1\" >\n                                        Duration: {item.duration}\n                                    </Typography>\n                                </CardContent>\n                            </div>\n                            <ArrowForwardIosIcon className={classes.btn}></ArrowForwardIosIcon>\n                        </Card>\n            })\n\n        }</div>\n}","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/pharmAssignPage/pharmAssign.js",["235","236","237","238","239","240","241","242","243","244","245","246"],"import React, { useState, useEffect, useContext } from \"react\";\nimport {UserContext} from \"../../UserContext\";\nimport {PatientContext} from \"../../PatientContext\";\nimport { createMuiTheme, responsiveFontSizes, ThemeProvider } from '@material-ui/core/styles';\nimport { Grid } from \"@material-ui/core\"\nimport { Typography } from \"@material-ui/core\"\nimport ScheduleEvent from \"../../components/scheduleEvent/scheduleEvent\";\nimport { makeStyles, useTheme, withTheme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardTimePicker,\n    KeyboardDatePicker,\n  } from '@material-ui/pickers';\nimport axios from 'axios';\nimport './pharmAssign.css'\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: { flexGrow: 1, },\n    box: {\n        display: 'flex',\n        backgroundColor: '#3F51B5',\n        width: \"90%\",\n        height: \"200px\",\n        margin: '0 auto',\n        marginTop: '33px',\n        borderRadius: 20,\n        color: 'white',\n        backgroundColor: '#00529b',\n        textAlign: 'left',\n        fontSize: '14px',\n    },\n    details: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: '60%',\n    },\n    content: {\n        flex: '1 0 auto',\n        marginTop: 5,\n        marginLeft: 3,\n    },\n    cover: {\n        width: 100,\n        height: 100,\n        margin: 'auto 31px',\n        marginRight: 0,\n    },\n    summary: {\n        //marginBottom: 30,\n        overflowY: 'hidden',\n    },\n    playIcon: {\n        height: 38,\n        width: 38,\n    },\n}));\n\n\nlet theme = createMuiTheme();\ntheme = responsiveFontSizes(theme);\n\nconst TutorialsList = ()=>{\n    const {patient, setPatient} = useContext(PatientContext);\n    const classes = useStyles();\n   return <>{patient !== null ? patient.infusionArray.map((item) => {\n        return <Card className={classes.box}>\n            <CardMedia\n                className={classes.cover}\n                image={item.tutorials[0].video.thumbnail}\n                title=\"Live from space album cover\"\n            />\n            <div className={classes.details}>\n                <CardContent className={classes.content}>\n                    <Typography component=\"h6\" variant=\"h6\">\n                        {item.name}\n                    </Typography>\n                    <Typography className={classes.summary} variant=\"subtitle1\" >\n                        {item.description}\n                    </Typography>\n                    <Typography variant=\"subtitle1\" >\n                        Duration: {item.duration}\n                    </Typography>\n                </CardContent>\n            </div>\n            <ArrowForwardIosIcon className=\"arrowIcon\" style={{border:'none'}}></ArrowForwardIosIcon>\n        </Card>\n    }):\"Loading...\"}</>\n}\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n  });\n\nexport default function PharmAssign() {\n    const classes = useStyles();\n    const {user, setUser} = useContext(UserContext); // pharmacist account context\n    const {patient, setPatient} = useContext(PatientContext); // current patient in focus, context\n    const [todaysSchedule, setTodaysSchedule] = useState([]); // today's schedule for the patient\n    // Dialog States\n    const [openEventForm, setOpenEventForm] = useState(false);\n    const [openTutorialForm, setOpenTutorialForm] = useState(false);\n    const [openTutorialFormTwo, setOpenTutorialFormTwo] = useState(false);\n    const [openDeleteEventForm, setOpenDeleteEventForm] = useState(false);\n    // Delete Event States\n    const [eventId, setEventId] = useState(\"\");\n    // Add Event States\n    const [eventTitle, setEventTitle] = useState(\"\");\n    const [eventDescription, setEventDescription] = useState(\"\");\n    const [selectedDate, setSelectedDate] = useState(new Date());\n    const [selectedTime, setSelectedTime] = useState(new Date());\n    const [patientEvents, setPatientEvents] = useState([]);\n    // Tutorial States\n    const [tutorialName, setTutorialName] = useState(\"\");\n    const [tutorialDescription, setTutorialDescription] = useState(\"\");\n    const [tutorialDuration, setTutorialDuration] = useState(\"\");\n    const [tutorialPlaylist, setTutorialPlaylist] = useState([\n        {\n        \"name\": \"\", \n        \"description\": \"\", \n        \"pharmacistNotes\": \"\", \n        \"infusionNotes\": \"\", \n        \"stepList\": \"\", \n        \"video\": \n            {\"url\": \"\", \"order\":\"\", \"videoDescription\":\"\", \"thumbnail\":\"\"}\n        },]);\n    const [gridBools, setGridBools] = useState([\"false\"])\n\n    const theme = useTheme();\n\n    const formatTime = (date) => {\n        let hours = date.getHours();\n        let minutes = date.getMinutes();\n        let ampm = hours >= 12 ? 'pm' : 'am';\n        hours = hours % 12;\n        hours = hours ? hours : 12;\n        minutes = minutes < 10 ? '0'+ minutes: minutes;\n        let strTime = hours + ':' + minutes + ' ' + ampm;\n        return strTime\n    }\n    const dayMonthYear = (date) => {\n        let dd = String(date.getDate());\n        let mm = String(date.getMonth()+1);\n        let yy = String(date.getFullYear());\n        let dateString = `${mm}/${dd}/${yy}`;\n        return dateString;\n    }\n    const getTodaysSchedule = () => {\n        let today = new Date();\n        let scheduleArr = [];\n        for (let i = 0; i < patient.events.length; i++){\n            if (dayMonthYear(today) ===  dayMonthYear(new Date(patient.events[i].notifyAt))){\n                scheduleArr.push(patient.events[i]);\n            }\n        }\n        return scheduleArr;\n    }\n\n    /*\n    * Event handlers for event object state\n    */\n    const handleTitleChange = (event) => {\n        setEventTitle(event.target.value);\n    }\n    const handleDescriptionChange = (event) => {\n        setEventDescription(event.target.value);\n    }\n    const handleSelectedDate = (date) => {\n        console.log(date)\n        console.log(date.getDate())\n        setSelectedDate(date);\n    }\n    const handleSelectedTime = (date) => {\n        setSelectedTime(date);\n    }\n    const handleTutorialName = (event) => {\n        setTutorialName(event.target.value);\n    }\n    const handleTutorialDescription = (event) => {\n        setTutorialDescription(event.target.value);\n    }\n    const handleTutorialDuration = (event) => {\n        setTutorialDuration(event.target.value);\n    }\n    const handleNewEventId = (event) => {\n        setEventId(event.target.value);\n    }\n    const handleChangeInput = (index, event) => {\n        const values = [...tutorialPlaylist];\n        if (event.target.name === \"url\" || event.target.name === \"videoDescription\"){\n            values[index][\"video\"][event.target.name] = event.target.value\n        }\n        else {values[index][event.target.name] = event.target.value;}\n        setTutorialPlaylist(values);\n    }\n\n    const handleEventForm = () => {\n        setOpenEventForm(!openEventForm);\n    }\n    const handleTutorialForm = () => {\n        setOpenTutorialForm(!openTutorialForm);\n    }\n    const handleTutorialFormTwo = () => {\n        setOpenTutorialForm(!openTutorialForm);\n        setOpenTutorialFormTwo(!openTutorialFormTwo);\n    }\n    const handleDeleteEventForm = () => {\n        setOpenDeleteEventForm(!openDeleteEventForm);\n    }\n    const handleAddPatientEvent = () => {\n        let dateObj = (`${dayMonthYear(selectedDate)} ${selectedTime.toLocaleTimeString(navigator.language, {\n            hour: '2-digit',\n            minute:'2-digit'\n          })}`);\n        let patientEventsArr = patient.events;  \n        const event = {\n            \"events\": [\n                {\n                title: eventTitle,\n                start: dateObj,\n                end: dateObj,\n                notifyAt: dateObj,\n                description: eventDescription\n                }\n            ]}\n        patientEventsArr.map(item => {\n            event[\"events\"].unshift(item);\n        })  \n        axios.post(`http://localhost:5000/patients/updateEvents/${patient._id}`, event).then(res => {\n        })\n        handleEventForm();\n    }\n    const handleDeletePatientEvent = () => {\n        let patientEventsArr = patient.events;\n        const event = {\"events\": []}\n        patientEventsArr.map(item => {\n            if (item._id !== eventId){\n                event[\"events\"].push(item);\n            }\n        })\n        axios.post(`http://localhost:5000/patients/updateEvents/${patient._id}`, event).then(res => {\n        })\n        handleDeleteEventForm();\n    }\n\n    const parseThumbnail = (url) => {\n        let https = url.slice(0, 8); // https://\n        let site = `img.youtube.com/vi/`; // img.youtube.com/vi/\n        let keyStartIndex = url.length-11;\n        let videoKey = url.slice(keyStartIndex); // 11 char key\n        let thumbnailRes = '/maxresdefault.jpg';\n\n        return `${https}${site}${videoKey}${thumbnailRes}`;\n    }\n\n    const handleAddTutorialField = () => {\n        setTutorialPlaylist([...tutorialPlaylist, \n            {\"name\": \"\", \"description\": \"\", \"pharmacistNotes\": \"\", \"infusionNotes\": \"\", \n            \"stepList\": \"\", \n            \"video\": \n                {\"url\": \"\", \"order\":\"\", \"videoDescription\":\"\", \"thumbnail\":\"\"}\n            },])\n    }\n\n    const handleRemoveFields = (index) => {\n        console.log(index);\n        const values = [...tutorialPlaylist];\n        values.splice(index, 1);\n        setTutorialPlaylist(values);\n    }\n\n    const toggleGridBools = (index) => {\n        const values = [...gridBools];\n        values[index] = !values[index];\n        setGridBools(values);\n    }\n\n    const handleAddPatientTutorial = () => {\n        const values = { \"infusionArray\": [{\n            name: tutorialName,\n            description: tutorialDescription,\n            duration: tutorialDuration,\n            tutorials: [...tutorialPlaylist]\n            }]\n        };\n        for (let i = 0; i < values[\"infusionArray\"][0][\"tutorials\"].length; i++){\n            values[\"infusionArray\"][0][\"tutorials\"][i][\"stepList\"] = values[\"infusionArray\"][0][\"tutorials\"][i][\"stepList\"].split(';');\n            values[\"infusionArray\"][0][\"tutorials\"][i][\"video\"][\"order\"] = i;\n            values[\"infusionArray\"][0][\"tutorials\"][i][\"video\"][\"thumbnail\"] = parseThumbnail(values[\"infusionArray\"][0][\"tutorials\"][i][\"video\"][\"url\"]);\n        }\n        console.log(values);\n        axios.post(`http://localhost:5000/patients/updateInfusion/${patient._id}`, values).then(res => {\n            console.log(res);\n        });\n    }\n\n    useEffect(() => {\n        setTodaysSchedule(getTodaysSchedule);\n        if (patient.hasOwnProperty('events')){\n            setPatientEvents(patient.events);\n        }\n        else {\n            setPatientEvents([]);\n        }\n    },[])\n\n    return (\n        <div className={classes.root}>\n            <ThemeProvider theme={theme}>\n                <Grid container justify=\"center\" spacing={0}>\n                    <Grid item xs={8} sm={8} md={5} className=\"\">\n                        <div>\n                            <div style={{ textAlign: \"left\", height: '30vh' }}>\n                                <br />\n                                <Typography variant=\"h2\">{patient !== null ? `${patient.firstName} ${patient.lastName}` : \"No User Selected\"}</Typography>\n                                <br />\n                                <br />\n                                <br />\n                                <Typography variant=\"h6\">Phone: {patient !== null ? `(${patient.phoneNumber.slice(0,3)}) ${patient.phoneNumber.slice(3,6)}-${patient.phoneNumber.slice(6)}` : \"Loading...\"}</Typography>\n                                <Typography variant=\"h6\">Email: {patient !== null ? patient.email : \"Loading...\"}</Typography>\n\n                            </div>\n                            <div className=\"\">\n                                <div className=\"notificationLabel\">\n                                    <Typography variant=\"h4\">\n                                        Today's Schedule <Button variant=\"outlined\" className=\"addMinusBtns\" onClick={handleEventForm}><AddIcon/></Button>\n                                        <Button variant=\"outlined\" className=\"addMinusBtns\" onClick={handleDeleteEventForm}><RemoveIcon/></Button>\n                                    </Typography>                                \n                                </div>\n                                <div className=\"notificationContainer\">\n                                {todaysSchedule.length === 0 ? <Typography variant=\"h4\" align=\"center\" className=\"noInfusions\">No Infusions Today</Typography> \n                                : todaysSchedule.map((item => {\n                                    return <ScheduleEvent time={formatTime(new Date(item.notifyAt))} name={item.title}/>\n                                }))}\n                                </div>\n                                <Dialog\n                                    open={openEventForm}\n                                    TransitionComponent={Transition}\n                                    keepMounted\n                                    onClose={handleEventForm}\n                                    aria-labelledby=\"alert-dialog-slide-title\"\n                                    aria-describedby=\"alert-dialog-slide-description\"\n                                >\n                                    <DialogTitle>Add Notification Event Form</DialogTitle>\n                                    <DialogContent>\n                                    <DialogContentText>\n                                        <TextField label=\"Title\" variant=\"outlined\" onChange = {handleTitleChange} fullWidth required />\n                                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                            <KeyboardDatePicker\n                                                margin=\"normal\"\n                                                id=\"date-picker-dialog\"\n                                                label=\"Select a Date\"\n                                                format=\"MM/dd/yyyy\"\n                                                value={selectedDate}\n                                                fullWidth\n                                                onChange={handleSelectedDate}\n                                                KeyboardButtonProps={{\n                                                    'aria-label': 'change date',\n                                                }}/>\n                                            <KeyboardTimePicker\n                                            margin=\"normal\"\n                                            id=\"time-picker\"\n                                            label=\"Select a Time\"\n                                            value={selectedTime}\n                                            fullWidth\n                                            onChange={handleSelectedTime}\n                                            KeyboardButtonProps={{\n                                                'aria-label': 'change time',\n                                            }}/>\n                                        </MuiPickersUtilsProvider>\n                                        <TextField label=\"Description\" variant=\"outlined\" onChange = {handleDescriptionChange} fullWidth required />\n                                    </DialogContentText>\n                                    </DialogContent>\n                                    <DialogActions>\n                                    <Button onClick={handleEventForm} color=\"primary\">\n                                        Close\n                                    </Button>\n                                    <Button onClick={handleAddPatientEvent} variant=\"contained\" color=\"primary\">\n                                        Submit\n                                    </Button>\n                                    </DialogActions>\n                                </Dialog>\n                                <Dialog\n                                    open={openDeleteEventForm}\n                                    TransitionComponent={Transition}\n                                    keepMounted\n                                    onClose={handleDeleteEventForm}\n                                    aria-labelledby=\"alert-dialog-slide-title\"\n                                    aria-describedby=\"alert-dialog-slide-description\"\n                                >\n                                    <DialogTitle>Delete Notification Event Form</DialogTitle>\n                                    <DialogContent>\n                                    <DialogContentText>\n                                    <FormControl className=\"selectInput\">\n                                        <InputLabel>Select an event...</InputLabel>\n                                        <Select\n                                        labelId=\"demo-simple-select-label\"\n                                        value={eventId}\n                                        onChange={handleNewEventId}\n                                        >\n                                        {patientEvents.length !== 0 ? patientEvents.map((event) => {\n                                            return <MenuItem value={event._id}>{`${event.title} at ${dayMonthYear(new Date(event.notifyAt))} ${new Date(event.notifyAt).toLocaleTimeString(navigator.language, {\n                                                hour: '2-digit',\n                                                minute:'2-digit'\n                                              })}`}</MenuItem>\n                                        }): \"No Events Found\"}\n                                        </Select>\n                                    </FormControl>\n                                    </DialogContentText>\n                                    </DialogContent>\n                                    <DialogActions>\n                                    <Button onClick={handleDeleteEventForm} color=\"primary\">\n                                        Close\n                                    </Button>\n                                    <Button onClick={handleDeletePatientEvent} variant=\"contained\" color=\"primary\">\n                                        Delete\n                                    </Button>\n                                    </DialogActions>\n                                </Dialog>\n                            </div>\n                        </div>\n                    </Grid>\n                    <Grid item xs={8} sm={8} md={5} style={{marginLeft:'50px'}} className=\"widgetContainer\">\n                        <div className=\"scheduleLabel\">\n                            <Typography variant=\"h4\">\n                                Assigned Tutorials<Button variant=\"outlined\" className=\"addMinusBtns\" onClick={handleTutorialForm}><AddIcon/></Button>\n                                <Button variant=\"outlined\" className=\"addMinusBtns\"><RemoveIcon/></Button>\n                            </Typography>  \n                        </div>\n                        <div className=\"scheduleWidget\">\n                            {<TutorialsList classes={classes}></TutorialsList>}\n                            <Dialog\n                                    open={openTutorialForm}\n                                    TransitionComponent={Transition}\n                                    keepMounted\n                                    onClose={handleTutorialForm}\n                                    aria-labelledby=\"alert-dialog-slide-title\"\n                                    aria-describedby=\"alert-dialog-slide-description\"\n                            >\n                                <DialogTitle>Add Tutorial Form - Tutorial Info</DialogTitle>\n                                    <DialogContent>\n                                    <DialogContentText>\n                                        <TextField name=\"tutorialName\" label=\"Tutorial Name\" variant=\"outlined\" value={tutorialName} onChange={handleTutorialName} fullWidth required />\n                                        <TextField name=\"tutorialDescription\" label=\"Tutorial Description\" variant=\"outlined\" value={tutorialDescription} onChange={handleTutorialDescription} fullWidth required />\n                                        <TextField name=\"tutorialDuration\" label=\"Tutorial Duration\" variant=\"outlined\" value={tutorialDuration} onChange={handleTutorialDuration} fullWidth required />\n                                    </DialogContentText>\n                                    </DialogContent>\n                                    <DialogActions>\n                                    <Button onClick={handleTutorialForm} color=\"primary\">\n                                        Close\n                                    </Button>\n                                    <Button onClick={handleTutorialFormTwo} variant=\"contained\" color=\"primary\">\n                                        Next\n                                    </Button>\n                                    </DialogActions>\n                            </Dialog>\n                            <Dialog\n                                    open={openTutorialFormTwo}\n                                    TransitionComponent={Transition}\n                                    keepMounted\n                                    onClose={handleTutorialFormTwo}\n                                    aria-labelledby=\"alert-dialog-slide-title\"\n                                    aria-describedby=\"alert-dialog-slide-description\"\n                            >\n                                <DialogTitle>Add Tutorial Form - Tutorial Info</DialogTitle>\n                                    <DialogContent>\n                                    <DialogContentText>\n                                    {tutorialPlaylist.map((video, index) => {\n                                            return <Grid container>\n                                            {gridBools[index] === false ? <Grid xs={11}>\n                                                <Typography variant=\"subtitle2\" fullWidth>{`${video.name === \"\" ? \"New Video\" : video.name }`}</Typography>\n                                                <TextField className=\"videoInput\" required fullWidth name=\"name\" label=\"Name of Video\" variant=\"outlined\" value={video.name} onChange={event => handleChangeInput(index, event)}/>\n                                                <TextField className=\"videoInput\" required fullWidth name=\"description\" label=\"Video description\" variant=\"outlined\" value={video.description} onChange={event => handleChangeInput(index, event)}/>\n                                                <TextField className=\"videoInput\" required fullWidth name=\"pharmacistNotes\" label=\"Pharmacist Notes\" variant=\"outlined\" value={video.pharmacistNotes} onChange={event => handleChangeInput(index, event)}/>\n                                                <TextField className=\"videoInput\" required fullWidth name=\"infusionNotes\" label=\"Infusion Notes\" variant=\"outlined\" value={video.infusionNotes} onChange={event => handleChangeInput(index, event)}/>\n                                                <TextField className=\"videoInput\" required fullWidth name=\"stepList\" label=\"Instructions separated by a semi-colon\" variant=\"outlined\" value={video.stepList} onChange={event => handleChangeInput(index, event)}/>\n                                                <TextField className=\"videoInput\" required fullWidth name=\"url\" label=\"Single Youtube Video URL\" variant=\"outlined\" value={video.video.url} onChange={event => handleChangeInput(index, event)}/>\n                                                <TextField className=\"videoInput\" required fullWidth name=\"videoDescription\" label=\"Description of video\" variant=\"outlined\" value={video.video.description} onChange={event => handleChangeInput(index, event)}/>\n                                            </Grid> : <Grid xs={11}><Typography variant=\"subtitle2\" fullWidth>{`${video.name === \"\" ? \"New Video\" : video.name }`}</Typography></Grid>}\n                                            {gridBools[index] === false ? <Grid xs={1}><Button onClick={() => toggleGridBools(index)}><ExpandMoreIcon/></Button></Grid> :\n                                            <Grid xs={1}>\n                                                <Button onClick={() => toggleGridBools(index)}><KeyboardArrowRightIcon/></Button>\n                                                <Button disabled={tutorialPlaylist.length === 1} onClick={() => handleRemoveFields(index)}><RemoveIcon/></Button>\n                                                <Button onClick={handleAddTutorialField}><AddIcon/></Button>\n                                            </Grid>}\n                                            </Grid>\n                                        })}\n                                    </DialogContentText>\n                                    </DialogContent>\n                                    <DialogActions>\n                                    <Button onClick={handleTutorialFormTwo} color=\"primary\">\n                                        Back\n                                    </Button>\n                                    <Button onClick={handleAddPatientTutorial} variant=\"contained\" color=\"primary\">\n                                        Submit\n                                    </Button>\n                                    </DialogActions>\n                            </Dialog>\n                        </div>\n                    </Grid>\n                </Grid>\n            </ThemeProvider>\n        </div>\n    )\n}\n/**\n\n */","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/patientTutorials/tutorial.js",["247","248","249","250","251","252","253"],"import React,{useState, useEffect} from \"react\";\nimport {Grid, Typography} from \"@material-ui/core\";\nimport \"./tutorial.css\";\nimport Tutorial from \"../TutorialPage/tutorial\";\nimport axios from 'axios';\n\nexport default function PatientTutorials(){\n\n    const [tutorials, setTutorials] = useState([]);\n    const [tutorialsClicked, setTutorialsClicked] = useState([]);\n    const [tutorialsLoaded, setTutorialsLoaded] = useState(false);\n\n    useEffect(() => {\n        let tutorialsArr = [];\n        let tutorialsBoolArr = [];\n        axios.get('http://localhost:5000/tutorials/all').then(res=>{\n            tutorialsArr = res.data;\n            setTutorials(tutorialsArr);\n            for (let i = 0; i < tutorialsArr.length; i++){\n                tutorialsBoolArr.push(true);\n            }\n            setTutorialsClicked(tutorialsBoolArr);\n            setTutorialsLoaded(true);\n        })\n    },[])\n\n    const handleTutorialClicked = (index) => {\n        let clickedArr = [];\n        for (let i = 0; i < tutorials.length; i++){\n            if (i !== index){\n                clickedArr.push(false);\n            }\n        }\n        setTutorialsClicked(clickedArr);\n    }\n    \n    return (\n        <Grid>\n            {tutorials.map((item, index) => {\n                return <Tutorial num={index}/>    \n            })}\n        </Grid>\n    )\n}",["254","255"],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/UserContext.js",[],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/navPharmResponsive/navPharmResponsive.js",["256","257","258","259"],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/homePage/pharmacist/pharmacistHome.js",["260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278"],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/PatientContext.js",[],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/authNav/authNav.js",["279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298"],"import React, {useState, useContext} from 'react';\nimport { UserContext } from \"../../UserContext\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CloseIcon from '@material-ui/icons/Close';\nimport logo from \"../../innovation.png\";\nimport \"../patientNav/patientNav.css\"\nimport axios from 'axios';\nimport {\n    BrowserRouter as Router,\n    Route,\n    Link\n  } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    title:{\n        flexGrow: 1,\n    }\n}));\n\nexport default function PatientNav(){\n    const classes = useStyles();\n    \n    const [profileAnchor, setProfileAnchor] = React.useState(null);\n    const [hamburgerAnchor, setHamburgerAnchor] = React.useState(null);\n    const openProfile = Boolean(profileAnchor);\n    const openHamburger = Boolean(hamburgerAnchor);\n    const [hbIcon, setHbIcon] = React.useState(true);\n    const [closeIcon, setCloseIcon]= React.useState(false);\n\n    const handleProfile = (event) => {\n        setProfileAnchor(event.currentTarget);\n    };\n\n    const handleCloseProfile = () => {\n        setProfileAnchor(null);\n    };\n\n    const handleHamburger = (event) => {\n        setHamburgerAnchor(event.currentTarget);\n        setHbIcon(false);\n        setCloseIcon(true);\n    };\n\n    const handleHamburgerClose = () => {\n        setHamburgerAnchor(null);\n        setHbIcon(true);\n        setCloseIcon(false);\n    }\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar className=\"navStyling\">\n                    <Link to=\"/loginSignup\"><IconButton edge=\"start\" id=\"logoIcon\" color=\"#00529b\" aria-label=\"menu\">\n                        <img src={logo} alt=\"Logo\" className=\"siteIcon\"/>\n                    </IconButton></Link>\n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n}","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/components/pharmFooter/footer.js",["299","300","301"],"import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport '../footer/footer.css';\n\n\nexport default function footerBar() {\n\treturn (\n\t\t<div className=\"footerContainer\">\n\t\t\t<div className=\"liveHelpBar\">\n\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t<a className=\"footerLink\">Patient Messages</a>\n\t\t\t\t</Typography>\n\t\t\t</div>\n\t\t</div>\n\t);\n}","/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/TutorialContext.js",[],"/Users/abdulosman/Documents/GitHub/InnovationLab-UCI-Capstone/gap-project/client/src/pages/TutorialList/tutorialList.js",["302","303","304","305","306","307","308","309"],{"ruleId":"310","replacedBy":"311"},{"ruleId":"312","replacedBy":"313"},{"ruleId":"314","severity":1,"message":"315","line":22,"column":8,"nodeType":"316","messageId":"317","endLine":22,"endColumn":21},{"ruleId":"314","severity":1,"message":"318","line":3,"column":8,"nodeType":"316","messageId":"317","endLine":3,"endColumn":18},{"ruleId":"314","severity":1,"message":"319","line":4,"column":8,"nodeType":"316","messageId":"317","endLine":4,"endColumn":16},{"ruleId":"320","severity":1,"message":"321","line":13,"column":5,"nodeType":"322","endLine":13,"endColumn":40},{"ruleId":"314","severity":1,"message":"323","line":2,"column":8,"nodeType":"316","messageId":"317","endLine":2,"endColumn":18},{"ruleId":"314","severity":1,"message":"318","line":3,"column":8,"nodeType":"316","messageId":"317","endLine":3,"endColumn":18},{"ruleId":"314","severity":1,"message":"319","line":4,"column":8,"nodeType":"316","messageId":"317","endLine":4,"endColumn":16},{"ruleId":"314","severity":1,"message":"324","line":2,"column":8,"nodeType":"316","messageId":"317","endLine":2,"endColumn":18},{"ruleId":"314","severity":1,"message":"325","line":3,"column":8,"nodeType":"316","messageId":"317","endLine":3,"endColumn":17},{"ruleId":"314","severity":1,"message":"323","line":4,"column":8,"nodeType":"316","messageId":"317","endLine":4,"endColumn":18},{"ruleId":"314","severity":1,"message":"326","line":6,"column":22,"nodeType":"316","messageId":"317","endLine":6,"endColumn":28},{"ruleId":"314","severity":1,"message":"327","line":7,"column":5,"nodeType":"316","messageId":"317","endLine":7,"endColumn":10},{"ruleId":"314","severity":1,"message":"326","line":12,"column":20,"nodeType":"316","messageId":"317","endLine":12,"endColumn":26},{"ruleId":"314","severity":1,"message":"327","line":13,"column":3,"nodeType":"316","messageId":"317","endLine":13,"endColumn":8},{"ruleId":"314","severity":1,"message":"328","line":55,"column":12,"nodeType":"316","messageId":"317","endLine":55,"endColumn":25},{"ruleId":"314","severity":1,"message":"329","line":66,"column":26,"nodeType":"316","messageId":"317","endLine":66,"endColumn":41},{"ruleId":"314","severity":1,"message":"330","line":90,"column":11,"nodeType":"316","messageId":"317","endLine":90,"endColumn":20},{"ruleId":"331","severity":1,"message":"332","line":259,"column":21,"nodeType":"322","endLine":259,"endColumn":106},{"ruleId":"314","severity":1,"message":"333","line":4,"column":10,"nodeType":"316","messageId":"317","endLine":4,"endColumn":20},{"ruleId":"314","severity":1,"message":"334","line":18,"column":25,"nodeType":"316","messageId":"317","endLine":18,"endColumn":28},{"ruleId":"314","severity":1,"message":"335","line":64,"column":18,"nodeType":"316","messageId":"317","endLine":64,"endColumn":25},{"ruleId":"314","severity":1,"message":"335","line":26,"column":18,"nodeType":"316","messageId":"317","endLine":26,"endColumn":25},{"ruleId":"336","severity":1,"message":"337","line":79,"column":8,"nodeType":"338","endLine":79,"endColumn":10,"suggestions":"339"},{"ruleId":"331","severity":1,"message":"332","line":94,"column":41,"nodeType":"322","endLine":94,"endColumn":213},{"ruleId":"314","severity":1,"message":"323","line":4,"column":10,"nodeType":"316","messageId":"317","endLine":4,"endColumn":20},{"ruleId":"314","severity":1,"message":"340","line":5,"column":10,"nodeType":"316","messageId":"317","endLine":5,"endColumn":17},{"ruleId":"314","severity":1,"message":"341","line":9,"column":8,"nodeType":"316","messageId":"317","endLine":9,"endColumn":18},{"ruleId":"314","severity":1,"message":"342","line":10,"column":8,"nodeType":"316","messageId":"317","endLine":10,"endColumn":16},{"ruleId":"314","severity":1,"message":"343","line":11,"column":8,"nodeType":"316","messageId":"317","endLine":11,"endColumn":19},{"ruleId":"314","severity":1,"message":"344","line":12,"column":8,"nodeType":"316","messageId":"317","endLine":12,"endColumn":14},{"ruleId":"314","severity":1,"message":"345","line":34,"column":13,"nodeType":"316","messageId":"317","endLine":34,"endColumn":17},{"ruleId":"314","severity":1,"message":"346","line":45,"column":12,"nodeType":"316","messageId":"317","endLine":45,"endColumn":24},{"ruleId":"314","severity":1,"message":"330","line":46,"column":11,"nodeType":"316","messageId":"317","endLine":46,"endColumn":20},{"ruleId":"314","severity":1,"message":"347","line":59,"column":11,"nodeType":"316","messageId":"317","endLine":59,"endColumn":27},{"ruleId":"314","severity":1,"message":"348","line":63,"column":12,"nodeType":"316","messageId":"317","endLine":63,"endColumn":21},{"ruleId":"349","severity":1,"message":"350","line":66,"column":7,"nodeType":"351","messageId":"352","endLine":83,"endColumn":8},{"ruleId":"331","severity":1,"message":"332","line":93,"column":15,"nodeType":"322","endLine":93,"endColumn":100},{"ruleId":"314","severity":1,"message":"326","line":12,"column":20,"nodeType":"316","messageId":"317","endLine":12,"endColumn":26},{"ruleId":"314","severity":1,"message":"327","line":13,"column":3,"nodeType":"316","messageId":"317","endLine":13,"endColumn":8},{"ruleId":"314","severity":1,"message":"353","line":38,"column":9,"nodeType":"316","messageId":"317","endLine":38,"endColumn":21},{"ruleId":"320","severity":1,"message":"321","line":70,"column":13,"nodeType":"322","endLine":70,"endColumn":45},{"ruleId":"314","severity":1,"message":"323","line":2,"column":8,"nodeType":"316","messageId":"317","endLine":2,"endColumn":18},{"ruleId":"314","severity":1,"message":"318","line":3,"column":8,"nodeType":"316","messageId":"317","endLine":3,"endColumn":18},{"ruleId":"314","severity":1,"message":"319","line":4,"column":8,"nodeType":"316","messageId":"317","endLine":4,"endColumn":16},{"ruleId":"310","replacedBy":"354"},{"ruleId":"312","replacedBy":"355"},{"ruleId":"314","severity":1,"message":"326","line":16,"column":22,"nodeType":"316","messageId":"317","endLine":16,"endColumn":28},{"ruleId":"314","severity":1,"message":"327","line":17,"column":5,"nodeType":"316","messageId":"317","endLine":17,"endColumn":10},{"ruleId":"314","severity":1,"message":"356","line":35,"column":18,"nodeType":"316","messageId":"317","endLine":35,"endColumn":25},{"ruleId":"314","severity":1,"message":"335","line":11,"column":18,"nodeType":"316","messageId":"317","endLine":11,"endColumn":25},{"ruleId":"349","severity":1,"message":"350","line":15,"column":9,"nodeType":"351","messageId":"352","endLine":30,"endColumn":10},{"ruleId":"314","severity":1,"message":"357","line":35,"column":12,"nodeType":"316","messageId":"317","endLine":35,"endColumn":20},{"ruleId":"336","severity":1,"message":"358","line":43,"column":16,"nodeType":"338","endLine":43,"endColumn":26},{"ruleId":"349","severity":1,"message":"350","line":56,"column":9,"nodeType":"351","messageId":"352","endLine":81,"endColumn":10},{"ruleId":"349","severity":1,"message":"350","line":106,"column":9,"nodeType":"351","messageId":"352","endLine":121,"endColumn":10},{"ruleId":"314","severity":1,"message":"359","line":12,"column":9,"nodeType":"316","messageId":"317","endLine":12,"endColumn":13},{"ruleId":"314","severity":1,"message":"360","line":12,"column":15,"nodeType":"316","messageId":"317","endLine":12,"endColumn":24},{"ruleId":"314","severity":1,"message":"361","line":12,"column":26,"nodeType":"316","messageId":"317","endLine":12,"endColumn":37},{"ruleId":"314","severity":1,"message":"362","line":15,"column":8,"nodeType":"316","messageId":"317","endLine":15,"endColumn":27},{"ruleId":"314","severity":1,"message":"363","line":28,"column":8,"nodeType":"316","messageId":"317","endLine":28,"endColumn":13},{"ruleId":"314","severity":1,"message":"345","line":84,"column":12,"nodeType":"316","messageId":"317","endLine":84,"endColumn":16},{"ruleId":"314","severity":1,"message":"335","line":84,"column":18,"nodeType":"316","messageId":"317","endLine":84,"endColumn":25},{"ruleId":"314","severity":1,"message":"364","line":85,"column":22,"nodeType":"316","messageId":"317","endLine":85,"endColumn":33},{"ruleId":"336","severity":1,"message":"365","line":91,"column":7,"nodeType":"338","endLine":91,"endColumn":9,"suggestions":"366"},{"ruleId":"314","severity":1,"message":"323","line":2,"column":8,"nodeType":"316","messageId":"317","endLine":2,"endColumn":18},{"ruleId":"314","severity":1,"message":"318","line":3,"column":8,"nodeType":"316","messageId":"317","endLine":3,"endColumn":18},{"ruleId":"314","severity":1,"message":"319","line":4,"column":8,"nodeType":"316","messageId":"317","endLine":4,"endColumn":16},{"ruleId":"314","severity":1,"message":"367","line":3,"column":8,"nodeType":"316","messageId":"317","endLine":3,"endColumn":12},{"ruleId":"314","severity":1,"message":"323","line":4,"column":8,"nodeType":"316","messageId":"317","endLine":4,"endColumn":18},{"ruleId":"314","severity":1,"message":"368","line":6,"column":8,"nodeType":"316","messageId":"317","endLine":6,"endColumn":24},{"ruleId":"314","severity":1,"message":"369","line":1,"column":16,"nodeType":"316","messageId":"317","endLine":1,"endColumn":24},{"ruleId":"314","severity":1,"message":"370","line":1,"column":26,"nodeType":"316","messageId":"317","endLine":1,"endColumn":35},{"ruleId":"314","severity":1,"message":"335","line":9,"column":18,"nodeType":"316","messageId":"317","endLine":9,"endColumn":25},{"ruleId":"314","severity":1,"message":"371","line":1,"column":38,"nodeType":"316","messageId":"317","endLine":1,"endColumn":49},{"ruleId":"314","severity":1,"message":"372","line":2,"column":32,"nodeType":"316","messageId":"317","endLine":2,"endColumn":41},{"ruleId":"314","severity":1,"message":"367","line":9,"column":8,"nodeType":"316","messageId":"317","endLine":9,"endColumn":12},{"ruleId":"373","severity":1,"message":"374","line":26,"column":9,"nodeType":"375","messageId":"376","endLine":26,"endColumn":24},{"ruleId":"314","severity":1,"message":"377","line":66,"column":11,"nodeType":"316","messageId":"317","endLine":66,"endColumn":16},{"ruleId":"336","severity":1,"message":"378","line":92,"column":15,"nodeType":"379","endLine":96,"endColumn":6},{"ruleId":"314","severity":1,"message":"372","line":8,"column":32,"nodeType":"316","messageId":"317","endLine":8,"endColumn":41},{"ruleId":"373","severity":1,"message":"374","line":50,"column":9,"nodeType":"375","messageId":"376","endLine":50,"endColumn":24},{"ruleId":"314","severity":1,"message":"377","line":82,"column":29,"nodeType":"316","messageId":"317","endLine":82,"endColumn":34},{"ruleId":"314","severity":1,"message":"380","line":85,"column":21,"nodeType":"316","messageId":"317","endLine":85,"endColumn":31},{"ruleId":"314","severity":1,"message":"345","line":118,"column":12,"nodeType":"316","messageId":"317","endLine":118,"endColumn":16},{"ruleId":"314","severity":1,"message":"335","line":118,"column":18,"nodeType":"316","messageId":"317","endLine":118,"endColumn":25},{"ruleId":"314","severity":1,"message":"380","line":119,"column":21,"nodeType":"316","messageId":"317","endLine":119,"endColumn":31},{"ruleId":"381","severity":1,"message":"382","line":250,"column":35,"nodeType":"379","messageId":"383","endLine":250,"endColumn":37},{"ruleId":"381","severity":1,"message":"382","line":260,"column":35,"nodeType":"379","messageId":"383","endLine":260,"endColumn":37},{"ruleId":"381","severity":1,"message":"382","line":317,"column":38,"nodeType":"379","messageId":"383","endLine":317,"endColumn":40},{"ruleId":"381","severity":1,"message":"382","line":331,"column":38,"nodeType":"379","messageId":"383","endLine":331,"endColumn":40},{"ruleId":"336","severity":1,"message":"384","line":358,"column":7,"nodeType":"338","endLine":358,"endColumn":9,"suggestions":"385"},{"ruleId":"314","severity":1,"message":"323","line":3,"column":15,"nodeType":"316","messageId":"317","endLine":3,"endColumn":25},{"ruleId":"314","severity":1,"message":"363","line":6,"column":8,"nodeType":"316","messageId":"317","endLine":6,"endColumn":13},{"ruleId":"314","severity":1,"message":"335","line":10,"column":18,"nodeType":"316","messageId":"317","endLine":10,"endColumn":25},{"ruleId":"314","severity":1,"message":"386","line":14,"column":12,"nodeType":"316","messageId":"317","endLine":14,"endColumn":28},{"ruleId":"314","severity":1,"message":"387","line":15,"column":12,"nodeType":"316","messageId":"317","endLine":15,"endColumn":27},{"ruleId":"336","severity":1,"message":"388","line":26,"column":7,"nodeType":"338","endLine":26,"endColumn":9,"suggestions":"389"},{"ruleId":"314","severity":1,"message":"390","line":28,"column":11,"nodeType":"316","messageId":"317","endLine":28,"endColumn":32},{"ruleId":"310","replacedBy":"391"},{"ruleId":"312","replacedBy":"392"},{"ruleId":"314","severity":1,"message":"363","line":15,"column":8,"nodeType":"316","messageId":"317","endLine":15,"endColumn":13},{"ruleId":"314","severity":1,"message":"326","line":17,"column":22,"nodeType":"316","messageId":"317","endLine":17,"endColumn":28},{"ruleId":"314","severity":1,"message":"327","line":18,"column":5,"nodeType":"316","messageId":"317","endLine":18,"endColumn":10},{"ruleId":"314","severity":1,"message":"356","line":36,"column":18,"nodeType":"316","messageId":"317","endLine":36,"endColumn":25},{"ruleId":"314","severity":1,"message":"326","line":16,"column":22,"nodeType":"316","messageId":"317","endLine":16,"endColumn":28},{"ruleId":"314","severity":1,"message":"393","line":17,"column":5,"nodeType":"316","messageId":"317","endLine":17,"endColumn":11},{"ruleId":"314","severity":1,"message":"327","line":18,"column":5,"nodeType":"316","messageId":"317","endLine":18,"endColumn":10},{"ruleId":"314","severity":1,"message":"335","line":39,"column":18,"nodeType":"316","messageId":"317","endLine":39,"endColumn":25},{"ruleId":"381","severity":1,"message":"382","line":108,"column":30,"nodeType":"379","messageId":"383","endLine":108,"endColumn":32},{"ruleId":"394","severity":1,"message":"395","line":157,"column":54,"nodeType":"396","endLine":157,"endColumn":81},{"ruleId":"394","severity":1,"message":"395","line":160,"column":54,"nodeType":"396","endLine":160,"endColumn":81},{"ruleId":"394","severity":1,"message":"395","line":163,"column":54,"nodeType":"396","endLine":163,"endColumn":81},{"ruleId":"394","severity":1,"message":"395","line":166,"column":54,"nodeType":"396","endLine":166,"endColumn":81},{"ruleId":"394","severity":1,"message":"395","line":169,"column":54,"nodeType":"396","endLine":169,"endColumn":81},{"ruleId":"394","severity":1,"message":"395","line":172,"column":54,"nodeType":"396","endLine":172,"endColumn":81},{"ruleId":"394","severity":1,"message":"395","line":175,"column":54,"nodeType":"396","endLine":175,"endColumn":81},{"ruleId":"394","severity":1,"message":"395","line":181,"column":62,"nodeType":"396","endLine":181,"endColumn":84},{"ruleId":"394","severity":1,"message":"395","line":184,"column":62,"nodeType":"396","endLine":184,"endColumn":84},{"ruleId":"394","severity":1,"message":"395","line":187,"column":62,"nodeType":"396","endLine":187,"endColumn":84},{"ruleId":"394","severity":1,"message":"395","line":190,"column":62,"nodeType":"396","endLine":190,"endColumn":84},{"ruleId":"394","severity":1,"message":"395","line":193,"column":62,"nodeType":"396","endLine":193,"endColumn":84},{"ruleId":"394","severity":1,"message":"395","line":196,"column":62,"nodeType":"396","endLine":196,"endColumn":84},{"ruleId":"394","severity":1,"message":"395","line":199,"column":62,"nodeType":"396","endLine":199,"endColumn":84},{"ruleId":"314","severity":1,"message":"369","line":1,"column":16,"nodeType":"316","messageId":"317","endLine":1,"endColumn":24},{"ruleId":"314","severity":1,"message":"397","line":1,"column":26,"nodeType":"316","messageId":"317","endLine":1,"endColumn":36},{"ruleId":"314","severity":1,"message":"398","line":2,"column":10,"nodeType":"316","messageId":"317","endLine":2,"endColumn":21},{"ruleId":"314","severity":1,"message":"323","line":6,"column":8,"nodeType":"316","messageId":"317","endLine":6,"endColumn":18},{"ruleId":"314","severity":1,"message":"399","line":8,"column":8,"nodeType":"316","messageId":"317","endLine":8,"endColumn":21},{"ruleId":"314","severity":1,"message":"342","line":9,"column":8,"nodeType":"316","messageId":"317","endLine":9,"endColumn":16},{"ruleId":"314","severity":1,"message":"400","line":10,"column":8,"nodeType":"316","messageId":"317","endLine":10,"endColumn":12},{"ruleId":"314","severity":1,"message":"319","line":11,"column":8,"nodeType":"316","messageId":"317","endLine":11,"endColumn":16},{"ruleId":"314","severity":1,"message":"401","line":12,"column":8,"nodeType":"316","messageId":"317","endLine":12,"endColumn":17},{"ruleId":"314","severity":1,"message":"363","line":15,"column":8,"nodeType":"316","messageId":"317","endLine":15,"endColumn":13},{"ruleId":"314","severity":1,"message":"326","line":17,"column":22,"nodeType":"316","messageId":"317","endLine":17,"endColumn":28},{"ruleId":"314","severity":1,"message":"327","line":18,"column":5,"nodeType":"316","messageId":"317","endLine":18,"endColumn":10},{"ruleId":"314","severity":1,"message":"402","line":36,"column":11,"nodeType":"316","messageId":"317","endLine":36,"endColumn":22},{"ruleId":"314","severity":1,"message":"403","line":37,"column":11,"nodeType":"316","messageId":"317","endLine":37,"endColumn":24},{"ruleId":"314","severity":1,"message":"404","line":38,"column":12,"nodeType":"316","messageId":"317","endLine":38,"endColumn":18},{"ruleId":"314","severity":1,"message":"405","line":39,"column":12,"nodeType":"316","messageId":"317","endLine":39,"endColumn":21},{"ruleId":"314","severity":1,"message":"406","line":41,"column":11,"nodeType":"316","messageId":"317","endLine":41,"endColumn":24},{"ruleId":"314","severity":1,"message":"407","line":45,"column":11,"nodeType":"316","messageId":"317","endLine":45,"endColumn":29},{"ruleId":"314","severity":1,"message":"408","line":49,"column":11,"nodeType":"316","messageId":"317","endLine":49,"endColumn":26},{"ruleId":"314","severity":1,"message":"409","line":55,"column":11,"nodeType":"316","messageId":"317","endLine":55,"endColumn":31},{"ruleId":"314","severity":1,"message":"318","line":3,"column":8,"nodeType":"316","messageId":"317","endLine":3,"endColumn":18},{"ruleId":"314","severity":1,"message":"319","line":4,"column":8,"nodeType":"316","messageId":"317","endLine":4,"endColumn":16},{"ruleId":"320","severity":1,"message":"410","line":13,"column":5,"nodeType":"322","endLine":13,"endColumn":31},{"ruleId":"314","severity":1,"message":"370","line":1,"column":26,"nodeType":"316","messageId":"317","endLine":1,"endColumn":35},{"ruleId":"314","severity":1,"message":"360","line":5,"column":21,"nodeType":"316","messageId":"317","endLine":5,"endColumn":30},{"ruleId":"314","severity":1,"message":"326","line":15,"column":22,"nodeType":"316","messageId":"317","endLine":15,"endColumn":28},{"ruleId":"314","severity":1,"message":"327","line":16,"column":5,"nodeType":"316","messageId":"317","endLine":16,"endColumn":10},{"ruleId":"314","severity":1,"message":"335","line":25,"column":18,"nodeType":"316","messageId":"317","endLine":25,"endColumn":25},{"ruleId":"314","severity":1,"message":"411","line":26,"column":12,"nodeType":"316","messageId":"317","endLine":26,"endColumn":20},{"ruleId":"381","severity":1,"message":"382","line":31,"column":41,"nodeType":"379","messageId":"383","endLine":31,"endColumn":43},{"ruleId":"331","severity":1,"message":"332","line":48,"column":25,"nodeType":"322","endLine":48,"endColumn":92},"no-native-reassign",["412"],"no-negated-in-lhs",["413"],"no-unused-vars","'PharmSettings' is defined but never used.","Identifier","unusedVar","'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Typography' is defined but never used.","'SignUpForm' is defined but never used.","'LoginForm' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'signupLanding' is assigned a value but never used.","'setLoginLanding' is assigned a value but never used.","'toggleOne' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'makeStyles' is defined but never used.","'key' is assigned a value but never used.","'setUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getNextInfusion', 'getTodaysSchedule', and 'user.events.length'. Either include them or remove the dependency array.","ArrayExpression",["414"],"'Divider' is defined but never used.","'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'FormControl' is defined but never used.","'Select' is defined but never used.","'user' is assigned a value but never used.","'loginLanding' is assigned a value but never used.","'handleRoleChange' is assigned a value but never used.","'loginForm' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'handleChange' is assigned a value but never used.",["412"],["413"],"'setAuth' is assigned a value but never used.","'earliest' is assigned a value but never used.","Assignments to the 'week' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'Card' is defined but never used.","'CardMedia' is defined but never used.","'CardContent' is defined but never used.","'ArrowForwardIosIcon' is defined but never used.","'axios' is defined but never used.","'setTutorial' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'tutorial'. Either include it or remove the dependency array.",["415"],"'Grid' is defined but never used.","'ErrorOutlineIcon' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'useCallback' is defined but never used.","'withTheme' is defined but never used.","no-dupe-keys","Duplicate key 'backgroundColor'.","ObjectExpression","unexpected","'theme' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'setPatient' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has missing dependencies: 'getTodaysSchedule' and 'patient'. Either include them or remove the dependency array.",["416"],"'tutorialsClicked' is assigned a value but never used.","'tutorialsLoaded' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user.infusionArray'. Either include it or remove the dependency array.",["417"],"'handleTutorialClicked' is assigned a value but never used.",["412"],["413"],"'Switch' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useContext' is defined but never used.","'UserContext' is defined but never used.","'AccountCircle' is defined but never used.","'Menu' is defined but never used.","'CloseIcon' is defined but never used.","'openProfile' is assigned a value but never used.","'openHamburger' is assigned a value but never used.","'hbIcon' is assigned a value but never used.","'closeIcon' is assigned a value but never used.","'handleProfile' is assigned a value but never used.","'handleCloseProfile' is assigned a value but never used.","'handleHamburger' is assigned a value but never used.","'handleHamburgerClose' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'tutorial' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"418","fix":"419"},{"desc":"420","fix":"421"},{"desc":"422","fix":"423"},{"desc":"424","fix":"425"},"Update the dependencies array to be: [getNextInfusion, getTodaysSchedule, user.events.length]",{"range":"426","text":"427"},"Update the dependencies array to be: [tutorial]",{"range":"428","text":"429"},"Update the dependencies array to be: [getTodaysSchedule, patient]",{"range":"430","text":"431"},"Update the dependencies array to be: [user.infusionArray]",{"range":"432","text":"433"},[2647,2649],"[getNextInfusion, getTodaysSchedule, user.events.length]",[2913,2915],"[tutorial]",[13067,13069],"[getTodaysSchedule, patient]",[883,885],"[user.infusionArray]"]